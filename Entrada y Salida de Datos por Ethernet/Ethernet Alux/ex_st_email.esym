D G "__PCH__" 0 0 ""4.099""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""15-feb-11""
D G "__TIME__" 0 0 ""09:14:45"" "////"
D G "STACK_USE_CCS_PICNET" 0 76 "0" "PICNET rev 0-2 board sold by CCS.  Has a 56K modem and a 10BaseT Network IC and 18F6620"
D G "STACK_USE_CCS_PICNET3" 0 77 "0" "PICNET rv 3 and up board sold by CCS.  Has a 56K modem and a 10BaseT Network IC and 18F8622"
D G "STACK_USE_CCS_PICENS" 0 78 "1" "CCS PICENS (Embedded Ethernet) development kit.  18F4620 + ENC28J60"
D G "STACK_USE_CCS_PICEEC" 0 79 "0" "CCS PICEEC (Embedded Ethernet) development kit.  18F67J60"
D G "STACK_USE_MAC" 0 82 "1" "use the nic card"
D G "STACK_USE_PPP" 0 83 "0" "use PPP on modem"
D G "STACK_USE_SLIP" 0 84 "0" "use slip (NOT TESTED)"
d G "PIN_A0" 1 25 "31744"
d G "PIN_A1" 1 26 "31745"
d G "PIN_A2" 1 27 "31746"
d G "PIN_A3" 1 28 "31747"
d G "PIN_A4" 1 29 "31748"
d G "PIN_A5" 1 30 "31749"
d G "PIN_A6" 1 31 "31750"
d G "PIN_A7" 1 32 "31751"
d G "PIN_B0" 1 34 "31752"
d G "PIN_B1" 1 35 "31753"
d G "PIN_B2" 1 36 "31754"
d G "PIN_B3" 1 37 "31755"
d G "PIN_B4" 1 38 "31756"
d G "PIN_B5" 1 39 "31757"
d G "PIN_B6" 1 40 "31758"
d G "PIN_B7" 1 41 "31759"
d G "PIN_C0" 1 43 "31760"
d G "PIN_C1" 1 44 "31761"
d G "PIN_C2" 1 45 "31762"
d G "PIN_C3" 1 46 "31763"
d G "PIN_C4" 1 47 "31764"
d G "PIN_C5" 1 48 "31765"
d G "PIN_C6" 1 49 "31766"
d G "PIN_C7" 1 50 "31767"
d G "PIN_D0" 1 52 "31768"
d G "PIN_D1" 1 53 "31769"
d G "PIN_D2" 1 54 "31770"
d G "PIN_D3" 1 55 "31771"
d G "PIN_D4" 1 56 "31772"
d G "PIN_D5" 1 57 "31773"
d G "PIN_D6" 1 58 "31774"
d G "PIN_D7" 1 59 "31775"
d G "PIN_E0" 1 61 "31776"
d G "PIN_E1" 1 62 "31777"
d G "PIN_E2" 1 63 "31778"
d G "PIN_E3" 1 64 "31779"
d G "FALSE" 1 67 "0"
d G "TRUE" 1 68 "1"
d G "BYTE" 1 70 "int8"
d G "BOOLEAN" 1 71 "int1"
d G "getc" 1 73 "getch"
d G "fgetc" 1 74 "getch"
d G "getchar" 1 75 "getch"
d G "putc" 1 76 "putchar"
d G "fputc" 1 77 "putchar"
d G "fgets" 1 78 "gets"
d G "fputs" 1 79 "puts"
d G "WDT_TIMEOUT" 1 85 "7"
d G "MCLR_FROM_SLEEP" 1 86 "11"
d G "MCLR_FROM_RUN" 1 87 "15"
d G "NORMAL_POWER_UP" 1 88 "12"
d G "BROWNOUT_RESTART" 1 89 "14"
d G "WDT_FROM_SLEEP" 1 90 "3"
d G "RESET_INSTRUCTION" 1 91 "0"
d G "RTCC_INTERNAL" 1 97 "0"
d G "RTCC_EXT_L_TO_H" 1 98 "32"
d G "RTCC_EXT_H_TO_L" 1 99 "48"
d G "RTCC_DIV_1" 1 101 "8"
d G "RTCC_DIV_2" 1 102 "0"
d G "RTCC_DIV_4" 1 103 "1"
d G "RTCC_DIV_8" 1 104 "2"
d G "RTCC_DIV_16" 1 105 "3"
d G "RTCC_DIV_32" 1 106 "4"
d G "RTCC_DIV_64" 1 107 "5"
d G "RTCC_DIV_128" 1 108 "6"
d G "RTCC_DIV_256" 1 109 "7"
d G "RTCC_OFF" 1 111 "0x80"
d G "RTCC_8_BIT" 1 113 "0x40"
d G "WDT_ON" 1 124 "0x100"
d G "WDT_OFF" 1 125 "0"
d G "T1_DISABLED" 1 131 "0"
d G "T1_INTERNAL" 1 132 "0x85"
d G "T1_EXTERNAL" 1 133 "0x87"
d G "T1_EXTERNAL_SYNC" 1 134 "0x83"
d G "T1_CLK_OUT" 1 136 "8"
d G "T1_DIV_BY_1" 1 138 "0"
d G "T1_DIV_BY_2" 1 139 "0x10"
d G "T1_DIV_BY_4" 1 140 "0x20"
d G "T1_DIV_BY_8" 1 141 "0x30"
d G "T2_DISABLED" 1 146 "0"
d G "T2_DIV_BY_1" 1 147 "4"
d G "T2_DIV_BY_4" 1 148 "5"
d G "T2_DIV_BY_16" 1 149 "6"
d G "T3_DISABLED" 1 155 "0"
d G "T3_INTERNAL" 1 156 "0x85"
d G "T3_EXTERNAL" 1 157 "0x87"
d G "T3_EXTERNAL_SYNC" 1 158 "0x83"
d G "T3_DIV_BY_1" 1 160 "0"
d G "T3_DIV_BY_2" 1 161 "0x10"
d G "T3_DIV_BY_4" 1 162 "0x20"
d G "T3_DIV_BY_8" 1 163 "0x30"
d G "T3_CCP1_TO_2" 1 166 "0x48"
d G "T3_CCP2" 1 167 "0x8"
d G "CCP_OFF" 1 173 "0"
d G "CCP_CAPTURE_FE" 1 174 "4"
d G "CCP_CAPTURE_RE" 1 175 "5"
d G "CCP_CAPTURE_DIV_4" 1 176 "6"
d G "CCP_CAPTURE_DIV_16" 1 177 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 178 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 179 "9"
d G "CCP_COMPARE_INT" 1 180 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 181 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 182 "0xB"
d G "CCP_PWM" 1 183 "0xC"
d G "CCP_PWM_PLUS_1" 1 184 "0x1c"
d G "CCP_PWM_PLUS_2" 1 185 "0x2c"
d G "CCP_PWM_PLUS_3" 1 186 "0x3c"
d G "CCP_PWM_H_H" 1 192 "0x0c"
d G "CCP_PWM_H_L" 1 193 "0x0d"
d G "CCP_PWM_L_H" 1 194 "0x0e"
d G "CCP_PWM_L_L" 1 195 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 197 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 198 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 199 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 201 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 202 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 203 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 204 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 205 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 206 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 207 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 209 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 210 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 211 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 213 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 214 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 215 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 217 "0x80000000"
d G "PSP_ENABLED" 1 227 "0x10"
d G "PSP_DISABLED" 1 228 "0"
d G "SPI_MASTER" 1 235 "0x20"
d G "SPI_SLAVE" 1 236 "0x24"
d G "SPI_L_TO_H" 1 237 "0"
d G "SPI_H_TO_L" 1 238 "0x10"
d G "SPI_CLK_DIV_4" 1 239 "0"
d G "SPI_CLK_DIV_16" 1 240 "1"
d G "SPI_CLK_DIV_64" 1 241 "2"
d G "SPI_CLK_T2" 1 242 "3"
d G "SPI_SS_DISABLED" 1 243 "1"
d G "SPI_SAMPLE_AT_END" 1 245 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 246 "0x4000"
d G "UART_ADDRESS" 1 252 "2"
d G "UART_DATA" 1 253 "4"
d G "UART_AUTODETECT" 1 254 "8"
d G "UART_AUTODETECT_NOWAIT" 1 255 "9"
d G "UART_WAKEUP_ON_RDA" 1 256 "10"
d G "UART_SEND_BREAK" 1 257 "13"
d G "A0_A3_A1_A3" 1 261 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 262 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 263 "0xbcf05"
d G "NC_NC_NC_NC" 1 264 "0x0ff07"
d G "A0_A3_A1_A2" 1 265 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 266 "0x9ef01"
d G "A0_VR_A1_VR" 1 267 "0x3ff06"
d G "A3_VR_A2_VR" 1 268 "0xcff0e"
d G "CP1_INVERT" 1 269 "0x0000010"
d G "CP2_INVERT" 1 270 "0x0000020"
d G "VREF_LOW" 1 278 "0xa0"
d G "VREF_HIGH" 1 279 "0x80"
d G "VREF_F5" 1 281 "0x40"
d G "VREF_COMP" 1 282 "0x10"
d G "LVD_LVDIN" 1 287 "0x1F"
d G "LVD_45" 1 288 "0x1E"
d G "LVD_42" 1 289 "0x1D"
d G "LVD_40" 1 290 "0x1C"
d G "LVD_38" 1 291 "0x1B"
d G "LVD_36" 1 292 "0x1A"
d G "LVD_35" 1 293 "0x19"
d G "LVD_33" 1 294 "0x18"
d G "LVD_30" 1 295 "0x17"
d G "LVD_28" 1 296 "0x16"
d G "LVD_27" 1 297 "0x15"
d G "LVD_25" 1 298 "0x14"
d G "LVD_24" 1 299 "0x13"
d G "LVD_23" 1 300 "0x12"
d G "LVD_22" 1 301 "0x11"
d G "LVD_21" 1 302 "0x10"
d G "LVD_TRIGGER_BELOW" 1 304 "0"
d G "LVD_TRIGGER_ABOVE" 1 305 "0x80"
d G "OSC_31KHZ" 1 311 "0"
d G "OSC_125KHZ" 1 312 "0x10"
d G "OSC_250KHZ" 1 313 "0x20"
d G "OSC_500KHZ" 1 314 "0x30"
d G "OSC_1MHZ" 1 315 "0x40"
d G "OSC_2MHZ" 1 316 "0x50"
d G "OSC_4MHZ" 1 317 "0x60"
d G "OSC_8MHZ" 1 318 "0x70"
d G "OSC_16MHZ" 1 319 "0x4060"
d G "OSC_32MHZ" 1 320 "0x4070"
d G "OSC_TIMER1" 1 322 "1"
d G "OSC_INTRC" 1 323 "2"
d G "OSC_NORMAL" 1 324 "0"
d G "OSC_IDLE_MODE" 1 326 "0x80"
d G "OSC_31250" 1 327 "0x8000"
d G "OSC_PLL_ON" 1 328 "0x4000"
d G "OSC_PLL_OFF" 1 329 "0"
d G "OSC_STATE_STABLE" 1 333 "4"
d G "OSC_STATE_EXT_RUNNING" 1 334 "8"
d G "ADC_OFF" 1 341 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 342 "0x100"
d G "ADC_CLOCK_DIV_4" 1 343 "0x04"
d G "ADC_CLOCK_DIV_8" 1 344 "0x01"
d G "ADC_CLOCK_DIV_16" 1 345 "0x05"
d G "ADC_CLOCK_DIV_32" 1 346 "0x02"
d G "ADC_CLOCK_DIV_64" 1 347 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 348 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 1 350 "0x00"
d G "ADC_TAD_MUL_2" 1 351 "0x08"
d G "ADC_TAD_MUL_4" 1 352 "0x10"
d G "ADC_TAD_MUL_6" 1 353 "0x18"
d G "ADC_TAD_MUL_8" 1 354 "0x20"
d G "ADC_TAD_MUL_12" 1 355 "0x28"
d G "ADC_TAD_MUL_16" 1 356 "0x30"
d G "ADC_TAD_MUL_20" 1 357 "0x38"
d G "NO_ANALOGS" 1 360 "0x0F" "None"
d G "ALL_ANALOG" 1 361 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 362 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 363 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 1 364 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 1 365 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 1 366 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 367 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 368 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 369 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 370 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 371 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 372 "0x0D" "A0 A1"
d G "AN0" 1 373 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 374 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 375 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 376 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 377 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 1 378 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 1 379 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 1 380 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 381 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 382 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 383 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 384 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 385 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 388 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 389 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 390 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 391 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 395 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 396 "1"
d G "ADC_READ_ONLY" 1 397 "6"
d G "L_TO_H" 1 409 "0x40"
d G "H_TO_L" 1 410 "0"
d G "GLOBAL" 1 412 "0xF2C0"
d G "INT_RTCC" 1 413 "0xF220"
d G "INT_TIMER0" 1 414 "0xF220"
d G "INT_TIMER1" 1 415 "0x9D01"
d G "INT_TIMER2" 1 416 "0x9D02"
d G "INT_TIMER3" 1 417 "0xA002"
d G "INT_EXT" 1 418 "0xF210"
d G "INT_EXT1" 1 419 "0xF008"
d G "INT_EXT2" 1 420 "0xF010"
d G "INT_RB" 1 421 "0xFFF208"
d G "INT_PSP" 1 422 "0x9D80"
d G "INT_AD" 1 423 "0x9D40"
d G "INT_RDA" 1 424 "0x9D20"
d G "INT_TBE" 1 425 "0x9D10"
d G "INT_SSP" 1 426 "0x9D08"
d G "INT_CCP1" 1 427 "0x9D04"
d G "INT_CCP2" 1 428 "0xA001"
d G "INT_BUSCOL" 1 429 "0xA008"
d G "INT_LOWVOLT" 1 430 "0xA004"
d G "INT_COMP" 1 431 "0xA040"
d G "INT_EEPROM" 1 432 "0xA010"
d G "INT_OSCF" 1 433 "0xA080"
D G "STACK_USE_PICDEM_LCD" 0 150 "TRUE" "set to true to put out information on the LCD screen"
D G "STACK_USE_DHCP" 0 153 "TRUE" "for auto resolution of IP address"
D G "STACK_USE_ARP" 0 154 "TRUE" "needed to resolve MAC addresses of IP addresses"
D G "STACK_USE_MCPENC" 0 158 "TRUE" "tell the stack to use the ENC28J60 driver"
D G "STACK_USE_MCPINC" 0 166 "FALSE"
D G "STACK_USE_UDP" 0 169 "TRUE" "needed for dhcp & dns"
D G "STACK_USE_DNS" 0 170 "TRUE" "we shall use DNS in this example"
D G "STACK_USE_ICMP" 0 171 "TRUE" "for ping"
D G "STACK_USE_TCP" 0 172 "TRUE" "To send TCP packets (talk to HTTP clients)"
D G "STACK_USE_SMTP" 0 173 "TRUE" "enable the CCS SMTP Engine"
D G "STACK_USE_IP_GLEANING" 0 174 "FALSE"
D G "debug_printf" 0 177 "printf"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
D G "STACK_INCLUDE" 2 65 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
D G "STACK_TSK_H" 3 49 ""
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
D G "COMPILER_H" 4 43 ""
C G "" 4 49 1 "*"
C G "" 4 111 1 "*"
C G "" 4 175 1 "*"
C G "" 4 238 1 "*"
C G "" 3 53 1 "*"
C G "" 3 53 1 "*"
C G "" 3 53 1 "*"
C G "" 3 53 1 "*"
C G "" 3 53 1 "*"
C G "" 3 53 2 "*"
C G "" 3 64 1 "*"
C G "" 3 64 1 "*"
C G "" 3 64 1 "*"
C G "" 3 64 1 "*"
C G "" 3 64 1 "*"
C G "" 3 64 1 "*"
C G "" 3 64 1 "*"
C G "" 3 64 1 "*"
C G "" 3 64 2 "*"
C G "" 3 77 1 "*"
C G "" 3 77 1 "*"
C G "" 3 77 1 "*"
C G "" 3 77 1 "*"
C G "" 3 77 1 "*"
D G "MPFS_RESERVE_BLOCK" 3 87 " (64)"
C G "" 3 89 1 "*"
C G "" 3 89 1 "*"
C G "" 3 89 1 "*"
C G "" 3 89 1 "*"
D G "STACK_USE_MAC" 3 111 "TRUE"
D G "STACK_USE_TELNET" 3 158 "FALSE"
D G "STACK_USE_HTTP" 3 162 "FALSE"
D G "STACK_USE_SNMP" 3 170 "FALSE"
D G "STACK_USE_ANNOUNCE" 3 174 "FALSE"
D G "STACK_USE_MPFS" 3 190 "FALSE"
D G "STACK_USE_HTTP2" 3 194 "FALSE"
C G "" 3 197 1 "*"
D G "STACK_USE_UDP" 3 212 "TRUE"
C G "" 3 215 1 "*"
C G "" 3 225 1 "*"
C G "" 3 225 1 "*"
C G "" 3 225 1 "*"
D G "MCHP_MAC" 3 232 ""
C G "" 3 236 1 "*"
C G "" 3 236 1 "*"
C G "" 3 236 1 "*"
C G "" 3 236 1 "*"
C G "" 3 236 1 "*"
C G "" 3 236 1 "*"
C G "" 3 236 1 "*"
C G "" 3 236 1 "*"
C G "" 3 236 1 "*"
D G "___TCPIP_STACK_CONFIGURATION" 5 29 ""
D G "PIN_ENC_MAC_SO" 5 89 "PIN_B0" "PIC <<<< ENC  //ANTES C4"
D G "PIN_ENC_MAC_SI" 5 90 "PIN_C7" "PIC >>>> ENC  //ANTES C5"
D G "PIN_ENC_MAC_CLK" 5 91 "PIN_B1" "ANTES C3"
D G "PIN_ENC_MAC_CS" 5 92 "PIN_C1" "ANTES D1"
D G "PIN_ENC_MAC_RST" 5 93 "PIN_C0" "ANTES D0"
D G "PIN_ENC_MAC_INT" 5 94 "PIN_B2" "ANTES B0"
D G "PIN_ENC_MAC_WOL" 5 95 "PIN_B3" "ANTES B1"
D G "ENC_MAC_USE_SPI" 5 96 "TRUE" "due to an errata in the ENC28J60, you should always use HW SPI to assure that SPI clock is over 8MHz!"
D G "mac_enc_spi_tris_init" 5 98 "()    *0xF93=(*0xF93 & 0b11111101) | 0b101; *0xF94 = *0xF94 & 0x7C;" "SE MODIFICO PARA ALUX 1.1"
D G "TCP_NO_WAIT_FOR_ACK" 5 110 "FALSE"
D G "MY_DEFAULT_IP_ADDR_BYTE1" 5 117 "10" "IP ADDRESS"
D G "MY_DEFAULT_IP_ADDR_BYTE2" 5 118 "10" "This unit's IP address."
D G "MY_DEFAULT_IP_ADDR_BYTE3" 5 119 "5"
D G "MY_DEFAULT_IP_ADDR_BYTE4" 5 120 "15"
D G "MY_DEFAULT_MASK_BYTE1" 5 122 "0xff" "NETMASK"
D G "MY_DEFAULT_MASK_BYTE2" 5 123 "0xff" "Netmask tells the IP / ARP stack which"
D G "MY_DEFAULT_MASK_BYTE3" 5 124 "0xff" "IP's are on your local network."
D G "MY_DEFAULT_MASK_BYTE4" 5 125 "0x00"
D G "MY_DEFAULT_GATE_BYTE1" 5 127 "192" "GATEWAY IP ADDRESS"
D G "MY_DEFAULT_GATE_BYTE2" 5 128 "168" "Gateway acts as a conduit between two networks."
D G "MY_DEFAULT_GATE_BYTE3" 5 129 "100"
D G "MY_DEFAULT_GATE_BYTE4" 5 130 "1"
D G "MY_DEFAULT_MAC_BYTE1" 5 136 "0x00"
D G "MY_DEFAULT_MAC_BYTE2" 5 137 "0x04"
D G "MY_DEFAULT_MAC_BYTE3" 5 138 "0xa3"
D G "MY_DEFAULT_MAC_BYTE4" 5 139 "0x00"
D G "MY_DEFAULT_MAC_BYTE5" 5 140 "0x00"
D G "MY_DEFAULT_MAC_BYTE6" 5 141 "0x00"
D G "MAX_SOCKETS" 5 147 "5"
D G "MAX_UDP_SOCKETS" 5 154 "2"
D G "MAC_TX_BUFFER_SIZE" 5 176 "1024" "do not modify this line"
D G "MAC_TX_BUFFER_COUNT" 5 177 "1" "do not modify this line"
D G "MAC_RX_BUFFER_SIZE" 5 186 "MAC_TX_BUFFER_SIZE" "do not modify this line unless you are certain you know what you're doing"
D G "MY_MAC_BYTE1" 3 255 "AppConfig.MyMACAddr.v[0]"
D G "MY_MAC_BYTE2" 3 256 "AppConfig.MyMACAddr.v[1]"
D G "MY_MAC_BYTE3" 3 257 "AppConfig.MyMACAddr.v[2]"
D G "MY_MAC_BYTE4" 3 258 "AppConfig.MyMACAddr.v[3]"
D G "MY_MAC_BYTE5" 3 259 "AppConfig.MyMACAddr.v[4]"
D G "MY_MAC_BYTE6" 3 260 "AppConfig.MyMACAddr.v[5]"
C G "" 3 262 1 "*"
C G "" 3 262 1 "*"
D G "MY_MASK_BYTE1" 3 267 "AppConfig.MyMask.v[0]"
D G "MY_MASK_BYTE2" 3 268 "AppConfig.MyMask.v[1]"
D G "MY_MASK_BYTE3" 3 269 "AppConfig.MyMask.v[2]"
D G "MY_MASK_BYTE4" 3 270 "AppConfig.MyMask.v[3]"
C G "" 3 272 1 "*"
C G "" 3 272 1 "*"
D G "MY_IP" 3 279 "AppConfig.MyIPAddr"
D G "MY_IP_BYTE1" 3 281 "AppConfig.MyIPAddr.v[0]"
D G "MY_IP_BYTE2" 3 282 "AppConfig.MyIPAddr.v[1]"
D G "MY_IP_BYTE3" 3 283 "AppConfig.MyIPAddr.v[2]"
D G "MY_IP_BYTE4" 3 284 "AppConfig.MyIPAddr.v[3]"
C G "" 3 286 1 "*"
D G "MY_GATE_BYTE1" 3 290 "AppConfig.MyGateway.v[0]"
D G "MY_GATE_BYTE2" 3 291 "AppConfig.MyGateway.v[1]"
D G "MY_GATE_BYTE3" 3 292 "AppConfig.MyGateway.v[2]"
D G "MY_GATE_BYTE4" 3 293 "AppConfig.MyGateway.v[3]"
T G "BOOL" 3 328 "int1"
T G "BUFFER" 3 330 "int8"
T G "WORD" 3 332 "int16"
T G "DWORD" 3 333 "int32"
T G "BYTE_VAL" 3 349 "{int8 Val}"
T G "SWORD_VAL" 3 361 "{int32 Val}"
T G "WORD_VAL" 3 373 "{int16 Val,int8[2] v}" "typedef union _DWORD_VAL"
T G "DWORD_VAL" 3 435 "{DWORD Val,WORD[2] w,int8[4] v}"
D G "LOWER_LSB" 3 438 "(a)    (a).v[0]"
D G "LOWER_MSB" 3 439 "(a)   (a).v[1]"
D G "UPPER_LSB" 3 440 "(a)    (a).v[2]"
D G "UPPER_MSB" 3 441 "(a)    (a).v[3]"
T G "MAC_ADDR" 3 446 "{int8[6] v}"
T G "IP_ADDR" 3 452 "{int8[4] v,DWORD Val}"
T G "NODE_INFO" 3 459 "{MAC_ADDR MACAddr,IP_ADDR IPAddr}"
T G "APP_CONFIG" 3 477 "{IP_ADDR MyIPAddr,MAC_ADDR MyMACAddr,IP_ADDR MyMask,IP_ADDR MyGateway,IP_ADDR PrimaryDNSServer}" "typedef union _STACK_FLAGS"
V G "AppConfig" 3 488 "APP_CONFIG"
D G "StackIsInConfigMode" 3 491 "()   (stackFlags.bits.bInConfigMode)"
C L "StackInit" 3 497 1 "*"
C L "StackInit" 3 497 1 "*"
C L "StackInit" 3 497 1 "*"
C L "StackInit" 3 497 1 "*"
C L "StackInit" 3 497 1 "*"
C L "StackInit" 3 497 1 "*"
C L "StackInit" 3 497 1 "*"
F G "StackInit" 3 512 "void()"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
C L "StackInit" 3 515 1 "*"
F G "StackTask" 3 534 "void()"
D G "_STRING" 6 12 ""
D G "_STDDEF" 7 13 ""
D G "ptrdiff_t" 7 18 "unsigned int16"
D G "size_t" 7 21 "unsigned int8"
D G "wchar_t" 7 22 "char"
D G "NULL" 7 23 "0"
D G "offsetof" 7 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "StackTask" 6 19 10 "FUNCTION"
F G "memmove" 6 34 "*int8()"
V L "s1" 6 34 "*int8"
V L "s2" 6 34 "*int8"
V L "n" 6 34 "int8"
V L "sc1" 6 36 "*int8"
V L "sc2" 6 37 "*int8"
D G "strcopy" 6 54 "strcpy"
C L "strncpy" 6 19 4 "FUNCTION"
F G "strncpy" 6 61 "*int8()"
V L "s1" 6 61 "*int8"
V L "s2" 6 61 "*int8"
V L "n" 6 61 "int8"
V L "s" 6 63 "*int8"
C L "strcat" 6 19 3 "FUNCTION"
F G "strcat" 6 78 "*int8()"
V L "s1" 6 78 "*int8"
V L "s2" 6 78 "*int8"
V L "s" 6 80 "*int8"
C L "strncat" 6 19 2 "FUNCTION"
F G "strncat" 6 96 "*int8()"
V L "s1" 6 96 "*int8"
V L "s2" 6 96 "*int8"
V L "n" 6 96 "int8"
V L "s" 6 98 "*int8"
C L "memcmp" 6 19 3 "FUNCTION"
F G "memcmp" 6 120 "sint8()"
V L "s1" 6 120 "*int8"
V L "s2" 6 120 "*int8"
V L "n" 6 120 "int8"
V L "su1" 6 122 "*int8"
V L "su2" 6 122 "*int8"
C L "strcmp" 6 19 2 "FUNCTION"
F G "strcmp" 6 134 "sint8()"
V L "s1" 6 134 "*int8"
V L "s2" 6 134 "*int8"
C L "strcoll" 6 19 2 "FUNCTION"
F G "strcoll" 6 144 "sint8()"
V L "s1" 6 144 "*int8"
V L "s2" 6 144 "*int8"
C L "strncmp" 6 19 4 "FUNCTION"
F G "strncmp" 6 157 "sint8()"
V L "s1" 6 157 "*int8"
V L "s2" 6 157 "*int8"
V L "n" 6 157 "int8"
C L "strxfrm" 6 19 3 "FUNCTION"
F G "strxfrm" 6 169 "int8()"
V L "s1" 6 169 "*int8"
V L "s2" 6 169 "*int8"
V L "n" 6 169 "int8"
V L "s" 6 171 "*int8"
V L "n1" 6 172 "int8"
C L "memchr" 6 19 3 "FUNCTION"
F G "memchr" 6 191 "*int8()"
V L "s" 6 191 "*int8"
V L "c" 6 191 "int8"
V L "n" 6 191 "int8"
V L "uc" 6 193 "int8"
V L "su" 6 194 "*int8"
C L "strchr" 6 19 2 "FUNCTION"
F G "strchr" 6 205 "*int8()"
V L "s" 6 205 "*int8"
V L "c" 6 205 "int8"
C L "strcspn" 6 19 4 "FUNCTION"
F G "strcspn" 6 217 "int8()"
V L "s1" 6 217 "*int8"
V L "s2" 6 217 "*int8"
V L "sc1" 6 219 "*int8"
V L "sc2" 6 219 "*int8"
C L "strpbrk" 6 19 4 "FUNCTION"
F G "strpbrk" 6 232 "*int8()"
V L "s1" 6 232 "*int8"
V L "s2" 6 232 "*int8"
V L "sc1" 6 234 "*int8"
V L "sc2" 6 234 "*int8"
C L "strrchr" 6 19 2 "FUNCTION"
F G "strrchr" 6 247 "*int8()"
V L "s" 6 247 "*int8"
V L "c" 6 247 "int8"
V L "p" 6 249 "*int8"
C L "strspn" 6 19 2 "FUNCTION"
F G "strspn" 6 262 "int8()"
V L "s1" 6 262 "*int8"
V L "s2" 6 262 "*int8"
V L "sc1" 6 264 "*int8"
V L "sc2" 6 264 "*int8"
C L "strstr" 6 19 6 "FUNCTION"
F G "strstr" 6 281 "*int8()"
V L "s1" 6 281 "*int8"
V L "s2" 6 281 "*int8"
V L "s" 6 283 "*int8"
V L "t" 6 283 "*int8"
C L "strtok" 6 19 13 "FUNCTION"
F G "strtok" 6 320 "*int8()"
V L "s1" 6 320 "*int8"
V L "s2" 6 320 "*int8"
V L "beg" 6 322 "*int8"
V L "end" 6 322 "*int8"
V L "save" 6 323 "*int8"
C L "strlen" 6 19 6 "FUNCTION"
F G "strlen" 6 369 "int8()"
V L "s" 6 369 "*int8"
V L "sc" 6 371 "*int8"
C L "stricmp" 6 19 2 "FUNCTION"
F G "stricmp" 6 380 "sint8()"
V L "s1" 6 380 "*int8"
V L "s2" 6 380 "*int8"
C L "strlwr" 6 19 3 "FUNCTION"
F G "strlwr" 6 394 "*int8()"
V L "s" 6 394 "*int8"
V L "p" 6 396 "*int8"
D G "_STDLIB" 9 12 ""
D G "RAND_MAX" 9 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 9 25 "1"
T G "div_t" 9 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 9 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 7 3 6 "FUNCTION"
C L "atoi" 9 43 2 "FUNCTION"
C L "atoi" 9 46 1 "*"
C L "atoi" 9 46 1 "*"
F G "atoi" 9 50 "sint8()"
V L "s" 9 50 "*int8" "Syntax: signed int32  atoi32(char * s)"
F G "atoi32" 9 58 "sint32()"
V L "s" 9 58 "*int8"
C L "atoi32" 9 46 3 "FUNCTION"
F G "itoa" 9 79 "*int8()"
V L "num" 9 79 "sint32"
V L "base" 9 79 "int8"
V L "s" 9 79 "*int8" "Standard template: signed int16  atol(char * s)"
C L "itoa" 9 81 1 "*"
C L "itoa" 9 81 1 "*"
F G "atol" 9 85 "sint16()"
V L "s" 9 85 "*int8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
F G "strtol" 9 93 "sint16()"
V L "s" 9 93 "*int8"
V L "endptr" 9 93 "*int8"
V L "base" 9 93 "sint8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
F G "strtoul" 9 101 "int16()"
V L "s" 9 101 "*int8"
V L "endptr" 9 101 "*int8"
V L "base" 9 101 "sint8" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 9 95 2 "FUNCTION"
C L "strtoul" 9 103 1 "*"
C L "strtoul" 9 103 1 "*"
C L "strtoul" 9 103 1 "*"
F G "strtof" 9 110 "float()"
V L "s" 9 110 "*int8"
V L "endptr" 9 110 "*int8"
D G "strtof48" 9 116 "(s, e) strtof(s, e)"
D G "strtod" 9 117 "(s, e) strtof(s, e)"
C L "strtof" 9 103 1 "FUNCTION"
C L "strtof" 9 120 1 "*"
D G "atof" 9 124 "(s)   strtof(s, 0)"
C L "strtof" 9 120 1 "FUNCTION"
C L "strtof" 9 143 1 "*"
C L "strtof" 9 143 1 "*"
C L "strtof" 9 143 1 "*"
F G "atoe" 9 149 "float()"
V L "s" 9 149 "*int8"
C L "atoe" 9 143 2 "FUNCTION"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
F G "rand" 9 169 "int16()"
C L "rand" 9 160 1 "FUNCTION"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
F G "srand" 9 191 "void()"
V L "seed" 9 191 "int32" "Memory management functions"
C L "srand" 9 171 3 "FUNCTION"
F G "system" 9 205 "sint8()"
V L "string" 9 205 "*int8" "Searching and sorting utilities"
C L "system" 9 171 1 "FUNCTION"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 4 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
D G "labs" 9 249 "abs"
F G "div" 9 251 "div_t()"
V L "numer" 9 251 "sint8"
V L "denom" 9 251 "sint8"
F G "ldiv" 9 252 "ldiv_t()"
V L "numer" 9 252 "sint16"
V L "denom" 9 252 "sint16" "Multibyte character functions"
C L "ldiv" 9 229 4 "FUNCTION"
C L "ldiv" 7 2 7 "FUNCTION"
C L "ldiv" 6 2 7 "FUNCTION"
F G "div" 9 274 "div_t()"
V L "numer" 9 274 "sint8"
V L "denom" 9 274 "sint8"
V L "val" 9 276 "div_t"
F G "ldiv" 9 282 "ldiv_t()"
V L "numer" 9 282 "sint16"
V L "denom" 9 282 "sint16"
V L "val" 9 284 "ldiv_t"
F G "atoe" 9 361 "float()"
V L "s" 9 361 "*int8"
V L "pow10" 9 363 "float"
V L "result" 9 364 "float"
V L "sign" 9 365 "int8"
V L "expsign" 9 366 "int8"
V L "c" 9 367 "int8"
V L "ptr" 9 368 "int8"
V L "i" 9 369 "int8"
V L "exp" 9 370 "float"
V L "expcnt" 9 371 "int8"
C L "atoe" 9 397 1 "FUNCTION"
F G "atoi" 9 429 "sint8()"
V L "s" 9 429 "*int8"
V L "result" 9 431 "sint8"
V L "sign" 9 432 "int8"
V L "base" 9 432 "int8"
V L "index" 9 432 "int8"
V L "c" 9 433 "int8"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
F G "atol" 9 498 "sint16()"
V L "s" 9 498 "*int8"
V L "result" 9 500 "sint16"
V L "sign" 9 501 "int8"
V L "base" 9 501 "int8"
V L "index" 9 501 "int8"
V L "c" 9 502 "int8"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "mult_with10" 9 397 1 "FUNCTION"
F G "mult_with10" 9 565 "sint32()"
V L "num" 9 565 "int32"
F G "atoi32" 9 571 "sint32()"
V L "s" 9 571 "*int8"
V L "result" 9 573 "sint32"
V L "sign" 9 574 "int8"
V L "base" 9 574 "int8"
V L "index" 9 574 "int8"
V L "c" 9 575 "int8"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
F G "itoa" 9 770 "*int8()"
V L "num" 9 770 "sint32"
V L "base" 9 770 "int8"
V L "s" 9 770 "*int8"
V L "temp" 9 772 "int32"
V L "i" 9 773 "int8"
V L "sign" 9 773 "int8"
V L "cnt" 9 773 "int8"
V L "c" 9 774 "int8"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
F G "strtof" 9 807 "float()"
V L "s" 9 807 "*int8"
V L "endptr" 9 807 "*int8"
V L "pow10" 9 809 "float"
V L "result" 9 810 "float"
V L "skip" 9 811 "int1"
V L "sign" 9 811 "int1"
V L "point" 9 811 "int1"
V L "c" 9 812 "int8"
V L "ptr" 9 813 "int8"
F G "strtoul" 9 1025 "int16()"
V L "s" 9 1025 "*int8"
V L "endptr" 9 1025 "*int8"
V L "base" 9 1025 "sint8"
V L "sc" 9 1027 "*int8"
V L "s1" 9 1027 "*int8"
V L "sd" 9 1027 "*int8"
V L "x" 9 1028 "int16"
V L "sign" 9 1029 "int8"
V L "digits" 9 1030 "int8[1]"
C L "strtoul" 9 397 1 "FUNCTION"
C L "strtoul" 9 397 1 "FUNCTION"
C L "strtoul" 9 397 1 "FUNCTION"
F G "strtol" 9 1087 "sint16()"
V L "s" 9 1087 "*int8"
V L "endptr" 9 1087 "*int8"
V L "base" 9 1087 "sint8"
V L "sc" 9 1089 "*int8"
V L "s1" 9 1089 "*int8"
V L "sd" 9 1089 "*int8"
V L "x" 9 1090 "sint16"
V L "sign" 9 1091 "int8"
V L "digits" 9 1092 "int8[1]"
C L "strtol" 9 397 1 "FUNCTION"
C L "strtol" 9 397 1 "FUNCTION"
C L "strtol" 9 397 1 "FUNCTION"
F G "system" 9 1150 "sint8()"
V L "string" 9 1150 "*int8"
F G "mblen" 9 1155 "int8(*int8 string)"
V L "s" 9 1155 "*int8"
V L "n" 9 1155 "int8"
F G "mbtowc" 9 1160 "int8()"
V L "pwc" 9 1160 "*int8"
V L "s" 9 1160 "*int8"
V L "n" 9 1160 "int8"
F G "wctomb" 9 1166 "int8()"
V L "s" 9 1166 "*int8"
V L "wchar" 9 1166 "int8"
F G "mbstowcs" 9 1172 "int8()"
V L "pwcs" 9 1172 "*int8"
V L "s" 9 1172 "*int8"
V L "n" 9 1172 "int8"
F G "wcstombs" 9 1178 "int8()"
V L "s" 9 1178 "*int8"
V L "pwcs" 9 1178 "*int8"
V L "n" 9 1178 "int8"
V G "_Randseed" 9 1188 "int32"
F G "rand" 9 1190 "int16()"
F G "srand" 9 1196 "void()"
V L "seed" 9 1196 "int32"
T G "*_Cmpfun" 9 1206 "sint8(int32 seed)"
V L "p1" 9 1206 "*int8"
V L "p2" 9 1206 "*int8"
F G "qsort" 9 1213 "void()"
V L "qdata" 9 1213 "*int8"
V L "qitems" 9 1213 "int8"
V L "qsize" 9 1213 "int8"
V L "cmp" 9 1213 "_Cmpfun"
V L "m" 9 1214 "int8"
V L "j" 9 1214 "int8"
V L "i" 9 1214 "int8"
V L "l" 9 1214 "int8"
V L "done" 9 1215 "int1"
V L "t" 9 1216 "int8[16]"
F G "bsearch" 9 1241 "*int8()"
V L "key" 9 1241 "*int8"
V L "base" 9 1241 "*int8"
V L "num" 9 1241 "int8"
V L "width" 9 1241 "int8"
V L "cmp" 9 1241 "_Cmpfun"
V L "p" 9 1243 "*int8"
V L "q" 9 1243 "*int8"
V L "n" 9 1244 "int8"
V L "pivot" 9 1245 "int8"
V L "val" 9 1246 "sint8"
C L "bsearch" 9 397 1 "FUNCTION"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
D G "HELPERS_H" 11 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
F G "ReadStringUART" 11 53 "int8()"
V L "Dest" 11 53 "*int8"
V L "BufferLen" 11 53 "int8"
F G "hexatob" 11 54 "int8()"
V L "AsciiChars" 11 54 "WORD_VAL"
F G "btohexa_high" 11 55 "int8()"
V L "b" 11 55 "int8"
F G "btohexa_low" 11 56 "int8()"
V L "b" 11 56 "int8"
F G "swaps" 11 58 "WORD()"
V L "v" 11 58 "WORD_VAL"
F G "swapl" 11 59 "DWORD()"
V L "v" 11 59 "DWORD_VAL"
F G "CalcIPChecksum" 11 61 "WORD()"
V L "buffer" 11 61 "*int8"
V L "len" 11 61 "WORD"
F G "CalcIPBufferChecksum" 11 62 "WORD()"
V L "len" 11 62 "WORD" "*                  MAC Module Defs for Microchip Stack"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
D G "MAC_H" 12 41 ""
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 2 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
D G "MAC_IP" 12 45 " (0u)"
D G "MAC_ARP" 12 46 " (0x6u)"
D G "MAC_UNKNOWN" 12 47 " (0x0ffu)"
D G "INVALID_BUFFER" 12 49 " (0xffu)"
C L "CalcIPBufferChecksum" 12 51 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
D G "ENC28J60_H" 14 42 ""
T G "TXSTATUS" 14 68 "{int8[7] v}"
T G "RXSTATUS" 14 91 "{int8[4] v}" "* Register locations"
D G "ERDPTL" 14 97 "0x00"
D G "ERDPTH" 14 98 "0x01"
D G "EWRPTL" 14 99 "0x02"
D G "EWRPTH" 14 100 "0x03"
D G "ETXSTL" 14 101 "0x04"
D G "ETXSTH" 14 102 "0x05"
D G "ETXNDL" 14 103 "0x06"
D G "ETXNDH" 14 104 "0x07"
D G "ERXSTL" 14 105 "0x08"
D G "ERXSTH" 14 106 "0x09"
D G "ERXNDL" 14 107 "0x0A"
D G "ERXNDH" 14 108 "0x0B"
D G "ERXRDPTL" 14 109 "0x0C"
D G "ERXRDPTH" 14 110 "0x0D"
D G "ERXWRPTL" 14 111 "0x0E"
D G "ERXWRPTH" 14 112 "0x0F"
D G "EDMASTL" 14 113 "0x10"
D G "EDMASTH" 14 114 "0x11"
D G "EDMANDL" 14 115 "0x12"
D G "EDMANDH" 14 116 "0x13"
D G "EDMADSTL" 14 117 "0x14"
D G "EDMADSTH" 14 118 "0x15"
D G "EDMACSL" 14 119 "0x16"
D G "EDMACSH" 14 120 "0x17"
D G "EIE" 14 124 "0x1B"
D G "EIR" 14 125 "0x1C"
D G "ESTAT" 14 126 "0x1D"
D G "ECON2" 14 127 "0x1E"
D G "ECON1" 14 128 "0x1F"
D G "EHT0" 14 131 "0x100"
D G "EHT1" 14 132 "0x101"
D G "EHT2" 14 133 "0x102"
D G "EHT3" 14 134 "0x103"
D G "EHT4" 14 135 "0x104"
D G "EHT5" 14 136 "0x105"
D G "EHT6" 14 137 "0x106"
D G "EHT7" 14 138 "0x107"
D G "EPMM0" 14 139 "0x108"
D G "EPMM1" 14 140 "0x109"
D G "EPMM2" 14 141 "0x10A"
D G "EPMM3" 14 142 "0x10B"
D G "EPMM4" 14 143 "0x10C"
D G "EPMM5" 14 144 "0x10D"
D G "EPMM6" 14 145 "0x10E"
D G "EPMM7" 14 146 "0x10F"
D G "EPMCSL" 14 147 "0x110"
D G "EPMCSH" 14 148 "0x111"
D G "EPMOL" 14 151 "0x114"
D G "EPMOH" 14 152 "0x115"
D G "ERXFCON" 14 155 "0x118"
D G "EPKTCNT" 14 156 "0x119"
D G "MACON1" 14 165 "0x200"
D G "MACON2" 14 166 "0x201"
D G "MACON3" 14 168 "0x202"
D G "MACON4" 14 169 "0x203"
D G "MABBIPG" 14 170 "0x204"
D G "MAIPGL" 14 172 "0x206"
D G "MAIPGH" 14 173 "0x207"
D G "MACLCON1" 14 174 "0x208"
D G "MACLCON2" 14 175 "0x209"
D G "MAMXFLL" 14 176 "0x20A"
D G "MAMXFLH" 14 177 "0x20B"
D G "MICMD" 14 184 "0x212"
D G "MIREGADR" 14 186 "0x214"
D G "MIWRL" 14 188 "0x216"
D G "MIWRH" 14 189 "0x217"
D G "MIRDL" 14 190 "0x218"
D G "MIRDH" 14 191 "0x219"
D G "MAADR5" 14 200 "0x300"
D G "MAADR6" 14 201 "0x301"
D G "MAADR3" 14 202 "0x302"
D G "MAADR4" 14 203 "0x303"
D G "MAADR1" 14 204 "0x304"
D G "MAADR2" 14 205 "0x305"
D G "EBSTSD" 14 206 "0x306"
D G "EBSTCON" 14 207 "0x307"
D G "EBSTCSL" 14 208 "0x308"
D G "EBSTCSH" 14 209 "0x309"
D G "MISTAT" 14 210 "0x30A"
D G "EREVID" 14 218 "0x312"
D G "ECOCON" 14 221 "0x315"
D G "EFLOCON" 14 223 "0x317"
D G "EPAUSL" 14 224 "0x318"
D G "EPAUSH" 14 225 "0x319"
C L "CalcIPBufferChecksum" 14 1 7 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
T G "REG" 14 406 "{int8 Val}" "* PH Register Locations"
D G "PHCON1" 14 412 "0x00"
D G "PHSTAT1" 14 413 "0x01"
D G "PHID1" 14 414 "0x02"
D G "PHID2" 14 415 "0x03"
D G "PHCON2" 14 416 "0x10"
D G "PHSTAT2" 14 417 "0x11"
D G "PHIE" 14 418 "0x12"
D G "PHIR" 14 419 "0x13"
D G "PHLCON" 14 420 "0x14"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
T G "PHYREG" 14 546 "{int16 Val,WORD_VAL VAL}" "* Individual Register Bits"
D G "EIE_INTIE" 14 555 " (1<<7)"
D G "EIE_PKTIE" 14 556 " (1<<6)"
D G "EIE_DMAIE" 14 557 " (1<<5)"
D G "EIE_LINKIE" 14 558 " (1<<4)"
D G "EIE_TXIE" 14 559 " (1<<3)"
D G "EIE_TXERIE" 14 560 " (1<<1)"
D G "EIE_RXERIE" 14 561 " (1)"
D G "EIR_PKTIF" 14 564 " (1<<6)"
D G "EIR_DMAIF" 14 565 " (1<<5)"
D G "EIR_LINKIF" 14 566 " (1<<4)"
D G "EIR_TXIF" 14 567 " (1<<3)"
D G "EIR_TXERIF" 14 568 " (1<<1)"
D G "EIR_RXERIF" 14 569 " (1)"
D G "ESTAT_INT" 14 572 " (1<<7)"
D G "ESTAT_BUFFER" 14 573 " (1<<6)"
D G "ESTAT_LATECOL" 14 574 " (1<<4)"
D G "ESTAT_RXBUSY" 14 575 " (1<<2)"
D G "ESTAT_TXABRT" 14 576 " (1<<1)"
D G "ESTAT_CLKRDY" 14 577 " (1)"
D G "ECON2_AUTOINC" 14 580 " (1<<7)"
D G "ECON2_PKTDEC" 14 581 " (1<<6)"
D G "ECON2_PWRSV" 14 582 " (1<<5)"
D G "ECON2_VRPS" 14 583 " (1<<3)"
D G "ECON1_TXRST" 14 586 " (1<<7)"
D G "ECON1_RXRST" 14 587 " (1<<6)"
D G "ECON1_DMAST" 14 588 " (1<<5)"
D G "ECON1_CSUMEN" 14 589 " (1<<4)"
D G "ECON1_TXRTS" 14 590 " (1<<3)"
D G "ECON1_RXEN" 14 591 " (1<<2)"
D G "ECON1_BSEL1" 14 592 " (1<<1)"
D G "ECON1_BSEL0" 14 593 " (1)"
D G "ERXFCON_UCEN" 14 596 " (1<<7)"
D G "ERXFCON_ANDOR" 14 597 " (1<<6)"
D G "ERXFCON_CRCEN" 14 598 " (1<<5)"
D G "ERXFCON_PMEN" 14 599 " (1<<4)"
D G "ERXFCON_MPEN" 14 600 " (1<<3)"
D G "ERXFCON_HTEN" 14 601 " (1<<2)"
D G "ERXFCON_MCEN" 14 602 " (1<<1)"
D G "ERXFCON_BCEN" 14 603 " (1)"
D G "MACON1_TXPAUS" 14 606 " (1<<3)"
D G "MACON1_RXPAUS" 14 607 " (1<<2)"
D G "MACON1_PASSALL" 14 608 " (1<<1)"
D G "MACON1_MARXEN" 14 609 " (1)"
D G "MACON3_PADCFG2" 14 612 " (1<<7)"
D G "MACON3_PADCFG1" 14 613 " (1<<6)"
D G "MACON3_PADCFG0" 14 614 " (1<<5)"
D G "MACON3_TXCRCEN" 14 615 " (1<<4)"
D G "MACON3_PHDRLEN" 14 616 " (1<<3)"
D G "MACON3_HFRMEN" 14 617 " (1<<2)"
D G "MACON3_FRMLNEN" 14 618 " (1<<1)"
D G "MACON3_FULDPX" 14 619 " (1)"
D G "MACON4_DEFER" 14 622 " (1<<6)"
D G "MACON4_BPEN" 14 623 " (1<<5)"
D G "MACON4_NOBKOFF" 14 624 " (1<<4)"
D G "MICMD_MIISCAN" 14 628 " (1<<1)"
D G "MICMD_MIIRD" 14 629 " (1)"
D G "EBSTCON_PSV2" 14 632 " (1<<7)"
D G "EBSTCON_PSV1" 14 633 " (1<<6)"
D G "EBSTCON_PSV0" 14 634 " (1<<5)"
D G "EBSTCON_PSEL" 14 635 " (1<<4)"
D G "EBSTCON_TMSEL1" 14 636 " (1<<3)"
D G "EBSTCON_TMSEL0" 14 637 " (1<<2)"
D G "EBSTCON_TME" 14 638 " (1<<1)"
D G "EBSTCON_BISTST" 14 639 " (1)"
D G "MISTAT_NVALID" 14 642 " (1<<2)"
D G "MISTAT_SCAN" 14 643 " (1<<1)"
D G "MISTAT_BUSY" 14 644 " (1)"
D G "ECOCON_COCON2" 14 647 " (1<<2)"
D G "ECOCON_COCON1" 14 648 " (1<<1)"
D G "ECOCON_COCON0" 14 649 " (1)"
D G "EFLOCON_FULDPXS" 14 652 " (1<<2)"
D G "EFLOCON_FCEN1" 14 653 " (1<<1)"
D G "EFLOCON_FCEN0" 14 654 " (1)"
D G "PHCON1_PRST" 14 661 " (1ul<<15)"
D G "PHCON1_PLOOPBK" 14 662 " (1ul<<14)"
D G "PHCON1_PPWRSV" 14 663 " (1ul<<11)"
D G "PHCON1_PDPXMD" 14 664 " (1ul<<8)"
D G "PHSTAT1_PFDPX" 14 667 " (1ul<<12)"
D G "PHSTAT1_PHDPX" 14 668 " (1ul<<11)"
D G "PHSTAT1_LLSTAT" 14 669 " (1ul<<2)"
D G "PHSTAT1_JBSTAT" 14 670 " (1ul<<1)"
D G "PHID2_PID24" 14 673 " (1ul<<15)"
D G "PHID2_PID23" 14 674 " (1ul<<14)"
D G "PHID2_PID22" 14 675 " (1ul<<13)"
D G "PHID2_PID21" 14 676 " (1ul<<12)"
D G "PHID2_PID20" 14 677 " (1ul<<11)"
D G "PHID2_PID19" 14 678 " (1ul<<10)"
D G "PHID2_PPN5" 14 679 " (1ul<<9)"
D G "PHID2_PPN4" 14 680 " (1ul<<8)"
D G "PHID2_PPN3" 14 681 " (1ul<<7)"
D G "PHID2_PPN2" 14 682 " (1ul<<6)"
D G "PHID2_PPN1" 14 683 " (1ul<<5)"
D G "PHID2_PPN0" 14 684 " (1ul<<4)"
D G "PHID2_PREV3" 14 685 " (1ul<<3)"
D G "PHID2_PREV2" 14 686 " (1ul<<2)"
D G "PHID2_PREV1" 14 687 " (1ul<<1)"
D G "PHID2_PREV0" 14 688 " (1ul)"
D G "PHCON2_FRCLNK" 14 691 " (1ul<<14)"
D G "PHCON2_TXDIS" 14 692 " (1ul<<13)"
D G "PHCON2_JABBER" 14 693 " (1ul<<10)"
D G "PHCON2_HDLDIS" 14 694 " (1ul<<8)"
D G "PHSTAT2_TXSTAT" 14 697 " (1ul<<13)"
D G "PHSTAT2_RXSTAT" 14 698 " (1ul<<12)"
D G "PHSTAT2_COLSTAT" 14 699 " (1ul<<11)"
D G "PHSTAT2_LSTAT" 14 700 " (1ul<<10)"
D G "PHSTAT2_DPXSTAT" 14 701 " (1ul<<9)"
D G "PHSTAT2_PLRITY" 14 702 " (1ul<<5)"
D G "PHIE_PLNKIE" 14 705 " (1ul<<4)"
D G "PHIE_PGEIE" 14 706 " (1ul<<1)"
D G "PHIR_PLNKIF" 14 709 " (1ul<<4)"
D G "PHIR_PGIF" 14 710 " (1ul<<2)"
D G "PHLCON_LACFG3" 14 713 " (1ul<<11)"
D G "PHLCON_LACFG2" 14 714 " (1ul<<10)"
D G "PHLCON_LACFG1" 14 715 " (1ul<<9)"
D G "PHLCON_LACFG0" 14 716 " (1ul<<8)"
D G "PHLCON_LBCFG3" 14 717 " (1ul<<7)"
D G "PHLCON_LBCFG2" 14 718 " (1ul<<6)"
D G "PHLCON_LBCFG1" 14 719 " (1ul<<5)"
D G "PHLCON_LBCFG0" 14 720 " (1ul<<4)"
D G "PHLCON_LFRQ1" 14 721 " (1ul<<3)"
D G "PHLCON_LFRQ0" 14 722 " (1ul<<2)"
D G "PHLCON_STRCH" 14 723 " (1ul<<1)"
C L "CalcIPBufferChecksum" 12 64 1 "FUNCTION"
E G "HALF" 12 67 "0"
E G "FULL" 12 68 "1"
E G "USE_PHY" 12 69 "2"
T G "DUPLEX" 12 69 "_DUPLEX"
E G "Divide1" 12 73 "0"
E G "Divide2" 12 74 "1"
E G "Divide3" 12 75 "2"
E G "Divide4" 12 76 "3"
E G "Divide8" 12 77 "4"
T G "CLK_CONFIG" 12 77 "_CLK_CONFIG"
F G "MACSetDuplex" 12 78 "void()"
V L "DuplexState" 12 78 "DUPLEX"
F G "CalcIPBufferChecksum" 12 79 "WORD()"
V L "len" 12 79 "WORD"
F G "MACPowerDown" 12 81 "void(WORD len)"
F G "MACPowerUp" 12 82 "void()"
F G "MACCalcRxChecksum" 12 83 "WORD()"
V L "offset" 12 83 "WORD"
V L "len" 12 83 "WORD"
F G "MACCalcTxChecksum" 12 84 "WORD()"
V L "offset" 12 84 "WORD"
V L "len" 12 84 "WORD"
F G "MACCopyRxToTx" 12 85 "void()"
V L "RxOffset" 12 85 "WORD"
V L "TxOffset" 12 85 "WORD"
V L "len" 12 85 "WORD"
F G "WritePHYReg" 12 86 "void()"
V L "Register" 12 86 "int8"
V L "Data" 12 86 "WORD"
F G "ReadPHYReg" 12 87 "PHYREG()"
V L "Register" 12 87 "int8"
F G "SetRXHashTableEntry" 12 88 "void()"
V L "DestMACAddr" 12 88 "MAC_ADDR" "* Macro:           void SetLEDConfig(WORD NewConfig)"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
D G "SetLEDConfig" 12 139 "(NewConfig)      WritePHYReg(PHLCON, NewConfig)"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
D G "GetLEDConfig" 12 188 "()      ReadPHYReg(PHLCON).Val"
F G "MACInit" 12 193 "void()"
F G "MACIsLinked" 12 194 "int8()"
F G "MACGetHeader" 12 196 "int8()"
V L "remote" 12 196 "*MAC_ADDR"
V L "type" 12 196 "*int8"
F G "MACSetRxBuffer" 12 197 "void()"
V L "offset" 12 197 "WORD"
F G "MACGet" 12 198 "int8()"
F G "MACGetArray" 12 199 "WORD()"
V L "val" 12 199 "*int8"
V L "len" 12 199 "WORD"
F G "MACDiscardRx" 12 200 "void()"
F G "MACGetFreeRxSize" 12 201 "WORD()"
F G "MACPutHeader" 12 203 "void()"
V L "remote" 12 203 "*MAC_ADDR"
V L "type" 12 204 "int8"
V L "dataLen" 12 205 "WORD"
F G "MACIsTxReady" 12 206 "int8()"
V L "HighPriority" 12 206 "int8"
F G "MACSetTxBuffer" 12 207 "void()"
V L "buffer" 12 207 "BUFFER"
V L "offset" 12 207 "WORD"
F G "MACPut" 12 208 "void()"
V L "val" 12 208 "int8"
F G "MACPutArray" 12 209 "void()"
V L "val" 12 209 "*int8"
V L "len" 12 209 "WORD"
F G "MACDiscardTx" 12 210 "void()"
V L "buffer" 12 210 "BUFFER"
F G "MACFlush" 12 211 "void()"
F G "MACGetTxBuffer" 12 212 "BUFFER()"
V L "HighPriority" 12 212 "int8" "extern *"
V G "CurrentTxBuffer" 12 215 "BUFFER" "* Function:        BYTE hexatob(WORD_VAL AsciiChars)"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
F G "hexatob" 10 67 "int8()"
V L "AsciiChars" 10 67 "WORD_VAL" "Convert lowercase to uppercase"
C L "hexatob" 10 51 1 "FUNCTION"
C L "hexatob" 10 51 1 "FUNCTION"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
F G "btohexa_high" 10 108 "int8(WORD_VAL AsciiChars)"
V L "b" 10 108 "int8"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
F G "btohexa_low" 10 132 "int8(int8 b)"
V L "b" 10 132 "int8"
F G "swaps" 10 138 "WORD(int8 b)"
V L "v" 10 138 "WORD_VAL"
V L "new" 10 140 "WORD_VAL"
F G "swapl" 10 148 "DWORD()"
V L "v" 10 148 "DWORD_VAL"
V L "new" 10 150 "DWORD_VAL"
F G "CalcIPChecksum" 10 160 "WORD()"
V L "buffer" 10 160 "*int8"
V L "count" 10 160 "WORD"
V L "i" 10 162 "WORD"
V L "val" 10 163 "*WORD"
V L "tempSum" 10 173 "{DWORD Val}"
V L "sum" 10 173 "{DWORD Val}"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
F G "strupr" 10 257 "*int8()"
V L "s" 10 257 "*int8"
V L "c" 10 259 "int8"
V L "t" 10 260 "*int8"
F G "delay_s" 10 272 "void()"
V L "s" 10 272 "int8"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
D G "TICK_INCLUDE" 15 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
D G "TICK_H" 16 43 ""
T G "TICKTYPE" 16 45 "int16" "* This value is used by TCP to implement timeout actions."
D G "TICKS_PER_SECOND" 16 50 "10"
D G "CYCLES_PER_TICKS_PER_SECOND" 16 57 "getenv("CLOCK")/(4 * 16 * TICKS_PER_SECOND)"
D G "TICK_COUNTER" 16 68 "0xFFFF-CYCLES_PER_TICKS_PER_SECOND"
D G "TICK_SECOND" 16 82 "TICKS_PER_SECOND"
D G "TickGetDiff" 16 85 "(a, b)       ((TICKTYPE)(a < b) ? (((TICKTYPE)0xffff - b) + a + 1) : (a - b))"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
F G "TickInit" 16 103 "void()"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
F G "TickGet" 16 122 "TICKTYPE()"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 2 "*"
V G "TickCount" 15 50 "TICKTYPE"
C L "TickGet" 15 50 1 "FUNCTION"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
F G "TickInit" 15 68 "void()"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
F G "TickGet" 15 93 "TICKTYPE()"
V L "ret" 15 95 "int16"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
V G "second_counter" 15 117 "int8"
V G "second_counter_intermediate" 15 118 "int8"
F G "Tick_Isr" 15 126 "void()"
C L "Tick_Isr" 15 102 1 "FUNCTION"
C L "Tick_Isr" 15 102 1 "FUNCTION"
C L "Tick_Isr" 15 102 1 "FUNCTION"
D G "debug_stack" 2 73 ""
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
D G "THIS_IS_MAC_LAYER" 17 47 ""
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 2 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
D G "debug_mac" 17 61 ""
D G "SPISelectEthernet" 17 77 "()      output_low(PIN_ENC_MAC_CS)" "changed by ccs"
D G "SPIUnselectEthernet" 17 78 "()   output_high(PIN_ENC_MAC_CS)" "changed by ccs"
D G "HALF_DUPLEX" 17 99 ""
D G "LOW" 17 104 "(a)                (a & 0xFF)"
D G "HIGH" 17 105 "(a)             ((a>>8) & 0xFF)"
D G "RAMSIZE" 17 108 "8192ul"
D G "TXSTART" 17 109 " (RAMSIZE-(MAC_TX_BUFFER_COUNT * (MAC_TX_BUFFER_SIZE + 8ul)))"
D G "RXSTART" 17 110 " (0ul)" "Should be an even memory address"
D G "RXSTOP" 17 111 " ((TXSTART-2ul) | 0x0001ul)" "Odd for errata workaround"
D G "RXSIZE" 17 112 " (RXSTOP-RXSTART+1ul)"
D G "WCR" 17 115 " (0b010<<5)" "Write Control Register command"
D G "BFS" 17 116 " (0b100<<5)" "Bit Field Set command"
D G "BFC" 17 117 " (0b101<<5)" "Bit Field Clear command"
D G "RCR" 17 118 " (0b000<<5)" "Read Control Register command"
D G "RBM" 17 119 " ((0b001<<5) | 0x1A)" "Read Buffer Memory command"
D G "WBM" 17 120 " ((0b011<<5) | 0x1A)" "Write Buffer Memory command"
D G "SR" 17 121 " ((0b111<<5) | 0x1F)" "System Reset command does not use an address."
D G "ETHER_IP" 17 124 " (0x00u)"
D G "ETHER_ARP" 17 125 " (0x06u)"
D G "MAXFRAMEC" 17 127 " (1500u+sizeof(ETHER_HEADER)+4u)"
T G "ETHER_HEADER" 17 136 "{MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}" "A header appended at the start of all RX frames by the hardware"
T G "ENC_PREAMBLE" 17 147 "{int16 NextPacketPointer,RXSTATUS StatusVector,MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}"
T G "DATA_BUFFER" 17 158 "{WORD_VAL StartAddress,WORD_VAL EndAddress}"
F G "MACSetDuplex" 17 160 "void()"
V L "DuplexState" 17 160 "DUPLEX" "Prototypes of functions intended for MAC layer use only."
F G "BankSel" 17 163 "void(DUPLEX DuplexState)"
V L "Register" 17 163 "WORD"
F G "ReadETHReg" 17 164 "REG()"
V L "Address" 17 164 "int8"
F G "ReadMACReg" 17 165 "REG()"
V L "Address" 17 165 "int8"
F G "WriteReg" 17 166 "void()"
V L "Address" 17 166 "int8"
V L "Data" 17 166 "int8"
F G "BFCReg" 17 167 "void()"
V L "Address" 17 167 "int8"
V L "Data" 17 167 "int8"
F G "BFSReg" 17 168 "void()"
V L "Address" 17 168 "int8"
V L "Data" 17 168 "int8"
F G "SendSystemReset" 17 169 "void()"
C L "SendSystemReset" 17 80 4 "FUNCTION"
V G "NextPacketLocation" 17 188 "WORD_VAL"
V G "CurrentPacketLocation" 17 189 "WORD_VAL"
V G "WasDiscarded" 17 190 "BOOL"
V G "ENCRevID" 17 191 "int8" "ENCSPIInit() added by CCS."
C L "SendSystemReset" 17 80 1 "FUNCTION"
F G "ENCSPIInit" 17 195 "void()"
C L "ENCSPIInit" 17 80 1 "FUNCTION"
C L "ENCSPIInit" 17 80 1 "FUNCTION"
C L "ENCSPIInit" 17 80 5 "FUNCTION"
C L "ENCSPIInit" 17 80 1 "FUNCTION"
C L "ENCSPIXfer" 17 80 2 "FUNCTION"
F G "ENCSPIXfer" 17 219 "int8()"
V L "c" 17 219 "int8"
C L "MACInit" 17 235 1 "*"
C L "MACInit" 17 235 1 "*"
C L "MACInit" 17 235 1 "*"
C L "MACInit" 17 235 1 "*"
C L "MACInit" 17 235 1 "*"
C L "MACInit" 17 235 1 "*"
C L "MACInit" 17 235 1 "*"
C L "MACInit" 17 235 1 "*"
C L "MACInit" 17 235 1 "*"
F G "MACInit" 17 252 "void()"
V L "i" 17 254 "int8"
C L "MACInit" 17 235 4 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 2 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 7 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 3 "FUNCTION"
C L "MACInit" 17 235 3 "FUNCTION"
C L "MACInit" 17 235 3 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 2 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 1 "FUNCTION"
C L "MACInit" 17 235 2 "FUNCTION"
C L "MACIsLinked" 17 235 1 "FUNCTION"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
C L "MACIsLinked" 17 382 1 "*"
F G "MACIsLinked" 17 401 "int8()"
C L "MACIsLinked" 17 382 5 "FUNCTION"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
C L "MACIsTxReady" 17 411 1 "*"
F G "MACIsTxReady" 17 431 "int8()"
V L "HighPriority" 17 431 "int8"
F G "MACGetTxBuffer" 17 464 "BUFFER(int8 HighPriority)"
V L "HighPriority" 17 464 "int8"
F G "MACDiscardTx" 17 496 "void(int8 HighPriority)"
V L "buffer" 17 496 "BUFFER"
C L "MACDiscardRx" 17 508 1 "*"
C L "MACDiscardRx" 17 508 1 "*"
C L "MACDiscardRx" 17 508 1 "*"
C L "MACDiscardRx" 17 508 1 "*"
C L "MACDiscardRx" 17 508 1 "*"
C L "MACDiscardRx" 17 508 1 "*"
C L "MACDiscardRx" 17 508 1 "*"
C L "MACDiscardRx" 17 508 1 "*"
C L "MACDiscardRx" 17 508 1 "*"
F G "MACDiscardRx" 17 525 "void(BUFFER buffer)"
V L "NewRXRDLocation" 17 527 "WORD_VAL" "Make sure the current packet was not already discarded"
C L "MACDiscardRx" 17 508 4 "FUNCTION"
C L "MACDiscardRx" 17 508 1 "FUNCTION"
C L "MACDiscardRx" 17 508 3 "FUNCTION"
C L "MACGetFreeRxSize" 17 559 1 "*"
C L "MACGetFreeRxSize" 17 559 1 "*"
C L "MACGetFreeRxSize" 17 559 1 "*"
C L "MACGetFreeRxSize" 17 559 1 "*"
C L "MACGetFreeRxSize" 17 559 1 "*"
C L "MACGetFreeRxSize" 17 559 1 "*"
C L "MACGetFreeRxSize" 17 559 1 "*"
C L "MACGetFreeRxSize" 17 559 1 "*"
F G "MACGetFreeRxSize" 17 575 "WORD()"
V L "ReadPT" 17 577 "WORD_VAL"
V L "WritePT" 17 577 "WORD_VAL" "Read the Ethernet hardware buffer write pointer.  Because packets can be"
C L "MACGetFreeRxSize" 17 559 3 "FUNCTION"
C L "MACGetFreeRxSize" 17 559 1 "FUNCTION"
C L "MACGetFreeRxSize" 17 559 1 "FUNCTION"
C L "MACGetFreeRxSize" 17 559 2 "FUNCTION"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
C L "MACGetHeader" 17 616 1 "*"
F G "MACGetHeader" 17 639 "int8()"
V L "remote" 17 639 "*MAC_ADDR"
V L "type" 17 639 "*int8"
V L "header" 17 641 "ENC_PREAMBLE" "Test if at least one packet has been received and is waiting"
C L "MACGetHeader" 17 616 1 "FUNCTION"
C L "MACGetHeader" 17 616 1 "FUNCTION"
C L "MACGetHeader" 17 616 1 "FUNCTION"
C L "MACGetHeader" 17 616 1 "FUNCTION"
C L "MACGetHeader" 17 616 2 "FUNCTION"
C L "MACGetHeader" 17 616 3 "FUNCTION"
C L "MACGetHeader" 17 616 1 "FUNCTION"
C L "MACGetHeader" 17 616 1 "FUNCTION"
C L "MACGetHeader" 17 616 3 "FUNCTION"
C L "MACGetHeader" 17 616 1 "FUNCTION"
C L "MACGetHeader" 17 616 1 "FUNCTION"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
C L "MACPutHeader" 17 705 1 "*"
F G "MACPutHeader" 17 731 "void(*int8 type)"
V L "remote" 17 731 "*MAC_ADDR"
V L "type" 17 732 "int8"
V L "dataLen" 17 733 "WORD"
C L "MACPutHeader" 17 705 1 "FUNCTION"
C L "MACPutHeader" 17 705 1 "FUNCTION"
C L "MACPutHeader" 17 705 1 "FUNCTION"
C L "MACPutHeader" 17 705 2 "FUNCTION"
C L "MACPutHeader" 17 705 1 "FUNCTION"
C L "MACPutHeader" 17 705 1 "FUNCTION"
C L "MACPutHeader" 17 705 1 "FUNCTION"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
C L "MACFlush" 17 773 1 "*"
F G "MACFlush" 17 796 "void(*MAC_ADDR remote,int8 type,WORD dataLen)"
C L "MACFlush" 17 773 2 "FUNCTION"
C L "MACFlush" 17 773 5 "FUNCTION"
C L "MACFlush" 17 773 1 "FUNCTION"
V L "ReadPtrSave" 17 831 "WORD_VAL"
V L "TXEnd" 17 832 "WORD_VAL"
V L "TXStatus" 17 833 "TXSTATUS"
V L "i" 17 834 "int8" "Cancel the previous transmission if it has become stuck set"
C L "MACFlush" 17 773 1 "FUNCTION"
C L "MACFlush" 17 773 1 "FUNCTION"
C L "MACFlush" 17 773 1 "FUNCTION"
C L "MACFlush" 17 773 3 "FUNCTION"
C L "MACFlush" 17 773 1 "FUNCTION"
C L "MACFlush" 17 773 1 "FUNCTION"
C L "MACFlush" 17 773 1 "FUNCTION"
C L "MACFlush" 17 773 1 "FUNCTION"
C L "MACFlush" 17 773 1 "FUNCTION"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
C L "MACSetRxBuffer" 17 892 1 "*"
F G "MACSetRxBuffer" 17 915 "void()"
V L "offset" 17 915 "WORD"
V L "ReadPT" 17 917 "WORD_VAL" "Determine the address of the beginning of the entire packet"
C L "MACSetRxBuffer" 17 892 1 "FUNCTION"
C L "MACSetRxBuffer" 17 892 1 "FUNCTION"
C L "MACSetRxBuffer" 17 892 1 "FUNCTION"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
C L "MACSetTxBuffer" 17 936 1 "*"
F G "MACSetTxBuffer" 17 958 "void()"
V L "buffer" 17 958 "BUFFER"
V L "offset" 17 958 "WORD"
C L "MACSetTxBuffer" 17 936 4 "FUNCTION"
C L "MACSetTxBuffer" 17 936 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 936 2 "FUNCTION"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
C L "MACCalcRxChecksum" 17 984 1 "*"
F G "MACCalcRxChecksum" 17 1003 "WORD(BUFFER buffer,WORD offset)"
V L "offset" 17 1003 "WORD"
V L "len" 17 1003 "WORD"
V L "temp" 17 1005 "WORD_VAL" "Add the offset requested by firmware plus the Ethernet header"
C L "MACCalcRxChecksum" 17 984 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 984 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 984 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 984 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 984 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 984 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 984 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
C L "MACCalcTxChecksum" 17 1041 1 "*"
F G "MACCalcTxChecksum" 17 1060 "WORD(WORD len)"
V L "offset" 17 1060 "WORD"
V L "len" 17 1060 "WORD"
V L "temp" 17 1062 "WORD_VAL" "Program the start address of the DMA, after adjusting for the Ethernet"
C L "MACCalcTxChecksum" 17 1041 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1041 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1041 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1041 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1041 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
C L "CalcIPBufferChecksum" 17 1093 1 "*"
F G "CalcIPBufferChecksum" 17 1117 "WORD(WORD len)"
V L "len" 17 1117 "WORD"
V L "temp" 17 1119 "WORD_VAL" "Take care of special cases which the DMA cannot be used for"
C L "CalcIPBufferChecksum" 17 1093 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1093 2 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1093 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1093 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1093 1 "FUNCTION"
C L "MACGet" 17 1093 1 "FUNCTION"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 1 "*"
C L "MACGet" 17 1177 4 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
C L "MACGet" 17 1362 1 "*"
F G "MACGet" 17 1380 "int8()" "SPISelectEthernet();"
C L "MACGet" 17 1362 9 "FUNCTION"
V L "c" 17 1395 "int8"
C L "MACGetArray" 17 1362 1 "FUNCTION"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
C L "MACGetArray" 17 1405 1 "*"
F G "MACGetArray" 17 1426 "WORD()"
V L "val" 17 1426 "*int8"
V L "len" 17 1426 "WORD" "int16 i;"
C L "MACGetArray" 17 1405 14 "FUNCTION"
C L "MACGetArray" 17 1428 5 "*val"
V L "i" 17 1456 "int16"
C L "MACPut" 17 1428 1 "FUNCTION"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
C L "MACPut" 17 1472 1 "*"
F G "MACPut" 17 1490 "void(WORD len)"
V L "val" 17 1490 "int8" "SPISelectEthernet();"
C L "MACPut" 17 1472 7 "FUNCTION"
C L "MACPutArray" 17 1472 1 "FUNCTION"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
C L "MACPutArray" 17 1509 1 "*"
F G "MACPutArray" 17 1528 "void(int8 val)"
V L "val" 17 1528 "*int8"
V L "len" 17 1528 "WORD" "Select the chip and send the proper opcode"
C L "MACPutArray" 17 1509 14 "FUNCTION"
C L "SendSystemReset" 17 1509 1 "FUNCTION"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
C L "SendSystemReset" 17 1561 1 "*"
F G "SendSystemReset" 17 1579 "void(*int8 val,WORD len)"
C L "SendSystemReset" 17 1561 5 "FUNCTION"
C L "ReadETHReg" 17 1561 1 "FUNCTION"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
C L "ReadETHReg" 17 1594 1 "*"
F G "ReadETHReg" 17 1616 "REG(*int8 val,WORD len)"
V L "Address" 17 1616 "int8"
V L "c" 17 1618 "int8" "Select the chip and send the Read Control Register opcode/address"
C L "ReadETHReg" 17 1594 10 "FUNCTION"
C L "ReadMACReg" 17 1594 1 "FUNCTION"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
C L "ReadMACReg" 17 1643 1 "*"
F G "ReadMACReg" 17 1665 "REG(WORD len)"
V L "Address" 17 1665 "int8"
V L "c" 17 1667 "int8" "SPISelectEthernet();"
C L "ReadMACReg" 17 1643 13 "FUNCTION"
C L "ReadPHYReg" 17 1643 1 "FUNCTION"
C L "ReadPHYReg" 17 1701 1 "*"
C L "ReadPHYReg" 17 1701 1 "*"
C L "ReadPHYReg" 17 1701 1 "*"
C L "ReadPHYReg" 17 1701 1 "*"
C L "ReadPHYReg" 17 1701 1 "*"
C L "ReadPHYReg" 17 1701 1 "*"
C L "ReadPHYReg" 17 1701 1 "*"
C L "ReadPHYReg" 17 1701 1 "*"
F G "ReadPHYReg" 17 1717 "PHYREG()"
V L "Register" 17 1717 "int8"
V L "Result" 17 1719 "PHYREG" "Set the right address and start the register read operation"
C L "ReadPHYReg" 17 1701 2 "FUNCTION"
C L "ReadPHYReg" 17 1701 1 "FUNCTION"
C L "ReadPHYReg" 17 1701 1 "FUNCTION"
C L "WriteReg" 17 1701 1 "FUNCTION"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
C L "WriteReg" 17 1742 1 "*"
F G "WriteReg" 17 1767 "void()"
V L "Address" 17 1767 "int8"
V L "Data" 17 1767 "int8" "SPISelectEthernet();"
C L "WriteReg" 17 1742 7 "FUNCTION"
C L "BFCReg" 17 1742 1 "FUNCTION"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
C L "BFCReg" 17 1786 1 "*"
F G "BFCReg" 17 1808 "void(int8 Address,int8 Data)"
V L "Address" 17 1808 "int8"
V L "Data" 17 1808 "int8" "SPISelectEthernet();"
C L "BFCReg" 17 1786 7 "FUNCTION"
C L "BFSReg" 17 1786 1 "FUNCTION"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
C L "BFSReg" 17 1827 1 "*"
F G "BFSReg" 17 1849 "void(int8 Address,int8 Data)"
V L "Address" 17 1849 "int8"
V L "Data" 17 1849 "int8" "SPISelectEthernet();"
C L "BFSReg" 17 1827 7 "FUNCTION"
C L "WritePHYReg" 17 1827 1 "FUNCTION"
C L "WritePHYReg" 17 1868 1 "*"
C L "WritePHYReg" 17 1868 1 "*"
C L "WritePHYReg" 17 1868 1 "*"
C L "WritePHYReg" 17 1868 1 "*"
C L "WritePHYReg" 17 1868 1 "*"
C L "WritePHYReg" 17 1868 1 "*"
C L "WritePHYReg" 17 1868 1 "*"
C L "WritePHYReg" 17 1868 1 "*"
C L "WritePHYReg" 17 1868 1 "*"
F G "WritePHYReg" 17 1885 "void(int8 Address,int8 Data)"
V L "Register" 17 1885 "int8"
V L "Data" 17 1885 "WORD" "Write the register address"
C L "WritePHYReg" 17 1868 2 "FUNCTION"
C L "WritePHYReg" 17 1868 1 "FUNCTION"
C L "BankSel" 17 1868 1 "FUNCTION"
C L "BankSel" 17 1902 1 "*"
C L "BankSel" 17 1902 1 "*"
C L "BankSel" 17 1902 1 "*"
C L "BankSel" 17 1902 1 "*"
C L "BankSel" 17 1902 1 "*"
C L "BankSel" 17 1902 1 "*"
C L "BankSel" 17 1902 1 "*"
C L "BankSel" 17 1902 1 "*"
C L "BankSel" 17 1902 1 "*"
F G "BankSel" 17 1919 "void(int8 Register,WORD Data)"
V L "Register" 17 1919 "WORD"
C L "MACSetDuplex" 17 1902 1 "FUNCTION"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 1926 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
C L "MACSetDuplex" 17 2041 1 "*"
F G "MACSetDuplex" 17 2064 "void(WORD Register,WORD Data)"
V L "DuplexState" 17 2064 "DUPLEX"
V L "Register" 17 2066 "REG"
V L "PhyReg" 17 2067 "PHYREG" "Disable receive logic and abort any packets currently being transmitted"
C L "MACSetDuplex" 17 2041 1 "FUNCTION"
C L "MACSetDuplex" 17 2041 1 "FUNCTION"
C L "MACSetDuplex" 17 2041 4 "FUNCTION"
C L "MACSetDuplex" 17 2041 1 "FUNCTION"
C L "MACPowerDown" 17 2041 1 "FUNCTION"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
C L "MACPowerDown" 17 2101 1 "*"
F G "MACPowerDown" 17 2120 "void()"
C L "MACPowerDown" 17 2101 1 "FUNCTION"
C L "MACPowerDown" 17 2101 2 "FUNCTION"
C L "MACPowerDown" 17 2101 1 "FUNCTION"
C L "MACPowerDown" 17 2101 1 "FUNCTION"
C L "MACPowerUp" 17 2101 1 "FUNCTION"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
C L "MACPowerUp" 17 2137 1 "*"
F G "MACPowerUp" 17 2156 "void()"
C L "MACPowerUp" 17 2137 1 "FUNCTION"
C L "MACPowerUp" 17 2137 2 "FUNCTION"
C L "MACPowerUp" 17 2137 1 "FUNCTION"
C L "SetCLKOUT" 17 2137 1 "FUNCTION"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
C L "SetCLKOUT" 17 2170 1 "*"
F G "SetCLKOUT" 17 2192 "void()"
V L "NewConfig" 17 2192 "int8"
C L "GetCLKOUT" 17 2170 1 "FUNCTION"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
C L "GetCLKOUT" 17 2199 1 "*"
F G "GetCLKOUT" 17 2221 "int8()"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
D G "UDP_H" 20 41 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
T G "UDP_PORT" 20 46 "WORD"
T G "UDP_SOCKET" 20 47 "int8"
T G "UDP_SOCKET_INFO" 20 62 "{NODE_INFO remoteNode,UDP_PORT remotePort,UDP_PORT localPort,WORD TxCount,WORD RxCount,BUFFER TxBuffer,WORD TxOffset}"
D G "INVALID_UDP_SOCKET" 20 64 " (0xff)"
D G "INVALID_UDP_PORT" 20 65 " (0L)"
C G "" 20 67 1 "*"
C G "" 20 67 1 "*"
V G "activeUDPSocket" 20 71 "UDP_SOCKET"
V G "UDPSocketInfo" 20 72 "UDP_SOCKET_INFO[2]"
T G "UDP_HEADER" 20 81 "{UDP_PORT SourcePort,UDP_PORT DestinationPort,WORD Length,WORD Checksum}" "* Function:        void UDPInit(void)"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
F G "UDPInit" 20 99 "void()"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
F G "UDPOpen" 20 132 "UDP_SOCKET()"
V L "localPort" 20 132 "UDP_PORT"
V L "remoteNode" 20 133 "*NODE_INFO"
V L "remotePort" 20 134 "UDP_PORT" "* Function:        void UDPClose(UDP_SOCKET s)"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
F G "UDPClose" 20 154 "void()"
V L "s" 20 154 "UDP_SOCKET" "* Macro:           BOOL UDPIsPutReady(UDP_SOCKET s)"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 2 "*"
F G "UDPIsPutReady" 20 175 "int8()"
V L "s" 20 175 "int8"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
F G "UDPPut" 20 206 "int8()"
V L "v" 20 206 "int8" "* Function:        BOOL UDPFlush(void)"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
F G "UDPFlush" 20 228 "void()"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
F G "UDPIsGetReady" 20 253 "int8()"
V L "s" 20 253 "UDP_SOCKET" "* Function:        BOOL UDPGet(BYTE *v)"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
F G "UDPGet" 20 275 "int8()"
V L "v" 20 275 "*int8" "* Function:        void UDPDiscard(void)"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
F G "UDPDiscard" 20 294 "void()"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
F G "UDPProcess" 20 318 "int8()"
V L "remoteNode" 20 318 "*NODE_INFO"
V L "localIP" 20 319 "*IP_ADDR"
V L "len" 20 320 "WORD" "* Macro:           UDPSetTxBuffer(a, b)"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
D G "UDPSetTxBuffer" 20 338 "(a, b) (UDPSocketInfo[activeUDPSocket].TxOffset = b,  IPSetTxBuffer(a, b+sizeof(UDP_HEADER)))"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
D G "UDPSetRxBuffer" 20 356 "(a) IPSetRxBuffer(a+sizeof(UDP_HEADER))"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
D G "DHCP_H" 21 44 ""
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 2 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
E G "SM_DHCP_INIT_FIRST_TIME" 21 52 "0"
E G "SM_DHCP_INIT" 21 53 "1"
E G "SM_DHCP_RESET_WAIT" 21 54 "2"
E G "SM_DHCP_BROADCAST" 21 55 "3"
E G "SM_DHCP_DISCOVER" 21 56 "4"
E G "SM_DHCP_REQUEST" 21 57 "5"
E G "SM_DHCP_BIND" 21 58 "6"
E G "SM_DHCP_BOUND" 21 59 "7"
E G "SM_DHCP_DISABLED" 21 60 "8"
T G "SM_DHCP" 21 60 "_SM_DHCP"
V G "smDHCPState" 21 62 "SM_DHCP"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
D G "DHCPDisable" 21 82 "()       (smDHCPState = SM_DHCP_DISABLED)"
D G "DHCPIsDisabled" 21 84 "()      (smDHCPState == SM_DHCP_DISABLED)"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
F G "DHCPTask" 21 118 "void()"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
D G "DHCPIsBound" 21 136 "()       (DHCPState.bits.bIsBound)"
T G "DHCP_STATE" 21 146 "{}"
V G "DHCPState" 21 149 "DHCP_STATE" "* Macro:           void DHCPReset(void)"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
F G "DHCPReset" 21 168 "void()"
E G "SMTP_EC_OK" 22 3 "0"
E G "SMTP_EC_CLOSE_PREVIOUS" 22 4 "1"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_MAC_TX_FAIL" 22 5 "2"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_ARP_FAIL" 22 6 "3"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_INVALID_SOCKET" 22 7 "4"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_CONNECT_FAIL" 22 8 "5"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_BAD_EHLO" 22 9 "6"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_BAD_MAILFROM" 22 10 "7"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_BAD_RCPTTO" 22 11 "8"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_BAD_DATACMD" 22 12 "9"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_PUT_HEADER" 22 13 "10"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_BAD_WELCOME" 22 14 "11"
C L "DHCPReset" 22 4 1 "FUNCTION"
E G "SMTP_EC_BODY_NOT_ACCEPTED" 22 15 "12"
T G "SMTP_EC" 22 15 "__SMTP_EC" "user functions"
F G "SMTPConnect" 22 18 "int8()"
V L "ip" 22 18 "*IP_ADDR"
V L "port" 22 18 "int16"
V L "from" 22 18 "*int8"
V L "to" 22 18 "*int8"
V L "subject" 22 18 "*int8"
F G "SMTPIsPutReady" 22 19 "int8()"
F G "SMTPPut" 22 20 "void()"
V L "c" 22 20 "int8"
F G "SMTPDisconnect" 22 21 "void()"
C L "SMTPDisconnect" 22 4 1 "FUNCTION"
F G "SMTPInit" 22 24 "void()"
F G "SMTPTask" 22 25 "void()"
F G "SMTPReadResultCodeReset" 22 26 "void()"
F G "SMTPReadResultCode" 22 27 "int8()"
V L "smtp_result" 22 27 "*int16"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
C L "SMTPReadResultCode" 23 1 1 "*"
D G "DNS_H" 23 36 ""
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 2 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
C L "SMTPReadResultCode" 3 1 1 "*"
F G "DNSResolve" 23 40 "void()"
V L "HostName" 23 40 "*int8"
F G "DNSIsResolved" 23 41 "int8()"
V L "HostIP" 23 41 "*IP_ADDR"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 24 1 1 "*"
C L "DNSIsResolved" 6 2 7 "FUNCTION"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 2 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 11 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
C L "DNSIsResolved" 25 1 1 "*"
D G "IP_H" 25 45 ""
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 2 "*"
C L "DNSIsResolved" 3 1 1 "*"
C L "DNSIsResolved" 3 1 1 "*"
D G "IP_PROT_ICMP" 25 50 " (1)"
D G "IP_PROT_TCP" 25 51 " (6)"
D G "IP_PROT_UDP" 25 52 " (17)"
C L "DNSIsResolved" 25 55 1 "*"
T G "IP_HEADER" 25 71 "{int8 VersionIHL,int8 TypeOfService,WORD TotalLength,WORD Identification,WORD FragmentInfo,int8 TimeToLive,int8 Protocol,WORD HeaderChecksum,IP_ADDR SourceAddress,IP_ADDR DestAddress}" "* Function:        BOOL IPIsTxReady(BOOL HighPriority)"
C L "DNSIsResolved" 25 74 1 "*"
C L "DNSIsResolved" 25 74 1 "*"
C L "DNSIsResolved" 25 74 1 "*"
C L "DNSIsResolved" 25 74 1 "*"
C L "DNSIsResolved" 25 74 1 "*"
D G "IPIsTxReady" 25 89 "(HighPriority)       MACIsTxReady(HighPriority)"
C L "DNSIsResolved" 25 92 1 "*"
C L "DNSIsResolved" 25 92 1 "*"
C L "DNSIsResolved" 25 92 1 "*"
C L "DNSIsResolved" 25 92 1 "*"
C L "DNSIsResolved" 25 92 1 "*"
C L "DNSIsResolved" 25 92 1 "*"
C L "DNSIsResolved" 25 92 1 "*"
D G "IPSetTxBuffer" 25 108 "(a, b) MACSetTxBuffer(a, b+sizeof(IP_HEADER))"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
C L "DNSIsResolved" 25 112 1 "*"
F G "IPPutHeader" 25 136 "WORD()"
V L "remote" 25 136 "*NODE_INFO"
V L "protocol" 25 137 "int8"
V L "len" 25 138 "WORD" "* Macro:           IPPutArray(a, b)"
C L "IPPutHeader" 25 141 1 "*"
C L "IPPutHeader" 25 141 1 "*"
C L "IPPutHeader" 25 141 1 "*"
C L "IPPutHeader" 25 141 1 "*"
C L "IPPutHeader" 25 141 1 "*"
D G "IPPutArray" 25 156 "(a, b)    MACPutArray(a, b)"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
C L "IPPutHeader" 25 161 1 "*"
F G "IPGetHeader" 25 187 "int8()"
V L "localIP" 25 187 "*IP_ADDR"
V L "remote" 25 188 "*NODE_INFO"
V L "protocol" 25 189 "*int8"
V L "len" 25 190 "*WORD" "* Macro:           IPDiscard()"
C L "IPGetHeader" 25 193 1 "*"
C L "IPGetHeader" 25 193 1 "*"
C L "IPGetHeader" 25 193 1 "*"
C L "IPGetHeader" 25 193 1 "*"
C L "IPGetHeader" 25 193 1 "*"
D G "IPDiscard" 25 208 "()         MACDiscard()"
C L "IPGetHeader" 25 212 1 "*"
C L "IPGetHeader" 25 212 1 "*"
C L "IPGetHeader" 25 212 1 "*"
C L "IPGetHeader" 25 212 1 "*"
C L "IPGetHeader" 25 212 1 "*"
C L "IPGetHeader" 25 212 1 "*"
D G "IPGetArray" 25 227 "(a, b)    MACGetArray(a, b)"
C L "IPGetHeader" 25 232 1 "*"
C L "IPGetHeader" 25 232 1 "*"
C L "IPGetHeader" 25 232 1 "*"
C L "IPGetHeader" 25 232 1 "*"
C L "IPGetHeader" 25 232 1 "*"
C L "IPGetHeader" 25 232 1 "*"
C L "IPGetHeader" 25 232 1 "*"
C L "IPGetHeader" 25 232 1 "*"
F G "IPSetRxBuffer" 25 248 "void()"
V L "Offset" 25 248 "WORD" "This is left shifted by 4.  Actual value is 0x04."
D G "IPv4" 24 55 " (0x40u)"
D G "IP_VERSION" 24 56 "IPv4"
D G "debug_ip" 24 58 ""
D G "IP_IHL" 24 64 " (0x05)"
D G "IP_SERVICE_NW_CTRL" 24 66 " (0x07)"
D G "IP_SERVICE_IN_CTRL" 24 67 " (0x06)"
D G "IP_SERVICE_ECP" 24 68 " (0x05)"
D G "IP_SERVICE_OVR" 24 69 " (0x04)"
D G "IP_SERVICE_FLASH" 24 70 " (0x03)"
D G "IP_SERVICE_IMM" 24 71 " (0x02)"
D G "IP_SERVICE_PRIOR" 24 72 " (0x01)"
D G "IP_SERVICE_ROUTINE" 24 73 " (0x00)"
D G "IP_SERVICE_N_DELAY" 24 75 " (0x00)"
D G "IP_SERCICE_L_DELAY" 24 76 " (0x08)"
D G "IP_SERVICE_N_THRPT" 24 77 " (0x00)"
D G "IP_SERVICE_H_THRPT" 24 78 " (0x10)"
D G "IP_SERVICE_N_RELIB" 24 79 " (0x00)"
D G "IP_SERVICE_H_RELIB" 24 80 " (0x20)"
D G "IP_SERVICE" 24 82 " (IP_SERVICE_ROUTINE | IP_SERVICE_N_DELAY)"
D G "MY_IP_TTL" 24 84 " (100)" "Time-To-Live in Seconds"
V G "_Identifier" 24 89 "WORD"
V G "IPHeaderLen" 24 90 "int8"
F G "SwapIPHeader" 24 92 "void()"
V L "h" 24 92 "*IP_HEADER" "* Function:        BOOL IPGetHeader( IP_ADDR    *localIP,"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
C L "SwapIPHeader" 24 97 1 "*"
F G "IPGetHeader" 24 123 "int8()"
V L "localIP" 24 123 "*IP_ADDR"
V L "remote" 24 124 "*NODE_INFO"
V L "protocol" 24 125 "*int8"
V L "len" 24 126 "*WORD"
V L "CalcChecksum" 24 128 "WORD_VAL"
V L "header" 24 129 "IP_HEADER"
C L "IPGetHeader" 24 97 1 "FUNCTION"
C L "IPGetHeader" 24 97 1 "FUNCTION"
C L "IPGetHeader" 24 97 4 "FUNCTION"
C L "IPGetHeader" 24 97 1 "FUNCTION"
C L "IPGetHeader" 24 97 2 "FUNCTION"
C L "IPGetHeader" 24 97 1 "FUNCTION"
C L "IPGetHeader" 24 97 2 "FUNCTION"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
C L "IPPutHeader" 24 220 1 "*"
F G "IPPutHeader" 24 238 "WORD(*int8 protocol,*WORD len)"
V L "remote" 24 238 "*NODE_INFO"
V L "protocol" 24 239 "int8"
V L "len" 24 240 "WORD"
V L "header" 24 242 "IP_HEADER"
C L "IPPutHeader" 24 220 1 "FUNCTION"
C L "IPPutHeader" 24 220 1 "FUNCTION"
C L "IPSetRxBuffer" 24 278 1 "*"
C L "IPSetRxBuffer" 24 278 1 "*"
C L "IPSetRxBuffer" 24 278 1 "*"
C L "IPSetRxBuffer" 24 278 1 "*"
C L "IPSetRxBuffer" 24 278 1 "*"
C L "IPSetRxBuffer" 24 278 1 "*"
C L "IPSetRxBuffer" 24 278 1 "*"
C L "IPSetRxBuffer" 24 278 1 "*"
F G "IPSetRxBuffer" 24 294 "void(int8 protocol,WORD len)"
V L "Offset" 24 294 "WORD"
F G "SwapIPHeader" 24 301 "void(WORD Offset,WORD len)"
V L "h" 24 301 "*IP_HEADER"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
D G "TCP_H" 27 40 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
T G "TCP_SOCKET" 27 45 "int8"
T G "TCP_PORT" 27 46 "WORD" "* Maximum number of times a connection be retried before"
D G "MAX_RETRY_COUNTS" 27 56 " (3)"
D G "INVALID_SOCKET" 27 58 " (0xfe)"
D G "UNKNOWN_SOCKET" 27 59 " (0xff)"
D G "REMOTE_HOST" 27 61 "(s)      (TCB[s].remote)"
C G "" 27 63 1 "*"
E G "TCP_LISTEN" 27 69 "0"
E G "TCP_SYN_SENT" 27 70 "1"
E G "TCP_SYN_RECEIVED" 27 71 "2"
E G "TCP_ESTABLISHED" 27 72 "3"
E G "TCP_FIN_WAIT_1" 27 73 "4"
E G "TCP_FIN_WAIT_2" 27 74 "5"
E G "TCP_CLOSING" 27 75 "6"
E G "TCP_TIME_WAIT" 27 76 "7"
E G "TCP_CLOSE_WAIT" 27 77 "8"
E G "TCP_LAST_ACK" 27 78 "9"
E G "TCP_CLOSED" 27 79 "10"
T G "TCP_STATE" 27 79 "_TCP_STATE" "* Socket info."
C G "" 27 81 1 "*"
T G "SOCKET_INFO" 27 115 "{TCP_STATE smState,NODE_INFO remote,TCP_PORT localPort,TCP_PORT remotePort,BUFFER TxBuffer,WORD TxCount,WORD RxCount,WORD RemoteWindow,DWORD SND_SEQ,DWORD SND_ACK,int8 RetryCount,TICKTYPE startTick,TICKTYPE TimeOut}" "* Function:        void TCPInit(void)"
C L "TCPInit" 27 117 1 "*"
C L "TCPInit" 27 117 1 "*"
C L "TCPInit" 27 117 1 "*"
C L "TCPInit" 27 117 1 "*"
C L "TCPInit" 27 117 1 "*"
C L "TCPInit" 27 117 1 "*"
C L "TCPInit" 27 117 1 "*"
F G "TCPInit" 27 133 "void()"
C L "TCPInit" 27 137 1 "*"
C L "TCPInit" 27 137 1 "*"
C L "TCPInit" 27 137 1 "*"
C L "TCPInit" 27 137 1 "*"
C L "TCPInit" 27 137 1 "*"
C L "TCPInit" 27 137 1 "*"
C L "TCPInit" 27 137 1 "*"
C L "TCPInit" 27 137 1 "*"
F G "TCPListen" 27 153 "TCP_SOCKET()"
V L "port" 27 153 "TCP_PORT" "* Function:        TCP_SOCKET TCPConnect(NODE_INFO* remote,"
C L "TCPListen" 27 157 1 "*"
C L "TCPListen" 27 157 1 "*"
C L "TCPListen" 27 157 1 "*"
C L "TCPListen" 27 157 1 "*"
C L "TCPListen" 27 157 1 "*"
C L "TCPListen" 27 157 1 "*"
C L "TCPListen" 27 157 1 "*"
C L "TCPListen" 27 157 1 "*"
F G "TCPConnect" 27 174 "TCP_SOCKET()"
V L "remote" 27 174 "*NODE_INFO"
V L "port" 27 174 "TCP_PORT" "* Function:        BOOL TCPIsConnected(TCP_SOCKET s)"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
C L "TCPConnect" 27 177 1 "*"
F G "TCPIsConnected" 27 196 "int8()"
V L "s" 27 196 "TCP_SOCKET" "* Function:        void TCPDisconnect(TCP_SOCKET s)"
C L "TCPIsConnected" 27 199 1 "*"
C L "TCPIsConnected" 27 199 1 "*"
C L "TCPIsConnected" 27 199 1 "*"
C L "TCPIsConnected" 27 199 1 "*"
C L "TCPIsConnected" 27 199 1 "*"
C L "TCPIsConnected" 27 199 1 "*"
C L "TCPIsConnected" 27 199 1 "*"
F G "TCPDisconnect" 27 215 "void()"
V L "s" 27 215 "TCP_SOCKET" "* Function:        BOOL TCPIsPutReady(TCP_SOCKET s)"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
C L "TCPDisconnect" 27 218 1 "*"
F G "TCPIsPutReady" 27 240 "int8()"
V L "s" 27 240 "TCP_SOCKET" "* Function:        BOOL TCPPut(TCP_SOCKET s, BYTE byte)"
C L "TCPIsPutReady" 27 243 1 "*"
C L "TCPIsPutReady" 27 243 1 "*"
C L "TCPIsPutReady" 27 243 1 "*"
C L "TCPIsPutReady" 27 243 1 "*"
C L "TCPIsPutReady" 27 243 1 "*"
C L "TCPIsPutReady" 27 243 1 "*"
C L "TCPIsPutReady" 27 243 1 "*"
C L "TCPIsPutReady" 27 243 1 "*"
F G "TCPPut" 27 260 "int8()"
V L "socket" 27 260 "TCP_SOCKET"
V L "data" 27 260 "int8" "* Function:        BOOL TCPFlush(TCP_SOCKET s)"
C L "TCPPut" 27 263 1 "*"
C L "TCPPut" 27 263 1 "*"
C L "TCPPut" 27 263 1 "*"
C L "TCPPut" 27 263 1 "*"
C L "TCPPut" 27 263 1 "*"
C L "TCPPut" 27 263 1 "*"
C L "TCPPut" 27 263 1 "*"
F G "TCPFlush" 27 279 "int8()"
V L "socket" 27 279 "TCP_SOCKET" "* Function:        BOOL TCPIsGetReady(TCP_SOCKET s)"
C L "TCPFlush" 27 281 1 "*"
C L "TCPFlush" 27 281 1 "*"
C L "TCPFlush" 27 281 1 "*"
C L "TCPFlush" 27 281 1 "*"
C L "TCPFlush" 27 281 1 "*"
C L "TCPFlush" 27 281 1 "*"
C L "TCPFlush" 27 281 1 "*"
F G "TCPIsGetReady" 27 297 "int8()"
V L "s" 27 297 "TCP_SOCKET" "* Function:        BOOL TCPGet(TCP_SOCKET s, BYTE *byte)"
C L "TCPIsGetReady" 27 300 1 "*"
C L "TCPIsGetReady" 27 300 1 "*"
C L "TCPIsGetReady" 27 300 1 "*"
C L "TCPIsGetReady" 27 300 1 "*"
C L "TCPIsGetReady" 27 300 1 "*"
C L "TCPIsGetReady" 27 300 1 "*"
C L "TCPIsGetReady" 27 300 1 "*"
C L "TCPIsGetReady" 27 300 1 "*"
C L "TCPIsGetReady" 27 300 1 "*"
F G "TCPGet" 27 318 "int8()"
V L "socket" 27 318 "TCP_SOCKET"
V L "data" 27 318 "*int8" "* Function:        WORD TCPGetArray(TCP_SOCKET s, BYTE *buffer,"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
C L "TCPGet" 27 321 1 "*"
F G "TCPGetArray" 27 340 "WORD()"
V L "s" 27 340 "TCP_SOCKET"
V L "buff" 27 340 "*int8"
V L "count" 27 340 "WORD" "* Function:        BOOL TCPDiscard(TCP_SOCKET s)"
C L "TCPGetArray" 27 343 1 "*"
C L "TCPGetArray" 27 343 1 "*"
C L "TCPGetArray" 27 343 1 "*"
C L "TCPGetArray" 27 343 1 "*"
C L "TCPGetArray" 27 343 1 "*"
C L "TCPGetArray" 27 343 1 "*"
C L "TCPGetArray" 27 343 1 "*"
C L "TCPGetArray" 27 343 1 "*"
F G "TCPDiscard" 27 360 "int8()"
V L "socket" 27 360 "TCP_SOCKET" "* Function:        BOOL TCPProcess(NODE_INFO* remote,"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
C L "TCPDiscard" 27 363 1 "*"
F G "TCPProcess" 27 383 "int8()"
V L "remote" 27 383 "*NODE_INFO"
V L "localIP" 27 384 "*IP_ADDR"
V L "len" 27 385 "WORD" "* Function:        void TCPTick(void)"
C L "TCPProcess" 27 388 1 "*"
C L "TCPProcess" 27 388 1 "*"
C L "TCPProcess" 27 388 1 "*"
C L "TCPProcess" 27 388 1 "*"
C L "TCPProcess" 27 388 1 "*"
C L "TCPProcess" 27 388 1 "*"
C L "TCPProcess" 27 388 1 "*"
F G "TCPTick" 27 404 "void()"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
D G "debug_tcp" 26 80 "(a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u)"
D G "MAX_TCP_DATA_LEN" 26 85 " (MAC_TX_BUFFER_SIZE - 54)"
D G "TCP_START_TIMEOUT_VAL" 26 88 " (TICKS_PER_SECOND * (TICKTYPE)3)"
D G "FIN" 26 91 " (0x01)"
D G "SYN" 26 92 " (0x02)"
D G "RST" 26 93 " (0x04)"
D G "PSH" 26 94 " (0x08)"
D G "ACK" 26 95 " (0x10)"
D G "URG" 26 96 " (0x20)"
C L "TCPTick" 26 81 1 "FUNCTION"
T G "TCP_HEADER" 26 132 "{WORD SourcePort,WORD DestPort,DWORD SeqNumber,DWORD AckNumber}" "TCP Options as defined by RFC"
D G "TCP_OPTIONS_END_OF_LIST" 26 136 " (0x00)"
D G "TCP_OPTIONS_NO_OP" 26 137 " (0x01)"
D G "TCP_OPTIONS_MAX_SEG_SIZE" 26 138 " (0x02)"
T G "TCP_OPTIONS" 26 144 "{int8 Kind,int8 Length,WORD_VAL MaxSegSize}"
D G "SwapPseudoTCPHeader" 26 146 "(h)  (h.TCPLength = swaps(h.TCPLength))"
C L "TCPTick" 26 81 1 "FUNCTION"
T G "PSEUDO_HEADER" 26 156 "{IP_ADDR SourceAddress,IP_ADDR DestAddress,int8 Zero,int8 Protocol,WORD TCPLength}"
D G "LOCAL_PORT_START_NUMBER" 26 158 " (1024)"
D G "LOCAL_PORT_END_NUMBER" 26 159 " (5000)"
C L "TCPTick" 26 81 1 "FUNCTION"
V G "_NextPort" 26 162 "WORD"
C L "TCPTick" 26 81 12 "FUNCTION"
V G "TCB" 26 179 "SOCKET_INFO[5]" "#pragma udata bla   // Return to any other RAM section   //not needed in ccs"
F G "HandleTCPSeg" 26 182 "void()"
V L "s" 26 182 "TCP_SOCKET"
V L "remote" 26 183 "*NODE_INFO"
V L "h" 26 184 "*TCP_HEADER"
V L "len" 26 185 "WORD"
F G "TransmitTCP" 26 187 "void()"
V L "remote" 26 187 "*NODE_INFO"
V L "localPort" 26 188 "TCP_PORT"
V L "remotePort" 26 189 "TCP_PORT"
V L "tseq" 26 190 "DWORD"
V L "tack" 26 191 "DWORD"
V L "flags" 26 192 "int8"
V L "buff" 26 193 "BUFFER"
V L "len" 26 194 "WORD"
F G "FindMatching_TCP_Socket" 26 196 "TCP_SOCKET()"
V L "h" 26 196 "*TCP_HEADER"
V L "remote" 26 197 "*NODE_INFO"
F G "SwapTCPHeader" 26 198 "void()"
V L "header" 26 198 "*TCP_HEADER"
F G "CloseSocket" 26 199 "void()"
V L "ps" 26 199 "*SOCKET_INFO"
D G "SendTCP" 26 201 "(remote, localPort, remotePort, seq, ack, flags)              TransmitTCP(remote, localPort, remotePort, seq, ack, flags,                      INVALID_BUFFER, 0)"
C L "CloseSocket" 26 207 1 "*"
C L "CloseSocket" 26 207 1 "*"
C L "CloseSocket" 26 207 1 "*"
C L "CloseSocket" 26 207 1 "*"
C L "CloseSocket" 26 207 1 "*"
C L "CloseSocket" 26 207 1 "*"
C L "CloseSocket" 26 207 1 "*"
C L "CloseSocket" 26 207 1 "*"
V G "TCPInit_RandSeed" 26 223 "int16"
F G "TCPInit" 26 224 "void()"
V L "s" 26 226 "TCP_SOCKET"
V L "ps" 26 227 "*SOCKET_INFO" "Initialize all sockets."
C L "TCPInit" 26 207 1 "FUNCTION"
C L "TCPListen" 26 278 1 "*"
C L "TCPListen" 26 278 1 "*"
C L "TCPListen" 26 278 1 "*"
C L "TCPListen" 26 278 1 "*"
C L "TCPListen" 26 278 1 "*"
C L "TCPListen" 26 278 1 "*"
C L "TCPListen" 26 278 1 "*"
C L "TCPListen" 26 278 1 "*"
F G "TCPListen" 26 294 "TCP_SOCKET()"
V L "port" 26 294 "TCP_PORT"
V L "s" 26 296 "TCP_SOCKET"
V L "ps" 26 297 "*SOCKET_INFO"
C L "TCPListen" 26 278 2 "FUNCTION"
C L "TCPListen" 26 278 1 "FUNCTION"
C L "TCPListen" 26 278 1 "FUNCTION"
C L "TCPConnect" 26 340 1 "*"
C L "TCPConnect" 26 340 1 "*"
C L "TCPConnect" 26 340 1 "*"
C L "TCPConnect" 26 340 1 "*"
C L "TCPConnect" 26 340 1 "*"
C L "TCPConnect" 26 340 1 "*"
C L "TCPConnect" 26 340 1 "*"
C L "TCPConnect" 26 340 1 "*"
C L "TCPConnect" 26 340 1 "*"
F G "TCPConnect" 26 357 "TCP_SOCKET()"
V L "remote" 26 357 "*NODE_INFO"
V L "remotePort" 26 357 "TCP_PORT"
V L "s" 26 359 "TCP_SOCKET"
V L "ps" 26 360 "*SOCKET_INFO"
V L "lbFound" 26 361 "BOOL"
C L "TCPConnect" 26 340 1 "FUNCTION"
C L "TCPConnect" 26 340 1 "FUNCTION"
C L "TCPConnect" 26 340 2 "FUNCTION"
C L "TCPConnect" 26 340 1 "FUNCTION"
C L "TCPConnect" 26 340 1 "FUNCTION"
C L "TCPConnect" 26 340 2 "FUNCTION"
C L "TCPConnect" 26 340 1 "FUNCTION"
C L "TCPConnect" 26 340 1 "FUNCTION"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
C L "TCPIsConnected" 26 423 1 "*"
F G "TCPIsConnected" 26 442 "int8()"
V L "s" 26 442 "TCP_SOCKET"
C L "TCPDisconnect" 26 449 1 "*"
C L "TCPDisconnect" 26 449 1 "*"
C L "TCPDisconnect" 26 449 1 "*"
C L "TCPDisconnect" 26 449 1 "*"
C L "TCPDisconnect" 26 449 1 "*"
C L "TCPDisconnect" 26 449 1 "*"
C L "TCPDisconnect" 26 449 1 "*"
C L "TCPDisconnect" 26 449 1 "*"
F G "TCPDisconnect" 26 465 "void(TCP_SOCKET s)"
V L "s" 26 465 "TCP_SOCKET"
V L "ps" 26 467 "*SOCKET_INFO"
C L "TCPDisconnect" 26 449 3 "FUNCTION"
C L "TCPDisconnect" 26 449 1 "FUNCTION"
C L "TCPDisconnect" 26 449 1 "FUNCTION"
C L "TCPDisconnect" 26 449 1 "FUNCTION"
C L "TCPFlush" 26 499 1 "*"
C L "TCPFlush" 26 499 1 "*"
C L "TCPFlush" 26 499 1 "*"
C L "TCPFlush" 26 499 1 "*"
C L "TCPFlush" 26 499 1 "*"
C L "TCPFlush" 26 499 1 "*"
C L "TCPFlush" 26 499 1 "*"
C L "TCPFlush" 26 499 1 "*"
F G "TCPFlush" 26 515 "int8()"
V L "s" 26 515 "TCP_SOCKET"
V L "ps" 26 517 "*SOCKET_INFO"
C L "TCPFlush" 26 499 1 "FUNCTION"
C L "TCPFlush" 26 499 1 "FUNCTION"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
C L "TCPIsPutReady" 26 555 1 "*"
F G "TCPIsPutReady" 26 577 "int8()"
V L "s" 26 577 "TCP_SOCKET"
F G "TCPPutAvailable" 26 589 "int16(TCP_SOCKET s)"
V L "s" 26 589 "TCP_SOCKET"
V L "txCount" 26 591 "int16"
V L "txAvail" 26 591 "int16"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
C L "TCPPutArray" 26 608 1 "*"
F G "TCPPutArray" 26 628 "WORD()"
V L "s" 26 628 "TCP_SOCKET"
V L "ptr" 26 628 "*int8"
V L "len" 26 628 "WORD"
V L "ps" 26 630 "*SOCKET_INFO"
V L "n" 26 631 "WORD"
C L "TCPPutArray" 26 608 1 "FUNCTION"
C L "TCPPutArray" 26 608 1 "FUNCTION"
C L "TCPPutArray" 26 608 1 "FUNCTION"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
C L "TCPPut" 26 673 1 "*"
F G "TCPPut" 26 692 "int8()"
V L "s" 26 692 "TCP_SOCKET"
V L "byte" 26 692 "int8"
V L "ps" 26 694 "*SOCKET_INFO"
V L "tempCount" 26 695 "WORD"
C L "TCPPut" 26 673 1 "FUNCTION"
C L "TCPPut" 26 673 1 "FUNCTION"
C L "TCPDiscard" 26 731 1 "*"
C L "TCPDiscard" 26 731 1 "*"
C L "TCPDiscard" 26 731 1 "*"
C L "TCPDiscard" 26 731 1 "*"
C L "TCPDiscard" 26 731 1 "*"
C L "TCPDiscard" 26 731 1 "*"
C L "TCPDiscard" 26 731 1 "*"
C L "TCPDiscard" 26 731 1 "*"
C L "TCPDiscard" 26 731 1 "*"
F G "TCPDiscard" 26 748 "int8()"
V L "s" 26 748 "TCP_SOCKET"
V L "ps" 26 750 "*SOCKET_INFO"
C L "TCPDiscard" 26 731 1 "FUNCTION"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
C L "TCPGetArray" 26 767 1 "*"
F G "TCPGetArray" 26 786 "WORD()"
V L "s" 26 786 "TCP_SOCKET"
V L "buff" 26 786 "*int8"
V L "count" 26 786 "WORD"
V L "ps" 26 788 "*SOCKET_INFO"
C L "TCPGetArray" 26 767 1 "FUNCTION"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
C L "TCPGet" 26 812 1 "*"
F G "TCPGet" 26 830 "int8(*int8 buff,WORD count)"
V L "s" 26 830 "TCP_SOCKET"
V L "data" 26 830 "*int8"
V L "ps" 26 832 "*SOCKET_INFO"
C L "TCPGet" 26 812 2 "FUNCTION"
C L "TCPIsGetReady" 26 863 1 "*"
C L "TCPIsGetReady" 26 863 1 "*"
C L "TCPIsGetReady" 26 863 1 "*"
C L "TCPIsGetReady" 26 863 1 "*"
C L "TCPIsGetReady" 26 863 1 "*"
C L "TCPIsGetReady" 26 863 1 "*"
C L "TCPIsGetReady" 26 863 1 "*"
C L "TCPIsGetReady" 26 863 1 "*"
F G "TCPIsGetReady" 26 879 "int8(*int8 data)"
V L "s" 26 879 "TCP_SOCKET" "* A socket is said to be "Get" ready when it has already"
C L "TCPIsGetReady" 26 881 1 "*"
C L "TCPIsGetReady" 26 881 1 "*"
C L "TCPIsGetReady" 26 881 1 "*"
C L "TCPIsGetReady" 26 881 1 "*"
C L "DebugTCPDisplayState" 26 881 1 "FUNCTION"
F G "DebugTCPDisplayState" 26 893 "void(TCP_SOCKET s)"
V L "st" 26 893 "TCP_STATE"
C L "TCPTick" 26 912 1 "*"
C L "TCPTick" 26 912 1 "*"
C L "TCPTick" 26 912 1 "*"
C L "TCPTick" 26 912 1 "*"
C L "TCPTick" 26 912 1 "*"
C L "TCPTick" 26 912 1 "*"
C L "TCPTick" 26 912 1 "*"
C L "TCPTick" 26 912 1 "*"
F G "TCPTick" 26 928 "void()"
V L "s" 26 930 "TCP_SOCKET"
V L "diffTicks" 26 931 "TICKTYPE"
V L "tick" 26 932 "TICKTYPE"
V L "ps" 26 933 "*SOCKET_INFO"
V L "seq" 26 934 "DWORD"
V L "flags" 26 935 "int8" "BYTE debugLastState;"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 2 "FUNCTION"
C L "TCPTick" 26 912 3 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 2 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 2 "FUNCTION"
C L "TCPTick" 26 912 4 "FUNCTION"
C L "TCPTick" 26 912 3 "FUNCTION"
C L "TCPTick" 26 912 3 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 2 "FUNCTION"
C L "TCPTick" 26 912 2 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 1 "FUNCTION"
C L "TCPTick" 26 912 6 "FUNCTION"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
C L "TCPProcess" 26 1122 1 "*"
F G "TCPProcess" 26 1142 "int8()"
V L "remote" 26 1142 "*NODE_INFO"
V L "localIP" 26 1142 "*IP_ADDR"
V L "len" 26 1142 "WORD"
V L "TCPHeader" 26 1144 "TCP_HEADER"
V L "pseudoHeader" 26 1145 "PSEUDO_HEADER"
V L "socket" 26 1146 "TCP_SOCKET"
V L "checksum1" 26 1147 "WORD_VAL"
V L "checksum2" 26 1148 "WORD_VAL"
V L "optionsSize" 26 1149 "int8" "Calculate IP pseudoheader checksum."
C L "TCPProcess" 26 1122 2 "FUNCTION"
C L "TCPProcess" 26 1122 1 "FUNCTION"
C L "TCPProcess" 26 1122 1 "FUNCTION"
C L "TCPProcess" 26 1122 1 "FUNCTION"
C L "TCPProcess" 26 1122 1 "FUNCTION"
C L "TCPProcess" 26 1122 1 "FUNCTION"
C L "TCPProcess" 26 1122 3 "FUNCTION"
C L "TCPProcess" 26 1122 12 "FUNCTION"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
C L "TransmitTCP" 26 1220 1 "*"
F G "TransmitTCP" 26 1251 "void()"
V L "remote" 26 1251 "*NODE_INFO"
V L "localPort" 26 1252 "TCP_PORT"
V L "remotePort" 26 1253 "TCP_PORT"
V L "tseq" 26 1254 "DWORD"
V L "tack" 26 1255 "DWORD"
V L "flags" 26 1256 "int8"
V L "buff" 26 1257 "BUFFER"
V L "len" 26 1258 "WORD"
V L "checkSum" 26 1260 "WORD_VAL"
V L "header" 26 1261 "TCP_HEADER"
V L "options" 26 1262 "TCP_OPTIONS"
V L "pseudoHeader" 26 1263 "PSEUDO_HEADER" "Make sure that this Tx buffer isn't currently being transmitted"
C L "TransmitTCP" 26 1220 4 "FUNCTION"
C L "TransmitTCP" 26 1220 2 "FUNCTION"
C L "TransmitTCP" 26 1220 1 "FUNCTION"
C L "TransmitTCP" 26 1220 1 "FUNCTION"
C L "TransmitTCP" 26 1220 1 "FUNCTION"
C L "TransmitTCP" 26 1220 1 "FUNCTION"
C L "TransmitTCP" 26 1220 1 "FUNCTION"
C L "TransmitTCP" 26 1220 1 "FUNCTION"
C L "TransmitTCP" 26 1220 1 "FUNCTION"
C L "TransmitTCP" 26 1220 5 "FUNCTION"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
C L "FindMatching_TCP_Socket" 26 1388 1 "*"
F G "FindMatching_TCP_Socket" 26 1408 "TCP_SOCKET(DWORD tack,int8 flags,BUFFER buff,WORD len)"
V L "h" 26 1408 "*TCP_HEADER"
V L "remote" 26 1408 "*NODE_INFO"
V L "ps" 26 1410 "*SOCKET_INFO"
V L "s" 26 1411 "TCP_SOCKET"
V L "partialMatch" 26 1412 "TCP_SOCKET"
C L "FindMatching_TCP_Socket" 26 1388 1 "FUNCTION"
C L "FindMatching_TCP_Socket" 26 1388 2 "FUNCTION"
C L "SwapTCPHeader" 26 1457 1 "*"
C L "SwapTCPHeader" 26 1457 1 "*"
C L "SwapTCPHeader" 26 1457 1 "*"
C L "SwapTCPHeader" 26 1457 1 "*"
C L "SwapTCPHeader" 26 1457 1 "*"
C L "SwapTCPHeader" 26 1457 1 "*"
C L "SwapTCPHeader" 26 1457 1 "*"
F G "SwapTCPHeader" 26 1472 "void(WORD len)"
V L "header" 26 1472 "*TCP_HEADER"
C L "CloseSocket" 26 1485 1 "*"
C L "CloseSocket" 26 1485 1 "*"
C L "CloseSocket" 26 1485 1 "*"
C L "CloseSocket" 26 1485 1 "*"
C L "CloseSocket" 26 1485 1 "*"
C L "CloseSocket" 26 1485 1 "*"
C L "CloseSocket" 26 1485 1 "*"
C L "CloseSocket" 26 1485 1 "*"
C L "CloseSocket" 26 1485 1 "*"
F G "CloseSocket" 26 1502 "void(*TCP_HEADER header)"
V L "ps" 26 1502 "*SOCKET_INFO"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
C L "HandleTCPSeg" 26 1540 1 "*"
F G "HandleTCPSeg" 26 1563 "void(*SOCKET_INFO ps)"
V L "s" 26 1563 "TCP_SOCKET"
V L "remote" 26 1564 "*NODE_INFO"
V L "h" 26 1565 "*TCP_HEADER"
V L "len" 26 1566 "WORD"
V L "ack" 26 1568 "DWORD"
V L "seq" 26 1569 "DWORD"
V L "prevAck" 26 1570 "DWORD"
V L "prevSeq" 26 1570 "DWORD"
V L "ps" 26 1571 "*SOCKET_INFO"
V L "flags" 26 1572 "int8" "BYTE debugLastState;"
V L "temp" 26 1574 "sint32"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 5 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 3 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 3 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 3 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 3 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 4 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 6 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 2 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 1 "FUNCTION"
C L "HandleTCPSeg" 26 1540 7 "FUNCTION"
C L "HandleTCPSeg" 26 1540 6 "FUNCTION"
C L "HandleTCPSeg" 26 1540 6 "FUNCTION"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
D G "ICMP_H" 29 46 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "MAX_ICMP_DATA" 29 54 " (64)"
D G "MAX_ICMP_DATA_LEN" 29 56 " (MAX_ICMP_DATA)"
E G "ICMP_ECHO_REPLY" 29 62 "0"
E G "ICMP_ECHO_REQUEST" 29 63 "8"
T G "ICMP_CODE" 29 63 "_ICMP_CODE"
T G "ICMP_REQUESTS" 29 63 "_ICMP_CODE" "* Function:        BOOL ICMPIsTxReady()"
C G "" 29 66 1 "*"
C G "" 29 66 1 "*"
C G "" 29 66 1 "*"
C G "" 29 66 1 "*"
C G "" 29 66 1 "*"
D G "ICMPIsTxReady" 29 81 "()     MACIsTxReady(TRUE)"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
C L "ICMPPut" 29 84 1 "*"
F G "ICMPPut" 29 108 "void()"
V L "remote" 29 108 "*NODE_INFO"
V L "code" 29 109 "ICMP_CODE"
V L "data" 29 110 "*int8"
V L "len" 29 111 "int8"
V L "id" 29 112 "WORD"
V L "seq" 29 113 "WORD" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
C L "ICMPPut" 29 116 1 "*"
F G "ICMPGet" 29 140 "int8()"
V L "code" 29 140 "*ICMP_CODE"
V L "data" 29 141 "*int8"
V L "len" 29 142 "*int8"
V L "id" 29 143 "*WORD"
V L "seq" 29 144 "*WORD" "*                  IP Defs for Microchip TCP/IP Stack"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
C L "ICMPGet" 25 1 1 "*"
D G "debug_icmp" 28 57 ""
C L "ICMPGet" 28 58 2 "FUNCTION"
C L "ICMPGet" 28 62 1 "*"
T G "ICMP_PACKET" 28 73 "{int8 Type,int8 Code,WORD Checksum,WORD Identifier,WORD SequenceNumber,int8[64] Data}"
D G "ICMP_HEADER_SIZE" 28 74 " (sizeof(ICMP_PACKET) - MAX_ICMP_DATA)"
F G "SwapICMPPacket" 28 76 "void()"
V L "p" 28 76 "*ICMP_PACKET" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
C L "SwapICMPPacket" 28 79 1 "*"
F G "ICMPGet" 28 103 "int8()"
V L "code" 28 103 "*ICMP_CODE"
V L "data" 28 104 "*int8"
V L "len" 28 105 "*int8"
V L "id" 28 106 "*WORD"
V L "seq" 28 107 "*WORD"
V L "packet" 28 109 "ICMP_PACKET"
V L "CalcChecksum" 28 110 "WORD"
V L "ReceivedChecksum" 28 111 "WORD"
C L "ICMPGet" 28 79 2 "FUNCTION"
C L "ICMPGet" 28 79 4 "FUNCTION"
C L "ICMPGet" 28 79 1 "FUNCTION"
C L "ICMPGet" 28 79 1 "FUNCTION"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
C L "ICMPPut" 28 158 1 "*"
F G "ICMPPut" 28 182 "void(*WORD id,*WORD seq)"
V L "remote" 28 182 "*NODE_INFO"
V L "code" 28 183 "ICMP_CODE"
V L "data" 28 184 "*int8"
V L "len" 28 185 "int8"
V L "id" 28 186 "WORD"
V L "seq" 28 187 "WORD"
V L "packet" 28 189 "ICMP_PACKET"
V L "ICMPLen" 28 190 "WORD"
V L "MyTxBuffer" 28 191 "BUFFER"
C L "ICMPPut" 28 158 2 "FUNCTION"
C L "ICMPPut" 28 158 1 "FUNCTION"
C L "SwapICMPPacket" 28 236 1 "*"
C L "SwapICMPPacket" 28 236 1 "*"
C L "SwapICMPPacket" 28 236 1 "*"
C L "SwapICMPPacket" 28 236 1 "*"
C L "SwapICMPPacket" 28 236 1 "*"
C L "SwapICMPPacket" 28 236 1 "*"
C L "SwapICMPPacket" 28 236 1 "*"
F G "SwapICMPPacket" 28 251 "void(int8 len,WORD id,WORD seq)"
V L "p" 28 251 "*ICMP_PACKET"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
D G "debug_udp" 30 86 ""
C L "FindMatching_UDP_Socket" 30 87 1 "FUNCTION"
F G "FindMatching_UDP_Socket" 30 89 "UDP_SOCKET(*ICMP_PACKET p,WORD id,WORD seq)"
V L "h" 30 89 "*UDP_HEADER"
V L "remoteNode" 30 89 "*NODE_INFO"
V L "localIP" 30 89 "*IP_ADDR" "* Function:        void UDPInit(void)"
C L "FindMatching_UDP_Socket" 30 91 1 "*"
C L "FindMatching_UDP_Socket" 30 91 1 "*"
C L "FindMatching_UDP_Socket" 30 91 1 "*"
C L "FindMatching_UDP_Socket" 30 91 1 "*"
C L "FindMatching_UDP_Socket" 30 91 1 "*"
C L "FindMatching_UDP_Socket" 30 91 1 "*"
F G "UDPInit" 30 106 "void()"
V L "s" 30 108 "UDP_SOCKET"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
C L "UDPOpen" 30 116 1 "*"
F G "UDPOpen" 30 142 "UDP_SOCKET()"
V L "localPort" 30 142 "UDP_PORT"
V L "remoteNode" 30 143 "*NODE_INFO"
V L "remotePort" 30 144 "UDP_PORT"
V L "s" 30 146 "UDP_SOCKET"
V L "p" 30 147 "*UDP_SOCKET_INFO"
C L "UDPOpen" 30 116 1 "FUNCTION"
C L "UDPOpen" 30 116 1 "FUNCTION"
C L "UDPOpen" 30 116 3 "FUNCTION"
C L "UDPClose" 30 186 1 "*"
C L "UDPClose" 30 186 1 "*"
C L "UDPClose" 30 186 1 "*"
C L "UDPClose" 30 186 1 "*"
C L "UDPClose" 30 186 1 "*"
C L "UDPClose" 30 186 1 "*"
C L "UDPClose" 30 186 1 "*"
C L "UDPClose" 30 186 1 "*"
C L "UDPClose" 30 186 1 "*"
F G "UDPClose" 30 203 "void(UDP_PORT remotePort)"
V L "s" 30 203 "UDP_SOCKET"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
C L "UDPPut" 30 211 1 "*"
F G "UDPPut" 30 236 "int8(UDP_SOCKET s)"
V L "v" 30 236 "int8"
V L "p" 30 238 "*UDP_SOCKET_INFO"
V L "temp" 30 239 "WORD"
V L "tempOffset" 30 240 "WORD"
V L "tempCount" 30 241 "WORD"
C L "UDPPut" 30 211 3 "FUNCTION"
C L "UDPPut" 30 211 1 "FUNCTION"
C L "UDPPut" 30 211 5 "FUNCTION"
C L "UDPPut" 30 211 2 "FUNCTION"
D G "SIZEOF_MAC_HEADER" 30 291 " (14)"
D G "MAX_UDP_DATA" 30 298 " (MAC_TX_BUFFER_SIZE - sizeof(IP_HEADER) - sizeof(UDP_HEADER) )"
C L "UDPPut" 30 211 2 "FUNCTION"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
C L "UDPFlush" 30 317 1 "*"
F G "UDPFlush" 30 336 "void()"
V L "h" 30 338 "UDP_HEADER"
V L "p" 30 339 "*UDP_SOCKET_INFO" "Wait for TX hardware to become available (finish transmitting"
C L "UDPFlush" 30 317 1 "FUNCTION"
C L "UDPFlush" 30 317 1 "FUNCTION"
C L "UDPFlush" 30 371 1 "*"
C L "UDPFlush" 30 371 1 "FUNCTION"
C L "UDPFlush" 30 371 1 "FUNCTION"
C L "UDPFlush" 30 371 2 "FUNCTION"
C L "UDPFlush" 30 371 2 "FUNCTION"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
C L "UDPIsGetReady" 30 400 1 "*"
F G "UDPIsGetReady" 30 421 "int8()"
V L "s" 30 421 "UDP_SOCKET"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
C L "UDPGet" 30 427 1 "*"
F G "UDPGet" 30 445 "int8(UDP_SOCKET s)"
V L "v" 30 445 "*int8" "CALLER MUST MAKE SURE THAT THERE IS ENOUGH DATA BYTE IN BUFFER"
C L "UDPGet" 30 427 2 "FUNCTION"
C L "UDPGet" 30 427 2 "FUNCTION"
C L "UDPDiscard" 30 475 1 "*"
C L "UDPDiscard" 30 475 1 "*"
C L "UDPDiscard" 30 475 1 "*"
C L "UDPDiscard" 30 475 1 "*"
C L "UDPDiscard" 30 475 1 "*"
C L "UDPDiscard" 30 475 1 "*"
C L "UDPDiscard" 30 475 1 "*"
C L "UDPDiscard" 30 475 1 "*"
F G "UDPDiscard" 30 491 "void(*int8 v)"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 501 1 "*"
C G "" 30 521 1 "*"
T G "UDP_PSEUDO_HEADER" 30 531 "{IP_ADDR SourceAddress,IP_ADDR DestAddress,int8 Zero,int8 Protocol,WORD Length}"
D G "SwapPseudoHeader" 30 533 "(h)  (h.Length = swaps(h.Length))"
F G "UDPProcess" 30 535 "int8()"
V L "remoteNode" 30 535 "*NODE_INFO"
V L "localIP" 30 535 "*IP_ADDR"
V L "len" 30 535 "WORD"
V L "h" 30 537 "UDP_HEADER"
V L "s" 30 538 "UDP_SOCKET"
V L "pseudoHeader" 30 539 "UDP_PSEUDO_HEADER"
V L "checksum" 30 540 "WORD_VAL" "* Retrieve UDP header."
C L "UDPProcess" 30 521 1 "FUNCTION"
C L "UDPProcess" 30 521 1 "FUNCTION"
C L "UDPProcess" 30 521 1 "FUNCTION"
C L "UDPProcess" 30 521 1 "FUNCTION"
C L "UDPProcess" 30 521 1 "FUNCTION"
C L "UDPProcess" 30 521 2 "FUNCTION"
C L "UDPProcess" 30 602 1 "*"
C L "UDPProcess" 30 602 1 "*"
C L "UDPProcess" 30 602 8 "FUNCTION"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
C G "" 30 628 1 "*"
D G "BROADCAST_ADDRESS" 30 647 " (0xffffffffL)"
F G "FindMatching_UDP_Socket" 30 648 "UDP_SOCKET()"
V L "h" 30 648 "*UDP_HEADER"
V L "remoteNode" 30 649 "*NODE_INFO"
V L "localIP" 30 650 "*IP_ADDR"
V L "s" 30 652 "UDP_SOCKET"
V L "partialMatch" 30 653 "UDP_SOCKET"
V L "p" 30 654 "*UDP_SOCKET_INFO"
C L "FindMatching_UDP_Socket" 30 661 1 "*"
C L "FindMatching_UDP_Socket" 30 661 1 "*"
C L "FindMatching_UDP_Socket" 30 661 1 "*"
C L "FindMatching_UDP_Socket" 30 661 1 "*"
C L "FindMatching_UDP_Socket" 30 661 1 "*"
C L "FindMatching_UDP_Socket" 30 661 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
D G "debug_dhcp" 31 79 "(a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u)"
D G "DHCP_TIMEOUT" 31 82 " (2 * TICKS_PER_SECOND)"
D G "DHCP_CLIENT_PORT" 31 85 " (68u)"
D G "DHCP_SERVER_PORT" 31 86 " (67u)"
D G "BOOT_REQUEST" 31 88 " (1u)"
D G "BOOT_REPLY" 31 89 " (2u)"
D G "HW_TYPE" 31 90 " (1u)"
D G "LEN_OF_HW_TYPE" 31 91 " (6u)"
D G "DHCP_MESSAGE_TYPE" 31 93 " (53u)"
D G "DHCP_MESSAGE_TYPE_LEN" 31 94 " (1u)"
D G "DHCP_UNKNOWN_MESSAGE" 31 96 " (0u)"
D G "DHCP_DISCOVER_MESSAGE" 31 98 " (1u)"
D G "DHCP_OFFER_MESSAGE" 31 99 " (2u)"
D G "DHCP_REQUEST_MESSAGE" 31 100 " (3u)"
D G "DHCP_DECLINE_MESSAGE" 31 101 " (4u)"
D G "DHCP_ACK_MESSAGE" 31 102 " (5u)"
D G "DHCP_NAK_MESSAGE" 31 103 " (6u)"
D G "DHCP_RELEASE_MESSAGE" 31 104 " (7u)"
D G "DHCP_SERVER_IDENTIFIER" 31 106 " (54u)"
D G "DHCP_SERVER_IDENTIFIER_LEN" 31 107 " (4u)"
D G "DHCP_PARAM_REQUEST_LIST" 31 109 " (55u)"
D G "DHCP_PARAM_REQUEST_LIST_LEN" 31 110 " (4u)"
D G "DHCP_PARAM_REQUEST_IP_ADDRESS" 31 111 " (50u)"
D G "DHCP_PARAM_REQUEST_IP_ADDRESS_LEN" 31 112 " (4u)"
D G "DHCP_SUBNET_MASK" 31 113 " (1u)"
D G "DHCP_ROUTER" 31 114 " (3u)"
D G "DHCP_DNS" 31 115 " (6u)"
D G "DHCP_HOST_NAME" 31 116 " (12u)"
D G "DHCP_IP_LEASE_TIME" 31 117 " (51u)"
D G "DHCP_END_OPTION" 31 118 " (255u)"
D G "HALF_HOUR" 31 120 " (WORD)((WORD)60 * (WORD)30)"
V G "DHCPSocket" 31 122 "UDP_SOCKET"
V G "DHCPServerID" 31 124 "DWORD_VAL"
V G "DHCPLeaseTime" 31 125 "DWORD_VAL"
V G "tempIPAddress" 31 127 "IP_ADDR"
V G "tempGateway" 31 128 "IP_ADDR"
V G "tempMask" 31 129 "IP_ADDR"
V G "tempDNS" 31 131 "IP_ADDR" "static BYTE tempHostName[16];"
V G "ValidValues" 31 146 "{}"
F G "_DHCPReceive" 31 148 "int8()"
F G "_DHCPSend" 31 149 "void()"
V L "messageType" 31 149 "int8"
V G "DHCPBindCount" 31 151 "int8"
D G "USARTPut" 31 155 "(a)"
F G "DHCPReset" 31 157 "void()"
C L "DHCPReset" 31 80 1 "FUNCTION"
F G "DebugDHCPDisplayState" 31 173 "void()"
V L "st" 31 173 "int8"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
C L "DHCPTask" 31 189 1 "*"
F G "DHCPTask" 31 220 "void()"
V L "DHCPServerNode" 31 222 "NODE_INFO"
V L "lastTryTick" 31 223 "TICKTYPE"
V L "DHCPRecvReturnValue" 31 224 "int8"
V L "tickDiff" 31 225 "TICKTYPE" "static int8 debugLastState;"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 2 "FUNCTION"
C L "DHCPTask" 31 189 3 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 3 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 7 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 1 "FUNCTION"
C L "DHCPTask" 31 189 2 "FUNCTION"
C L "DHCPTask" 31 189 2 "FUNCTION"
C L "DHCPTask" 31 189 2 "FUNCTION"
C L "DHCPTask" 31 189 6 "FUNCTION"
C L "_DHCPReceive" 31 189 32 "FUNCTION"
F G "_DHCPReceive" 31 433 "int8()"
V L "v" 31 435 "int8"
V L "i" 31 436 "int8"
V L "j" 31 436 "int8"
V L "type" 31 437 "int8"
V L "lbDone" 31 438 "BOOL"
V L "tempServerID" 31 439 "DWORD_VAL" "Assume unknown message until proven otherwise."
C L "_DHCPReceive" 31 189 2 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 3 "FUNCTION"
C L "_DHCPReceive" 31 189 2 "FUNCTION"
C L "_DHCPReceive" 31 189 2 "FUNCTION"
C L "_DHCPReceive" 31 189 2 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 17 "FUNCTION"
C L "_DHCPReceive" 31 189 2 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 2 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 2 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
C L "_DHCPReceive" 31 189 2 "FUNCTION"
C L "_DHCPReceive" 31 189 1 "FUNCTION"
F G "_DHCPSend" 31 716 "void()"
V L "messageType" 31 716 "int8"
V L "i" 31 718 "int8"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 2 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 1 "FUNCTION"
C L "_DHCPSend" 31 189 8 "FUNCTION"
C L "_DHCPSend" 31 189 3 "FUNCTION"
C L "_DHCPSend" 31 189 2 "FUNCTION"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
D G "ARP_H" 33 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "ARP_REPLY" 33 52 " (0x00)"
D G "ARP_REQUEST" 33 53 " (0x01)"
D G "ARP_UNKNOWN" 33 54 " (0x02)"
C L "ARPGet" 33 57 1 "*"
C L "ARPGet" 33 57 1 "*"
C L "ARPGet" 33 57 1 "*"
C L "ARPGet" 33 57 1 "*"
C L "ARPGet" 33 57 1 "*"
C L "ARPGet" 33 57 1 "*"
C L "ARPGet" 33 57 1 "*"
C L "ARPGet" 33 57 1 "*"
C L "ARPGet" 33 57 1 "*"
F G "ARPGet" 33 74 "int8()"
V L "remote" 33 74 "*NODE_INFO"
V L "opCode" 33 74 "*int8" "* Macro:           ARPIsRxReady()"
C L "ARPGet" 33 77 1 "*"
C L "ARPGet" 33 77 1 "*"
C L "ARPGet" 33 77 1 "*"
C L "ARPGet" 33 77 1 "*"
C L "ARPGet" 33 77 1 "*"
C L "ARPGet" 33 77 1 "*"
D G "ARPIsTxReady" 33 93 "()      MACIsTxReady(TRUE)"
C L "ARPGet" 33 97 1 "*"
C L "ARPGet" 33 97 1 "*"
C L "ARPGet" 33 97 1 "*"
C L "ARPGet" 33 97 1 "*"
C L "ARPGet" 33 97 1 "*"
C L "ARPGet" 33 97 1 "*"
C L "ARPGet" 33 97 1 "*"
C L "ARPGet" 33 97 1 "*"
F G "ARPPut" 33 113 "int8()"
V L "remote" 33 113 "*NODE_INFO"
V L "opCode" 33 113 "int8" "*                  ARP Server Defs for Microchip TCP/IP Stack"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
C L "ARPPut" 34 1 1 "*"
D G "ARP_TSK_H" 34 45 ""
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 2 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 34 51 1 "*"
C L "ARPPut" 34 51 1 "*"
C L "ARPPut" 34 51 1 "*"
C L "ARPPut" 34 51 1 "*"
C L "ARPPut" 34 51 1 "*"
C L "ARPPut" 34 51 1 "*"
C L "ARPPut" 34 51 1 "*"
F G "ARPInit" 34 66 "void()"
C L "ARPInit" 34 69 1 "*"
C L "ARPInit" 34 69 1 "*"
C L "ARPInit" 34 69 1 "*"
C L "ARPInit" 34 69 1 "*"
C L "ARPInit" 34 69 1 "*"
C L "ARPInit" 34 69 1 "*"
C L "ARPInit" 34 69 1 "*"
F G "ARPProcess" 34 84 "int8()"
C L "ARPProcess" 34 87 1 "*"
C L "ARPProcess" 34 87 1 "*"
C L "ARPProcess" 34 87 1 "*"
C L "ARPProcess" 34 87 1 "*"
C L "ARPProcess" 34 87 1 "*"
C L "ARPProcess" 34 87 1 "*"
C L "ARPProcess" 34 87 1 "*"
F G "ARPResolve" 34 102 "void()"
V L "IPAddr" 34 102 "*IP_ADDR" "* Function:        BOOL ARPIsResolved(IP_ADDR* IPAddr,"
C L "ARPResolve" 34 105 1 "*"
C L "ARPResolve" 34 105 1 "*"
C L "ARPResolve" 34 105 1 "*"
C L "ARPResolve" 34 105 1 "*"
C L "ARPResolve" 34 105 1 "*"
C L "ARPResolve" 34 105 1 "*"
C L "ARPResolve" 34 105 1 "*"
C L "ARPResolve" 34 105 1 "*"
C L "ARPResolve" 34 105 1 "*"
F G "ARPIsResolved" 34 123 "int8()"
V L "IPAddr" 34 123 "*IP_ADDR"
V L "MACAddr" 34 123 "*MAC_ADDR"
D G "debug_arptask" 32 56 ""
C L "ARPIsResolved" 32 57 1 "FUNCTION"
C L "ARPIsResolved" 32 59 1 "*"
E G "SM_ARP_IDLE" 32 65 "0"
E G "SM_ARP_REPLY" 32 66 "1"
T G "ARP_STATE" 32 66 "_ARP_STATE" "* This ARP task caches one ARP response."
V G "smARP" 32 72 "ARP_STATE"
V G "Cache" 32 74 "NODE_INFO" "* Function:        void ARPInit(void)"
C L "ARPIsResolved" 32 77 1 "*"
C L "ARPIsResolved" 32 77 1 "*"
C L "ARPIsResolved" 32 77 1 "*"
C L "ARPIsResolved" 32 77 1 "*"
C L "ARPIsResolved" 32 77 1 "*"
C L "ARPIsResolved" 32 77 1 "*"
F G "ARPInit" 32 92 "void()"
C L "ARPProcess" 32 108 1 "*"
C L "ARPProcess" 32 108 1 "*"
C L "ARPProcess" 32 108 1 "*"
C L "ARPProcess" 32 108 1 "*"
C L "ARPProcess" 32 108 1 "*"
C L "ARPProcess" 32 108 1 "*"
C L "ARPProcess" 32 108 1 "*"
F G "ARPProcess" 32 123 "int8()"
V L "remoteNode" 32 125 "NODE_INFO"
V L "opCode" 32 126 "int8"
C L "ARPProcess" 32 108 2 "FUNCTION"
C L "ARPResolve" 32 160 1 "*"
C L "ARPResolve" 32 160 1 "*"
C L "ARPResolve" 32 160 1 "*"
C L "ARPResolve" 32 160 1 "*"
C L "ARPResolve" 32 160 1 "*"
C L "ARPResolve" 32 160 1 "*"
F G "ARPResolve" 32 173 "void()"
V L "IPAddr" 32 173 "*IP_ADDR"
V L "remoteNode" 32 175 "NODE_INFO"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
C L "ARPIsResolved" 32 184 1 "*"
F G "ARPIsResolved" 32 202 "int8()"
V L "IPAddr" 32 202 "*IP_ADDR"
V L "MACAddr" 32 202 "*MAC_ADDR"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 35 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 33 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "debug_arp" 35 53 ""
D G "ARP_OPERATION_REQ" 35 57 "0x01u"
D G "ARP_OPERATION_RESP" 35 58 "0x02u"
D G "HW_ETHERNET" 35 61 " (0x0001u)"
D G "ARP_IP" 35 62 " (0x0800u)"
T G "ARP_PACKET" 35 78 "{WORD HardwareType,WORD Protocol,int8 MACAddrLen,int8 ProtocolLen,WORD Operation,MAC_ADDR SenderMACAddr,IP_ADDR SenderIPAddr,MAC_ADDR TargetMACAddr,IP_ADDR TargetIPAddr}" "Helper function"
F G "SwapARPPacket" 35 81 "void()"
V L "p" 35 81 "*ARP_PACKET" "* Function:        BOOL ARPGet(NODE_INFO* remote, BYTE* opCode)"
C L "SwapARPPacket" 35 84 1 "*"
C L "SwapARPPacket" 35 84 1 "*"
C L "SwapARPPacket" 35 84 1 "*"
C L "SwapARPPacket" 35 84 1 "*"
C L "SwapARPPacket" 35 84 1 "*"
C L "SwapARPPacket" 35 84 1 "*"
C L "SwapARPPacket" 35 84 1 "*"
C L "SwapARPPacket" 35 84 1 "*"
F G "ARPGet" 35 101 "int8()"
V L "remote" 35 101 "*NODE_INFO"
V L "opCode" 35 101 "*int8"
V L "packet" 35 103 "ARP_PACKET" "MACGetArray((int8*)&packet, sizeof(packet));"
C L "ARPGet" 35 84 5 "FUNCTION"
C L "ARPPut" 35 144 1 "*"
C L "ARPPut" 35 144 1 "*"
C L "ARPPut" 35 144 1 "*"
C L "ARPPut" 35 144 1 "*"
C L "ARPPut" 35 144 1 "*"
C L "ARPPut" 35 144 1 "*"
C L "ARPPut" 35 144 1 "*"
C L "ARPPut" 35 144 1 "*"
C L "ARPPut" 35 144 1 "*"
F G "ARPPut" 35 161 "int8(*int8 opCode)"
V L "remote" 35 161 "*NODE_INFO"
V L "opCode" 35 161 "int8"
V L "packet" 35 163 "ARP_PACKET"
V L "MyTxBuffer" 35 165 "BUFFER"
C L "ARPPut" 35 144 1 "FUNCTION"
C L "ARPPut" 35 144 2 "FUNCTION"
C L "ARPPut" 35 144 1 "FUNCTION"
C L "SwapARPPacket" 35 222 1 "*"
C L "SwapARPPacket" 35 222 1 "*"
C L "SwapARPPacket" 35 222 1 "*"
C L "SwapARPPacket" 35 222 1 "*"
C L "SwapARPPacket" 35 222 1 "*"
C L "SwapARPPacket" 35 222 1 "*"
C L "SwapARPPacket" 35 222 1 "*"
F G "SwapARPPacket" 35 237 "void()"
V L "p" 35 237 "*ARP_PACKET"
D G "debugf_smtp" 36 66 ""
E G "SMTP_STATE_WAITING" 36 70 "0"
E G "SMTP_STATE_START" 36 70 "1"
E G "SMTP_STATE_ARP_REQ" 36 71 "2"
E G "SMTP_STATE_ARP_WAIT" 36 71 "3"
E G "SMTP_STATE_CONNECT" 36 71 "4"
E G "SMTP_STATE_CONNECT_WAIT" 36 72 "5"
E G "SMTP_STATE_EHLO" 36 72 "6"
E G "SMTP_STATE_MAIL_FROM" 36 72 "7"
E G "SMTP_STATE_RCPT_TO" 36 73 "8"
E G "SMTP_STATE_DATA_START" 36 73 "9"
E G "SMTP_STATE_DO_CMD" 36 73 "10"
E G "SMTP_STATE_DO_CMD_GET_RESP" 36 74 "11"
E G "SMTP_STATE_PUT_HEADER" 36 74 "12"
E G "SMTP_STATE_PUT_BODY" 36 74 "13"
E G "SMTP_STATE_FINISH_EMAIL" 36 75 "14"
E G "SMTP_STATE_FINISH_EMAIL_WAIT" 36 75 "15"
E G "SMTP_STATE_CLOSE" 36 76 "16"
E G "SMTP_STATE_FORCE_CLOSE" 36 76 "17"
E G "SMTP_STATE_RESET" 36 77 "18"
V G "smtp_state" 36 77 ""
V G "smtp_socket" 36 80 "TCP_SOCKET"
V G "smtp_remote" 36 81 "NODE_INFO"
V G "smtp_engine_from" 36 82 "*int8"
V G "smtp_engine_to" 36 83 "*int8"
V G "smtp_engine_subject" 36 84 "*int8"
V G "smtp_last_error" 36 85 "SMTP_EC"
V G "smtp_engine_port" 36 86 "int16" "user functions"
F G "SMTPConnect" 36 89 "int8()"
V L "ip" 36 89 "*IP_ADDR"
V L "port" 36 89 "int16"
V L "from" 36 89 "*int8"
V L "to" 36 89 "*int8"
V L "subject" 36 89 "*int8"
F G "SMTPIsFree" 36 104 "int8(*IP_ADDR ip,int16 port,*int8 from,*int8 to,*int8 subject)"
F G "SMTPIsPutReady" 36 108 "int8(int16 port,*int8 from,*int8 to,*int8 subject)"
F G "SMTPPut" 36 112 "void(int16 port,*int8 from,*int8 to,*int8 subject)"
V L "c" 36 112 "int8"
F G "SMTPDisconnect" 36 118 "void(int8 c,*int8 from,*int8 to,*int8 subject)"
F G "SMTPLastError" 36 125 "SMTP_EC(int8 c,*int8 from,*int8 to,*int8 subject)"
C L "SMTPInit" 36 3 1 "FUNCTION"
F G "SMTPInit" 36 130 "void(*int8 from,*int8 to,*int8 subject)"
F G "SMTPError" 36 138 "void(*int8 from,*int8 to,*int8 subject)"
V L "ec" 36 138 "SMTP_EC"
F G "SMTPPutCmd" 36 143 "void(*int8 subject)"
V L "c" 36 143 "int8"
F G "SMTPTask" 36 148 "void()"
V L "currTick" 36 149 "TICKTYPE"
V L "lastTick" 36 150 "TICKTYPE"
V L "smtp_result" 36 151 "int16"
V L "smtp_expected_result" 36 152 "int16"
V L "ehlomsg" 36 154 "int8[1]"
V L "datamsg" 36 155 "int8[1]"
V L "mailfrommsg" 36 156 "int8[1]"
V L "rcpttomsg" 36 157 "int8[1]"
V L "cmdptr" 36 159 "*int8"
V L "cmdptr2" 36 160 "*int8"
V L "on_err" 36 161 "SMTP_EC"
V L "next_state" 36 162 "int8"
C L "SMTPTask" 36 3 3 "FUNCTION"
V G "smtp_result_code_scratch" 36 374 "int16"
V G "smtp_result_code_fnnc" 36 375 "int8" "first non-numeric char"
F G "SMTPReadResultCodeReset" 36 377 "void()"
F G "SMTPReadResultCode" 36 382 "int8()"
V L "smtp_result" 36 382 "*int16"
V L "c" 36 383 "int8"
C L "SMTPReadResultCode" 36 3 1 "FUNCTION"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 37 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 38 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 41 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
D G "DNS_PORT" 37 44 "53"
D G "DNS_TIMEOUT" 37 45 " (TICK_SECOND*2)"
V G "DNSHostName" 37 48 "*int8"
E G "DNS_HOME" 37 52 "0"
E G "DNS_RESOLVE_ARP" 37 53 "1"
E G "DNS_OPEN_SOCKET" 37 54 "2"
E G "DNS_QUERY" 37 55 "3"
E G "DNS_GET_RESULT" 37 56 "4"
E G "DNS_DONE" 37 57 "5"
V G "smDNS" 37 57 ""
T G "DNS_HEADER" 37 67 "{WORD_VAL TransactionID,WORD_VAL Flags,WORD_VAL Questions,WORD_VAL Answers,WORD_VAL AuthoritativeRecords,WORD_VAL AdditionalRecords}"
T G "DNS_ANSWER_HEADER" 37 76 "{WORD_VAL ResponseName,WORD_VAL ResponseType,WORD_VAL ResponseClass,DWORD_VAL ResponseTTL,WORD_VAL ResponseLen}"
F G "DNSPutString" 37 78 "void()"
V L "String" 37 78 "*int8"
F G "DNSGetString" 37 79 "void()"
V L "String" 37 79 "*int8" "* Function:        void DNSResolve(BYTE *Hostname)"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
C L "DNSGetString" 37 81 1 "*"
F G "DNSResolve" 37 104 "void()"
V L "Hostname" 37 104 "*int8"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
C L "DNSIsResolved" 37 111 1 "*"
F G "DNSIsResolved" 37 132 "int8(*int8 Hostname)"
V L "HostIP" 37 132 "*IP_ADDR"
V L "MySocket" 37 134 "UDP_SOCKET"
V L "Remote" 37 135 "NODE_INFO"
V L "StartTime" 37 136 "TICKTYPE"
V L "i" 37 137 "int8"
V L "w" 37 138 "WORD_VAL"
V L "DNSHeader" 37 139 "DNS_HEADER"
V L "DNSAnswerHeader" 37 140 "DNS_ANSWER_HEADER"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 2 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 2 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 2 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 2 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
C L "DNSIsResolved" 37 111 1 "FUNCTION"
F G "DNSPutString" 37 302 "void()"
V L "String" 37 302 "*int8"
V L "RightPtr" 37 304 "*int8"
V L "i" 37 305 "int8"
V L "Len" 37 306 "int8"
C L "DNSPutString" 37 111 1 "FUNCTION"
C L "DNSPutString" 37 111 1 "FUNCTION"
C L "DNSPutString" 37 111 1 "FUNCTION"
F G "DNSGetString" 37 335 "void()"
V L "String" 37 335 "*int8"
V L "i" 37 337 "int8"
V L "j" 37 338 "int8"
C G "" 2 186 1 "*"
E G "SM_STACK_IDLE" 2 192 "0"
E G "SM_STACK_MAC" 2 193 "1"
E G "SM_STACK_IP" 2 194 "2"
E G "SM_STACK_ICMP" 2 195 "3"
E G "SM_STACK_ICMP_REPLY" 2 196 "4"
E G "SM_STACK_ARP" 2 197 "5"
E G "SM_STACK_TCP" 2 198 "6"
E G "SM_STACK_UDP" 2 199 "7"
T G "SM_STACK" 2 199 "_SM_STACK"
V G "smStack" 2 201 "SM_STACK"
V G "remoteNode" 2 203 "NODE_INFO" "* Function:        void StackInit(void)"
C L "StackInit" 2 206 1 "*"
C L "StackInit" 2 206 1 "*"
C L "StackInit" 2 206 1 "*"
C L "StackInit" 2 206 1 "*"
C L "StackInit" 2 206 1 "*"
C L "StackInit" 2 206 1 "*"
F G "StackInit" 2 221 "void()"
C L "StackInit" 2 226 1 "*"
C L "StackInit" 2 226 1 "*"
D G "DebugDisplayVals" 2 284 "()"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
C L "StackTask" 2 286 1 "*"
F G "StackTask" 2 305 "void()"
V L "dataCount" 2 307 "WORD"
V L "data" 2 310 "int8[64]"
V L "ICMPId" 2 311 "WORD"
V L "ICMPSeq" 2 312 "WORD"
V L "tempLocalIP" 2 314 "IP_ADDR"
V L "type" 2 324 "{int8 MACFrameType,int8 IPFrameType,ICMP_CODE ICMPCode}"
V L "lbContinue" 2 327 "BOOL"
C L "StackTask" 2 286 4 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 286 1 "FUNCTION"
C L "StackTask" 2 535 1 "*"
C L "StackTask" 2 535 1 "*"
C L "StackTask" 2 535 1 "*"
C L "StackTask" 2 535 1 "*"
D G "CCS_EMAIL_EXAMPLE" 0 181 "TRUE" "used by CCSHELPER.C"
F G "my_smtp_send" 0 182 "void()"
D G "ADC_CHAN_0" 43 54 "0"
D G "USER_BUTTON1" 43 55 "PIN_A4"
D G "USER_LED1" 43 56 "PIN_A5"
D G "USER_LED2" 43 57 "PIN_B4"
D G "USER_LED3" 43 58 "PIN_B5"
C L "my_smtp_send" 44 2 34 "FUNCTION"
C L "my_smtp_send" 44 2 1 "FUNCTION"
C L "my_smtp_send" 44 2 1 "FUNCTION"
V G "lcd_io" 44 46 "{int4 empty,int4 data}"
V G "lcd_lat" 44 46 "{int4 empty,int4 data}"
V G "lcd_tris" 44 46 "{int4 empty,int4 data}"
C L "my_smtp_send" 44 2 1 "FUNCTION"
D G "lcd_type" 44 56 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "lcd_line_two" 44 57 "0x40" "LCD RAM address for the second line"
V G "LCD_INIT_STRING" 44 60 "int8[4]"
C L "my_smtp_send" 44 2 4 "FUNCTION"
F G "lcd_read_byte" 44 69 "int8()"
V L "low" 44 70 "int8"
V L "high" 44 70 "int8"
C L "lcd_read_byte" 44 2 1 "FUNCTION"
C L "lcd_read_byte" 44 2 1 "FUNCTION"
F G "lcd_send_nibble" 44 88 "void()"
V L "n" 44 88 "int8"
F G "lcd_send_byte" 44 97 "void()"
V L "address" 44 97 "int8"
V L "n" 44 97 "int8"
F G "lcd_init" 44 112 "void()"
V L "i" 44 113 "int8"
C L "lcd_init" 44 2 1 "FUNCTION"
F G "lcd_gotoxy" 44 131 "void()"
V L "x" 44 131 "int8"
V L "y" 44 131 "int8"
V L "address" 44 132 "int8"
F G "lcd_putc" 44 142 "void()"
V L "c" 44 142 "int8"
F G "lcd_getc" 44 153 "int8()"
V L "x" 44 153 "int8"
V L "y" 44 153 "int8"
V L "value" 44 154 "int8"
C L "lcd_getc" 44 2 1 "FUNCTION"
D G "OUTPUT_DRIVE_MACRO" 43 87 "(x) bit_clear(*(x/8+18),x%8)"
D G "OUTPUT_FLOAT_MACRO" 43 95 "(x) bit_set(*(x/8+18),x%8)"
D G "EEPROM_SELECT" 43 109 "PIN_B3"
D G "EEPROM_DI" 43 110 "PIN_C5"
D G "EEPROM_DO" 43 111 "PIN_C4"
D G "EEPROM_CLK" 43 112 "PIN_C3"
D G "EEPROM_USE_SPI" 43 113 "ENC_MAC_USE_SPI"
T G "EEPROM_ADDRESS" 45 50 "{int16 val,int8[2] b}"
D G "ext_eeprom_write_enable" 45 52 "()   ext_eeprom_set_status(2)"
F G "at25256_spi_exchange" 45 54 "int8()"
V L "out" 45 54 "int8"
F G "ext_eeprom_set_status" 45 69 "void()"
V L "status" 45 69 "int8"
C L "ext_eeprom_set_status" 45 2 1 "FUNCTION"
C L "ext_eeprom_set_status" 45 2 1 "FUNCTION"
C L "ext_eeprom_set_status" 45 2 1 "FUNCTION"
F G "ext_eeprom_ready" 45 76 "int8()"
V L "data" 45 77 "int8"
C L "ext_eeprom_ready" 45 2 1 "FUNCTION"
F G "write_ext_eeprom" 45 88 "void()"
V L "address" 45 88 "EEPROM_ADDRESS"
V L "data" 45 88 "int8"
C L "write_ext_eeprom" 45 2 1 "FUNCTION"
C L "write_ext_eeprom" 45 2 1 "FUNCTION"
F G "read_ext_eeprom" 45 104 "int8()"
V L "address" 45 104 "EEPROM_ADDRESS"
V L "data" 45 105 "int8"
C L "read_ext_eeprom" 45 2 1 "FUNCTION"
C L "read_ext_eeprom" 45 2 1 "FUNCTION"
F G "init_ext_eeprom" 45 119 "void()"
V L "to" 45 120 "int8"
C L "init_ext_eeprom" 45 2 1 "FUNCTION"
D G "EE_ISP_PHONENUMBER" 43 126 "0" "size=64"
D G "EE_ISP_USERNAME" 43 127 "64" "size=64"
D G "EE_ISP_PASSWORD" 43 128 "128" "size=64"
D G "EE_NIC_DHCP" 43 130 "192" "size=1"
D G "EE_NIC_GATEWAY" 43 131 "193" "size=4"
D G "EE_NIC_IP" 43 132 "197" "size=4"
D G "EE_NIC_NETMASK" 43 133 "201" "size=4"
D G "EE_NIC_MAC" 43 134 "205" "size=6"
D G "EE_DNS" 43 135 "211" "size=4"
D G "EE_SMTP_PORT" 43 137 "215" "size=2   [TCP Port]"
D G "EE_SMTP_HOSTNAME" 43 138 "217" "size=64  [E-mail SMTP server hostname]"
D G "EE_SMTP_TO" 43 139 "281" "size=64  [E-mail To address]"
D G "EE_SMTP_FROM" 43 140 "345" "size=64  [E-mail From address]"
D G "EE_SMTP_SUBJECT" 43 141 "409" "size=64  [E-mail Subject]"
D G "EE_SMTP_BODY" 43 142 "473" "size=64  [E-mail Body]"
D G "EE_UDP_DEST_IP" 43 144 "537" "size=4   [destination IP address for UDP example]"
D G "EE_UDP_DEST_PORT" 43 145 "541" "size=2   [destination port for UDP example]"
D G "EE_UDP_SRC_PORT" 43 146 "543" "size=2    [source port for UDP example]"
D G "EE_MAGIC" 43 148 "545"
D G "EE_LAST" 43 149 "546"
C L "display_ip_lcd" 43 125 3 "FUNCTION"
F G "display_ip_lcd" 43 184 "void()"
C L "write_ext_eeprom_string" 43 125 2 "FUNCTION"
F G "write_ext_eeprom_string" 43 251 "void()"
V L "address" 43 251 "int16"
V L "str" 43 251 "*int8"
F G "write_ext_eeprom16" 43 260 "void()"
V L "address" 43 260 "int16"
V L "data" 43 260 "int16"
F G "read_ext_eeprom16" 43 266 "int16()"
V L "address" 43 266 "int16"
V L "result" 43 272 "{int8[2] b,int16 val}"
F G "read_ext_eeprom_string" 43 280 "void()"
V L "address" 43 280 "int16"
V L "str" 43 280 "*int8"
V L "max" 43 280 "int8"
V L "c" 43 281 "int8"
F G "read_ext_eeprom_ip" 43 290 "void()"
V L "address" 43 290 "int16"
V L "ip" 43 290 "*IP_ADDR"
V L "temp" 43 291 "IP_ADDR"
F G "write_ext_eeprom_ip" 43 299 "void()"
V L "address" 43 299 "int16"
V L "ip" 43 299 "*IP_ADDR"
V L "temp" 43 300 "IP_ADDR"
C L "clear_ee" 43 125 1 "FUNCTION"
F G "clear_ee" 43 309 "void()"
V L "i" 43 310 "int16"
F G "init_eeprom_defaults" 43 335 "void()"
V G "SMTP_PORT" 43 342 "int16"
V G "SMTP_HOST_NAME" 43 343 "int8[64]"
V G "SMTP_TO_ADDR" 43 344 "int8[64]" "To address of your e-mail"
V G "SMTP_FROM_ADDR" 43 345 "int8[64]" "From address of your e-mail"
V G "SMTP_SUBJECT" 43 346 "int8[64]" "Subject of your e-mail"
V G "SMTP_BODY" 43 347 "int8[64]" "Body of your e-mail"
F G "init_smtp_settings" 43 349 "void()"
C L "init" 43 125 1 "FUNCTION"
F G "init" 43 360 "void()"
C L "init" 43 125 1 "FUNCTION"
C L "init" 43 125 3 "FUNCTION"
C L "init" 43 125 1 "FUNCTION"
F G "hardware_test" 43 477 "void()"
V L "fail_nic" 43 479 "int1"
V L "fail_ee" 43 479 "int1"
C L "ui_disp_ip_user" 46 2 24 "FUNCTION"
F G "ui_disp_ip_user" 46 32 "void()"
V L "ip" 46 32 "*IP_ADDR"
F G "ui_settings" 46 36 "void()"
V L "disp" 46 38 "int1"
F G "fget_string" 46 119 "void()"
V L "s" 46 119 "*int8"
V L "max" 46 119 "int8"
V L "len" 46 120 "int8"
V L "c" 46 121 "int8"
C L "fget_string" 46 2 1 "FUNCTION"
F G "fget_int" 46 152 "int8()"
V L "initial" 46 152 "int8"
V L "s" 46 153 "int8[4]"
V L "i" 46 154 "sint8"
F G "fget_long" 46 164 "int16()"
V L "initial" 46 164 "int16"
V L "s" 46 165 "int8[6]"
V L "i" 46 166 "int16"
F G "fgethex" 46 176 "int8()"
V L "initial" 46 176 "int8"
V L "hex" 46 177 "int8[5]"
V L "ret" 46 178 "int8"
F G "ui_ip_to_ee" 46 190 "void()"
V L "address" 46 190 "int16"
V L "ip" 46 191 "IP_ADDR"
V L "i" 46 192 "int8"
F G "ui_setup" 46 226 "void()"
V L "dhcp" 46 227 "int8"
V L "i" 46 228 "int8"
V L "addy" 46 229 "int16"
F G "ui_mail_settings" 46 275 "void()"
V L "port" 46 276 "int16"
V L "str" 46 277 "int8[64]"
F G "ui_menu" 46 337 "void()"
F G "ui_handle" 46 357 "void()"
V L "c" 46 359 "int8"
V G "emails_sent" 0 187 "int8"
E G "MYSMTP_STATE_IDLE" 0 190 "0"
E G "MYSMTP_STATE_BUTTON_DEBOUNCE" 0 191 "1"
E G "MYSMTP_STATE_CONNECT" 0 191 "2"
E G "MYSMTP_STATE_GET_DNS" 0 192 "3"
E G "MYSMTP_STATE_CONNECT_NOW" 0 192 "4"
E G "MYSMTP_STATE_SEND" 0 193 "5"
E G "MYSMTP_STATE_SEND_WAIT" 0 194 "6"
V G "mysmtp_state" 0 194 ""
F G "LCDTask" 0 196 "void()"
V L "lastTick" 0 197 "TICKTYPE"
V L "currTick" 0 198 "TICKTYPE"
V L "LCD_Display" 0 199 "0"
V L "LCD_Wait" 0 199 "1"
V L "state" 0 199 ""
C L "LCDTask" 0 270 1 "FUNCTION"
F G "my_smtp_send" 0 288 "void()"
F G "MySMTPTask" 0 293 "void()"
V L "lastTick" 0 294 "TICKTYPE"
V L "currTick" 0 295 "TICKTYPE"
V L "SMTP_ADDR" 0 296 "IP_ADDR"
F G "splash" 0 381 "void()"
F G "main" 0 388 "void()"
C L "main" 0 270 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
