D G "__PCH__" 0 239 ""4.099""
D G "__DEVICE__" 0 239 "2455"
D G "__DATE__" 0 239 ""12-feb-11""
D G "__TIME__" 0 239 ""00:17:43"" "PROGRAMA PARA EJEMPLO DEMOSTRATIVO DE LA COMUNICACION DEL MODULO"
d G "PIN_A0" 1 27 "31744"
d G "PIN_A1" 1 28 "31745"
d G "PIN_A2" 1 29 "31746"
d G "PIN_A3" 1 30 "31747"
d G "PIN_A4" 1 31 "31748"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_B0" 1 35 "31752"
d G "PIN_B1" 1 36 "31753"
d G "PIN_B2" 1 37 "31754"
d G "PIN_B3" 1 38 "31755"
d G "PIN_B4" 1 39 "31756"
d G "PIN_B5" 1 40 "31757"
d G "PIN_B6" 1 41 "31758"
d G "PIN_B7" 1 42 "31759"
d G "PIN_C0" 1 44 "31760"
d G "PIN_C1" 1 45 "31761"
d G "PIN_C2" 1 46 "31762"
d G "PIN_C4" 1 47 "31764"
d G "PIN_C5" 1 48 "31765"
d G "PIN_C6" 1 49 "31766"
d G "PIN_C7" 1 50 "31767"
d G "PIN_E3" 1 52 "31779"
d G "FALSE" 1 55 "0"
d G "TRUE" 1 56 "1"
d G "BYTE" 1 58 "int8"
d G "BOOLEAN" 1 59 "int1"
d G "getc" 1 61 "getch"
d G "fgetc" 1 62 "getch"
d G "getchar" 1 63 "getch"
d G "putc" 1 64 "putchar"
d G "fputc" 1 65 "putchar"
d G "fgets" 1 66 "gets"
d G "fputs" 1 67 "puts"
d G "WDT_TIMEOUT" 1 73 "7"
d G "MCLR_FROM_SLEEP" 1 74 "11"
d G "MCLR_FROM_RUN" 1 75 "15"
d G "NORMAL_POWER_UP" 1 76 "12"
d G "BROWNOUT_RESTART" 1 77 "14"
d G "WDT_FROM_SLEEP" 1 78 "3"
d G "RESET_INSTRUCTION" 1 79 "0"
d G "RTCC_INTERNAL" 1 85 "0"
d G "RTCC_EXT_L_TO_H" 1 86 "32"
d G "RTCC_EXT_H_TO_L" 1 87 "48"
d G "RTCC_DIV_1" 1 89 "8"
d G "RTCC_DIV_2" 1 90 "0"
d G "RTCC_DIV_4" 1 91 "1"
d G "RTCC_DIV_8" 1 92 "2"
d G "RTCC_DIV_16" 1 93 "3"
d G "RTCC_DIV_32" 1 94 "4"
d G "RTCC_DIV_64" 1 95 "5"
d G "RTCC_DIV_128" 1 96 "6"
d G "RTCC_DIV_256" 1 97 "7"
d G "RTCC_OFF" 1 99 "0x80"
d G "RTCC_8_BIT" 1 101 "0x40"
d G "WDT_ON" 1 112 "0x100"
d G "WDT_OFF" 1 113 "0"
d G "T1_DISABLED" 1 119 "0"
d G "T1_INTERNAL" 1 120 "0x85"
d G "T1_EXTERNAL" 1 121 "0x87"
d G "T1_EXTERNAL_SYNC" 1 122 "0x83"
d G "T1_CLK_OUT" 1 124 "8"
d G "T1_DIV_BY_1" 1 126 "0"
d G "T1_DIV_BY_2" 1 127 "0x10"
d G "T1_DIV_BY_4" 1 128 "0x20"
d G "T1_DIV_BY_8" 1 129 "0x30"
d G "T2_DISABLED" 1 134 "0"
d G "T2_DIV_BY_1" 1 135 "4"
d G "T2_DIV_BY_4" 1 136 "5"
d G "T2_DIV_BY_16" 1 137 "6"
d G "T3_DISABLED" 1 143 "0"
d G "T3_INTERNAL" 1 144 "0x85"
d G "T3_EXTERNAL" 1 145 "0x87"
d G "T3_EXTERNAL_SYNC" 1 146 "0x83"
d G "T3_DIV_BY_1" 1 148 "0"
d G "T3_DIV_BY_2" 1 149 "0x10"
d G "T3_DIV_BY_4" 1 150 "0x20"
d G "T3_DIV_BY_8" 1 151 "0x30"
d G "T3_CCP1_TO_2" 1 154 "0x48"
d G "T3_CCP2" 1 155 "0x8"
d G "CCP_OFF" 1 161 "0"
d G "CCP_CAPTURE_FE" 1 162 "4"
d G "CCP_CAPTURE_RE" 1 163 "5"
d G "CCP_CAPTURE_DIV_4" 1 164 "6"
d G "CCP_CAPTURE_DIV_16" 1 165 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 166 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 167 "9"
d G "CCP_COMPARE_INT" 1 168 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 169 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 170 "0xB"
d G "CCP_PWM" 1 171 "0xC"
d G "CCP_PWM_PLUS_1" 1 172 "0x1c"
d G "CCP_PWM_PLUS_2" 1 173 "0x2c"
d G "CCP_PWM_PLUS_3" 1 174 "0x3c"
d G "SPI_MASTER" 1 185 "0x20"
d G "SPI_SLAVE" 1 186 "0x24"
d G "SPI_L_TO_H" 1 187 "0"
d G "SPI_H_TO_L" 1 188 "0x10"
d G "SPI_CLK_DIV_4" 1 189 "0"
d G "SPI_CLK_DIV_16" 1 190 "1"
d G "SPI_CLK_DIV_64" 1 191 "2"
d G "SPI_CLK_T2" 1 192 "3"
d G "SPI_SS_DISABLED" 1 193 "1"
d G "SPI_SAMPLE_AT_END" 1 195 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 196 "0x4000"
d G "UART_ADDRESS" 1 202 "2"
d G "UART_DATA" 1 203 "4"
d G "UART_AUTODETECT" 1 204 "8"
d G "UART_AUTODETECT_NOWAIT" 1 205 "9"
d G "UART_WAKEUP_ON_RDA" 1 206 "10"
d G "UART_SEND_BREAK" 1 207 "13"
d G "A0_A3_A1_A3" 1 211 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 212 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 213 "0xbcf05"
d G "NC_NC_NC_NC" 1 214 "0x0ff07"
d G "A0_A3_A1_A2" 1 215 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 216 "0x9ef01"
d G "A0_VR_A1_VR" 1 217 "0x3ff06"
d G "A3_VR_A2_VR" 1 218 "0xcff0e"
d G "CP1_INVERT" 1 219 "0x0000010"
d G "CP2_INVERT" 1 220 "0x0000020"
d G "VREF_LOW" 1 228 "0xa0"
d G "VREF_HIGH" 1 229 "0x80"
d G "VREF_F5" 1 231 "0x40"
d G "VREF_COMP" 1 232 "0x10"
d G "LVD_LVDIN" 1 237 "0x1F"
d G "LVD_45" 1 238 "0x1E"
d G "LVD_42" 1 239 "0x1D"
d G "LVD_40" 1 240 "0x1C"
d G "LVD_38" 1 241 "0x1B"
d G "LVD_36" 1 242 "0x1A"
d G "LVD_35" 1 243 "0x19"
d G "LVD_33" 1 244 "0x18"
d G "LVD_30" 1 245 "0x17"
d G "LVD_28" 1 246 "0x16"
d G "LVD_27" 1 247 "0x15"
d G "LVD_25" 1 248 "0x14"
d G "LVD_24" 1 249 "0x13"
d G "LVD_23" 1 250 "0x12"
d G "LVD_22" 1 251 "0x11"
d G "LVD_21" 1 252 "0x10"
d G "LVD_TRIGGER_BELOW" 1 254 "0"
d G "LVD_TRIGGER_ABOVE" 1 255 "0x80"
d G "OSC_31KHZ" 1 261 "0"
d G "OSC_125KHZ" 1 262 "0x10"
d G "OSC_250KHZ" 1 263 "0x20"
d G "OSC_500KHZ" 1 264 "0x30"
d G "OSC_1MHZ" 1 265 "0x40"
d G "OSC_2MHZ" 1 266 "0x50"
d G "OSC_4MHZ" 1 267 "0x60"
d G "OSC_8MHZ" 1 268 "0x70"
d G "OSC_16MHZ" 1 269 "0x4060"
d G "OSC_32MHZ" 1 270 "0x4070"
d G "OSC_TIMER1" 1 272 "1"
d G "OSC_INTRC" 1 273 "2"
d G "OSC_NORMAL" 1 274 "0"
d G "OSC_IDLE_MODE" 1 276 "0x80"
d G "OSC_31250" 1 277 "0x8000"
d G "OSC_PLL_ON" 1 278 "0x4000"
d G "OSC_PLL_OFF" 1 279 "0"
d G "OSC_STATE_STABLE" 1 283 "4"
d G "OSC_STATE_EXT_RUNNING" 1 284 "8"
d G "ADC_OFF" 1 291 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 292 "0x100"
d G "ADC_CLOCK_DIV_4" 1 293 "0x04"
d G "ADC_CLOCK_DIV_8" 1 294 "0x01"
d G "ADC_CLOCK_DIV_16" 1 295 "0x05"
d G "ADC_CLOCK_DIV_32" 1 296 "0x02"
d G "ADC_CLOCK_DIV_64" 1 297 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 298 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 1 300 "0x00"
d G "ADC_TAD_MUL_2" 1 301 "0x08"
d G "ADC_TAD_MUL_4" 1 302 "0x10"
d G "ADC_TAD_MUL_6" 1 303 "0x18"
d G "ADC_TAD_MUL_8" 1 304 "0x20"
d G "ADC_TAD_MUL_12" 1 305 "0x28"
d G "ADC_TAD_MUL_16" 1 306 "0x30"
d G "ADC_TAD_MUL_20" 1 307 "0x38"
d G "NO_ANALOGS" 1 310 "0x0F" "None"
d G "ALL_ANALOG" 1 311 "0x00" "A0 A1 A2 A3 A5 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 312 "0x03" "A0 A1 A2 A3 A5 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 313 "0x04" "A0 A1 A2 A3 A5 B2 B3 B1"
d G "AN0_TO_AN9" 1 314 "0x05" "A0 A1 A2 A3 A5 B2 B3"
d G "AN0_TO_AN8" 1 315 "0x06" "A0 A1 A2 A3 A5 B2"
d G "AN0_TO_AN4" 1 316 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 317 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 318 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 319 "0x0D" "A0 A1"
d G "AN0" 1 320 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 321 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 322 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 323 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 324 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 325 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 326 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 327 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 328 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 329 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 332 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 333 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 334 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 335 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 339 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 340 "1"
d G "ADC_READ_ONLY" 1 341 "6"
d G "L_TO_H" 1 353 "0x40"
d G "H_TO_L" 1 354 "0"
d G "GLOBAL" 1 356 "0xF2C0"
d G "INT_RTCC" 1 357 "0xF220"
d G "INT_TIMER0" 1 358 "0xF220"
d G "INT_TIMER1" 1 359 "0x9D01"
d G "INT_TIMER2" 1 360 "0x9D02"
d G "INT_TIMER3" 1 361 "0xA002"
d G "INT_EXT" 1 362 "0xF210"
d G "INT_EXT1" 1 363 "0xF008"
d G "INT_EXT2" 1 364 "0xF010"
d G "INT_RB" 1 365 "0xFFF208"
d G "INT_AD" 1 366 "0x9D40"
d G "INT_RDA" 1 367 "0x9D20"
d G "INT_TBE" 1 368 "0x9D10"
d G "INT_SSP" 1 369 "0x9D08"
d G "INT_CCP1" 1 370 "0x9D04"
d G "INT_CCP2" 1 371 "0xA001"
d G "INT_BUSCOL" 1 372 "0xA008"
d G "INT_LOWVOLT" 1 373 "0xA004"
d G "INT_COMP" 1 374 "0xA040"
d G "INT_EEPROM" 1 375 "0xA010"
d G "INT_OSCF" 1 376 "0xA080"
d G "INT_USB" 1 377 "0xA020"
D G "LOADER_SIZE" 2 35 " (0x1FFF)"
D G "LOC_IN_LOADER_FLAG" 2 43 "0x25"
V G "g_InBootloader" 2 49 "int8"
D G "LOADER_START" 2 52 " (0)"
D G "LOADER_END" 2 53 " (LOADER_SIZE)"
D G "APPLICATION_START" 2 54 " (LOADER_SIZE+1)"
D G "APPLICATION_END" 2 58 " (getenv("PROGRAM_MEMORY")-1)"
D G "APPLICATION_ISR" 2 60 " (APPLICATION_START+8)"
D G "_STRING" 3 12 ""
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "unsigned int16"
D G "size_t" 4 21 "unsigned int8"
D G "wchar_t" 4 22 "char"
D G "NULL" 4 23 "0"
D G "offsetof" 4 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 3 19 10 "FUNCTION"
F G "memmove" 3 34 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 3 34 "*int8"
V L "s2" 3 34 "*int8"
V L "n" 3 34 "int8"
V L "sc1" 3 36 "*int8"
V L "sc2" 3 37 "*int8"
D G "strcopy" 3 54 "strcpy"
C L "strncpy" 3 19 4 "FUNCTION"
F G "strncpy" 3 61 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 3 61 "*int8"
V L "s2" 3 61 "*int8"
V L "n" 3 61 "int8"
V L "s" 3 63 "*int8"
C L "strcat" 3 19 3 "FUNCTION"
F G "strcat" 3 78 "*int8(*int8 s1,*int8 s2)"
V L "s1" 3 78 "*int8"
V L "s2" 3 78 "*int8"
V L "s" 3 80 "*int8"
C L "strncat" 3 19 2 "FUNCTION"
F G "strncat" 3 96 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 3 96 "*int8"
V L "s2" 3 96 "*int8"
V L "n" 3 96 "int8"
V L "s" 3 98 "*int8"
C L "memcmp" 3 19 3 "FUNCTION"
F G "memcmp" 3 120 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 3 120 "*int8"
V L "s2" 3 120 "*int8"
V L "n" 3 120 "int8"
V L "su1" 3 122 "*int8"
V L "su2" 3 122 "*int8"
C L "strcmp" 3 19 2 "FUNCTION"
F G "strcmp" 3 134 "sint8(*int8 s1,*int8 s2)"
V L "s1" 3 134 "*int8"
V L "s2" 3 134 "*int8"
C L "strcoll" 3 19 2 "FUNCTION"
F G "strcoll" 3 144 "sint8(*int8 s1,*int8 s2)"
V L "s1" 3 144 "*int8"
V L "s2" 3 144 "*int8"
C L "strncmp" 3 19 4 "FUNCTION"
F G "strncmp" 3 157 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 3 157 "*int8"
V L "s2" 3 157 "*int8"
V L "n" 3 157 "int8"
C L "strxfrm" 3 19 3 "FUNCTION"
F G "strxfrm" 3 169 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 3 169 "*int8"
V L "s2" 3 169 "*int8"
V L "n" 3 169 "int8"
V L "s" 3 171 "*int8"
V L "n1" 3 172 "int8"
C L "memchr" 3 19 3 "FUNCTION"
F G "memchr" 3 191 "*int8(*int8 s,int8 c,int8 n)"
V L "s" 3 191 "*int8"
V L "c" 3 191 "int8"
V L "n" 3 191 "int8"
V L "uc" 3 193 "int8"
V L "su" 3 194 "*int8"
C L "strchr" 3 19 2 "FUNCTION"
F G "strchr" 3 205 "*int8(*int8 s,int8 c)"
V L "s" 3 205 "*int8"
V L "c" 3 205 "int8"
C L "strcspn" 3 19 4 "FUNCTION"
F G "strcspn" 3 217 "int8(*int8 s1,*int8 s2)"
V L "s1" 3 217 "*int8"
V L "s2" 3 217 "*int8"
V L "sc1" 3 219 "*int8"
V L "sc2" 3 219 "*int8"
C L "strpbrk" 3 19 4 "FUNCTION"
F G "strpbrk" 3 232 "*int8(*int8 s1,*int8 s2)"
V L "s1" 3 232 "*int8"
V L "s2" 3 232 "*int8"
V L "sc1" 3 234 "*int8"
V L "sc2" 3 234 "*int8"
C L "strrchr" 3 19 2 "FUNCTION"
F G "strrchr" 3 247 "*int8(*int8 s,int8 c)"
V L "s" 3 247 "*int8"
V L "c" 3 247 "int8"
V L "p" 3 249 "*int8"
C L "strspn" 3 19 2 "FUNCTION"
F G "strspn" 3 262 "int8(*int8 s1,*int8 s2)"
V L "s1" 3 262 "*int8"
V L "s2" 3 262 "*int8"
V L "sc1" 3 264 "*int8"
V L "sc2" 3 264 "*int8"
C L "strstr" 3 19 6 "FUNCTION"
F G "strstr" 3 281 "*int8(*int8 s1,*int8 s2)"
V L "s1" 3 281 "*int8"
V L "s2" 3 281 "*int8"
V L "s" 3 283 "*int8"
V L "t" 3 283 "*int8"
C L "strtok" 3 19 13 "FUNCTION"
F G "strtok" 3 320 "*int8(*int8 s1,*int8 s2)"
V L "s1" 3 320 "*int8"
V L "s2" 3 320 "*int8"
V L "beg" 3 322 "*int8"
V L "end" 3 322 "*int8"
V L "save" 3 323 "*int8"
C L "strlen" 3 19 6 "FUNCTION"
F G "strlen" 3 369 "int8(*int8 s)"
V L "s" 3 369 "*int8"
V L "sc" 3 371 "*int8"
C L "stricmp" 3 19 2 "FUNCTION"
F G "stricmp" 3 380 "sint8(*int8 s1,*int8 s2)"
V L "s1" 3 380 "*int8"
V L "s2" 3 380 "*int8"
C L "strlwr" 3 19 3 "FUNCTION"
F G "strlwr" 3 394 "*int8(*int8 s)"
V L "s" 3 394 "*int8"
V L "p" 3 396 "*int8"
T G "LCD_PIN_MAP" 6 81 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}" "this is to improve compatability with previous LCD drivers that accepted"
V G "new_car" 6 98 "int8[8]"
D G "lcd_output_enable" 6 100 "(x) lcdlat.enable=x"
D G "lcd_enable_tris" 6 101 "()   lcdtris.enable=0"
D G "lcd_output_rs" 6 108 "(x) lcdlat.rs=x"
D G "lcd_rs_tris" 6 109 "()   lcdtris.rs=0"
D G "lcd_output_rw" 6 116 "(x) lcdlat.rw=x"
D G "lcd_rw_tris" 6 117 "()   lcdtris.rw=0"
D G "LCD_DATA_PORT" 6 142 "getenv("SFR:PORTB")" "portb"
V G "lcd" 6 157 "LCD_PIN_MAP"
V G "lcdlat" 6 157 "LCD_PIN_MAP"
V G "lcdtris" 6 157 "LCD_PIN_MAP"
D G "LCD_TYPE" 6 170 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "LCD_LINE_TWO" 6 174 "0x40" "LCD RAM address for the second line"
D G "LCD_LINE_LENGTH" 6 178 "20"
V G "LCD_INIT_STRING" 6 181 "int8[4]"
C L "lcd_read_nibble" 6 2 2 "FUNCTION"
F G "lcd_read_nibble" 6 185 "int8()"
F G "lcd_read_byte" 6 187 "int8()"
V L "low" 6 189 "int8"
V L "high" 6 189 "int8"
F G "lcd_read_nibble" 6 234 "int8(int8 n)"
F G "lcd_send_nibble" 6 251 "void(int8 n)"
V L "n" 6 251 "int8"
F G "lcd_send_byte" 6 269 "void(int8 address,int8 n)"
V L "address" 6 269 "int8"
V L "n" 6 269 "int8"
F G "lcd_init" 6 294 "void()"
V L "i" 6 296 "int8"
F G "lcd_gotoxy" 6 335 "void(int8 x,int8 y)"
V L "x" 6 335 "int8"
V L "y" 6 335 "int8"
V L "address" 6 337 "int8"
F G "lcd_putc" 6 353 "void(int8 c)"
V L "c" 6 353 "int8"
F G "lcd_getc" 6 396 "int8(int8 x,int8 y)"
V L "x" 6 396 "int8"
V L "y" 6 396 "int8"
V L "value" 6 398 "int8"
C L "lcd_getc" 6 2 1 "FUNCTION"
F G "Set_Char" 6 408 "void(int8 dir,*int8[8] new_car)"
V L "dir" 6 408 "int8"
V L "new_car" 6 408 "int8[8]"
V L "i" 6 409 "int8" "El lcd consta de 8 espacios para caracteres personalizables"
C L "Set_Char" 6 2 8 "FUNCTION"
C L "Set_Char" 6 2 1 "FUNCTION"
C L "Set_Char" 6 2 1 "FUNCTION"
C L "Set_Char" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
F G "Display_Dato" 6 431 "void(*int8 dato2,int16 MS)"
V L "dato2" 6 431 "*int8"
V L "MS" 6 431 "int16" "ESTA ES UNA RUTINA PARA DESPLEGAR DATOS(NECESITA LA VARIBALE,Y UN NUMERO X ms  PARA EL DELAY ENTRE PANTALLAS"
V L "str1" 6 432 "*int8"
V L "str2" 6 432 "*int8" "SE DEFINEN LOS PUNTEROS"
V L "car" 6 433 "int8"
V L "car2" 6 433 "int8" "SE DEFINE EL CARACTER DE LIMPIEZA DE PANTALLA Y CAMBIO DE LINEA"
V L "k" 6 434 "int8"
C L "Display_Dato" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
C L "Display_Dato" 6 2 1 "FUNCTION"
D G "__USB_DESCRIPTORS__" 7 38 ""
D G "USB_CONFIG_PID" 7 41 "0x0033"
D G "USB_CONFIG_VID" 7 42 "0x0461"
D G "USB_CONFIG_BUS_POWER" 7 43 "100" "100mA  (range is 0..500)"
D G "USB_CONFIG_VERSION" 7 44 "0x0100" "01.00  //range is 00.00 to 99.99"
D G "USB_HID_DEVICE" 7 47 "FALSE"
D G "USB_CDC_DEVICE" 7 48 "TRUE"
D G "USB_CDC_COMM_IN_ENDPOINT" 7 50 "1"
D G "USB_CDC_COMM_IN_SIZE" 7 51 "8"
D G "USB_EP1_TX_ENABLE" 7 52 "USB_ENABLE_INTERRUPT"
D G "USB_EP1_TX_SIZE" 7 53 "USB_CDC_COMM_IN_SIZE"
D G "USB_CDC_DATA_IN_ENDPOINT" 7 56 "2"
D G "USB_CDC_DATA_IN_SIZE" 7 57 "64"
D G "USB_EP2_TX_ENABLE" 7 58 "USB_ENABLE_BULK"
D G "USB_EP2_TX_SIZE" 7 59 "USB_CDC_DATA_IN_SIZE"
D G "USB_CDC_DATA_OUT_ENDPOINT" 7 62 "2"
D G "USB_CDC_DATA_OUT_SIZE" 7 63 "64"
D G "USB_EP2_RX_ENABLE" 7 64 "USB_ENABLE_BULK"
D G "USB_EP2_RX_SIZE" 7 65 "USB_CDC_DATA_OUT_SIZE"
D G "__USB_PROTOTYPES__" 8 260 ""
D G "USB_CON_SENSE_PIN" 8 265 "0"
D G "USB_HID_BOOT_PROTOCOL" 8 269 "FALSE"
D G "USB_HID_IDLE" 8 273 "FALSE"
D G "USB_OPT_FOR_ROM" 8 287 "TRUE"
D G "USB_MAX_EP0_PACKET_LENGTH" 8 291 "8"
C L "usb_enumerated" 8 2 9 "FUNCTION"
F G "usb_enumerated" 8 306 "int8()"
C L "usb_enumerated" 8 2 7 "FUNCTION"
F G "usb_wait_for_enumeration" 8 316 "void()"
C L "usb_wait_for_enumeration" 8 2 15 "FUNCTION"
F G "usb_gets" 8 334 "int16(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "endpoint" 8 334 "int8"
V L "ptr" 8 334 "*int8"
V L "max" 8 334 "int16"
V L "timeout" 8 334 "int16" "/* usb_puts()"
C L "usb_gets" 8 2 16 "FUNCTION"
F G "usb_puts" 8 354 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)"
V L "endpoint" 8 354 "int8"
V L "ptr" 8 354 "*int8"
V L "len" 8 354 "int16"
V L "timeout" 8 354 "int8" "/* usb_attached()"
D G "usb_attached" 8 366 "() TRUE"
C L "usb_puts" 8 2 2 "FUNCTION"
E G "GET_DESCRIPTOR" 8 374 "1"
E G "SET_ADDRESS" 8 374 "2"
E G "NONE" 8 374 "0"
E G "USB_GETDESC_CONFIG_TYPE" 8 376 "0"
E G "USB_GETDESC_HIDREPORT_TYPE" 8 376 "1"
E G "USB_GETDESC_STRING_TYPE" 8 376 "2"
E G "USB_GETDESC_DEVICE_TYPE" 8 376 "3"
C L "usb_puts" 8 2 1 "FUNCTION"
C L "usb_puts" 8 2 1 "FUNCTION"
C L "usb_puts" 8 2 1 "FUNCTION"
C L "usb_puts" 8 2 1 "FUNCTION"
T G "TYPE_USB_STACK_STATUS" 8 384 "{USB_STATES dev_req,int8 curr_config,int8 status_device,USB_GETDESC_TYPES getdesc_type}"
V G "USB_stack_status" 8 394 "TYPE_USB_STACK_STATUS" "/* usb_token_reset()"
C L "usb_puts" 8 2 5 "FUNCTION"
F G "usb_token_reset" 8 403 "void()"
C L "usb_token_reset" 8 2 32 "FUNCTION"
F G "usb_isr_tok_setup_dne" 8 438 "void()"
C L "usb_isr_tok_setup_dne" 8 2 11 "FUNCTION"
F G "usb_isr_tok_out_dne" 8 452 "void(int8 endpoint)"
V L "endpoint" 8 452 "int8" "/* usb_isr_tok_in_dne(endpoint)"
C L "usb_isr_tok_out_dne" 8 2 10 "FUNCTION"
F G "usb_isr_tok_in_dne" 8 466 "void(int8 endpoint)"
V L "endpoint" 8 466 "int8" "END STACK-LEVEL API USED BY HW DRIVERS /////////////////////////////////"
D G "USB_NUM_CONFIGURATIONS" 8 472 "1" "DO NOT CHANGE"
D G "PID_IN" 8 475 "0x09" "device to host transactions"
D G "PID_OUT" 8 476 "0x01" "host to device transactions"
D G "PID_SETUP" 8 477 "0x0D" "host to device setup transaction"
D G "PID_ACK" 8 478 "0x02" "receiver accepts error-free data packet"
D G "PID_DATA0" 8 479 "0x03" "data packet with even sync bit"
D G "PID_SOF" 8 480 "0x05" "start of framer marker and frame number"
D G "PID_NAK" 8 481 "0x0A" "receiver can't accept data or sender cant send data or has no data to transmit"
D G "PID_DATA1" 8 482 "0x0B" "data packet with odd sync bit"
D G "PID_PRE" 8 483 "0x0C" "preamble issued by host.  enables downstream traffic to low-speed device"
D G "PID_STALL" 8 484 "0x0E" "a control request isnt supported or the endpoint is halted"
D G "USB_DESC_DEVICE_TYPE" 8 487 "0x01" "#DEFINE USB_DEVICE_DESC_KEY      0x01"
D G "USB_DESC_CONFIG_TYPE" 8 488 "0x02" "#DEFINE USB_CONFIG_DESC_KEY      0x02"
D G "USB_DESC_STRING_TYPE" 8 489 "0x03" "#DEFINE USB_STRING_DESC_KEY      0x03"
D G "USB_DESC_INTERFACE_TYPE" 8 490 "0x04" "#DEFINE USB_INTERFACE_DESC_KEY   0x04"
D G "USB_DESC_ENDPOINT_TYPE" 8 491 "0x05" "#DEFINE USB_ENDPOINT_DESC_KEY    0x05"
D G "USB_DESC_CLASS_TYPE" 8 492 "0x21" "#DEFINE USB_CLASS_DESC_KEY       0x21"
D G "USB_DESC_HIDREPORT_TYPE" 8 493 "0x22"
D G "USB_DESC_DEVICE_LEN" 8 496 "18" "#DEFINE USB_DEVICE_DESC_LEN      18"
D G "USB_DESC_CONFIG_LEN" 8 497 "9" "#DEFINE USB_CONFIG_DESC_LEN      9"
D G "USB_DESC_INTERFACE_LEN" 8 498 "9" "#DEFINE USB_INTERFACE_DESC_LEN   9"
D G "USB_DESC_CLASS_LEN" 8 499 "9" "#DEFINE USB_CLASS_DESC_LEN       9"
D G "USB_DESC_ENDPOINT_LEN" 8 500 "7" "#DEFINE USB_ENDPOINT_DESC_LEN    7"
D G "USB_STANDARD_REQUEST_GET_STATUS" 8 503 "0x00"
D G "USB_STANDARD_REQUEST_CLEAR_FEATURE" 8 504 "0x01"
D G "USB_STANDARD_REQUEST_SET_FEATURE" 8 505 "0x03"
D G "USB_STANDARD_REQUEST_SET_ADDRESS" 8 506 "0x05"
D G "USB_STANDARD_REQUEST_GET_DESCRIPTOR" 8 507 "0x06"
D G "USB_STANDARD_REQUEST_SET_DESCRIPTOR" 8 508 "0x07"
D G "USB_STANDARD_REQUEST_GET_CONFIGURATION" 8 509 "0x08"
D G "USB_STANDARD_REQUEST_SET_CONFIGURATION" 8 510 "0x09"
D G "USB_STANDARD_REQUEST_GET_INTERFACE" 8 511 "0x0A"
D G "USB_STANDARD_REQUEST_SET_INTERFACE" 8 512 "0x0B"
D G "USB_STANDARD_REQUEST_SYNCH_FRAME" 8 513 "0x0C"
D G "USB_HID_REQUEST_GET_REPORT" 8 516 "0x01"
D G "USB_HID_REQUEST_GET_IDLE" 8 517 "0x02"
D G "USB_HID_REQUEST_GET_PROTOCOL" 8 518 "0x03"
D G "USB_HID_REQUEST_SET_REPORT" 8 519 "0x09"
D G "USB_HID_REQUEST_SET_IDLE" 8 520 "0x0A"
D G "USB_HID_REQUEST_SET_PROTOCOL" 8 521 "0x0B"
D G "USB_ENDPOINT_TYPE_CONTROL" 8 524 "0x00"
D G "USB_ENDPOINT_TYPE_ISOCHRONOUS" 8 525 "0x01"
D G "USB_ENDPOINT_TYPE_BULK" 8 526 "0x02"
D G "USB_ENDPOINT_TYPE_INTERRUPT" 8 527 "0x03"
D G "USB_ENABLE_DISABLED" 8 530 "-1"
D G "USB_ENABLE_BULK" 8 531 "USB_ENDPOINT_TYPE_BULK"
D G "USB_ENABLE_ISOCHRONOUS" 8 532 "USB_ENDPOINT_TYPE_ISOCHRONOUS"
D G "USB_ENABLE_INTERRUPT" 8 533 "USB_ENDPOINT_TYPE_INTERRUPT"
D G "USB_ENABLE_CONTROL" 8 534 "USB_ENDPOINT_TYPE_CONTROL"
D G "USB_EP0_TX_ENABLE" 8 540 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_ENABLE" 8 541 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_SIZE" 8 542 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP0_TX_SIZE" 8 543 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP1_RX_ENABLE" 8 550 "USB_ENABLE_DISABLED"
D G "USB_EP1_RX_SIZE" 8 557 "0"
D G "USB_EP3_TX_ENABLE" 8 609 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_ENABLE" 8 612 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_SIZE" 8 619 "0"
D G "USB_EP3_TX_SIZE" 8 630 "0"
D G "USB_EP4_TX_ENABLE" 8 640 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_ENABLE" 8 643 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_SIZE" 8 650 "0"
D G "USB_EP4_TX_SIZE" 8 661 "0"
D G "USB_EP5_TX_ENABLE" 8 671 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_ENABLE" 8 674 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_SIZE" 8 681 "0"
D G "USB_EP5_TX_SIZE" 8 692 "0"
D G "USB_EP6_TX_ENABLE" 8 702 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_ENABLE" 8 705 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_SIZE" 8 712 "0"
D G "USB_EP6_TX_SIZE" 8 723 "0"
D G "USB_EP7_TX_ENABLE" 8 733 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_ENABLE" 8 736 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_SIZE" 8 743 "0"
D G "USB_EP7_TX_SIZE" 8 754 "0"
D G "USB_EP8_TX_ENABLE" 8 764 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_ENABLE" 8 767 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_SIZE" 8 774 "0"
D G "USB_EP8_TX_SIZE" 8 785 "0"
D G "USB_EP9_TX_ENABLE" 8 795 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_ENABLE" 8 798 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_SIZE" 8 805 "0"
D G "USB_EP9_TX_SIZE" 8 816 "0"
D G "USB_EP10_TX_ENABLE" 8 826 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_ENABLE" 8 829 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_SIZE" 8 836 "0"
D G "USB_EP10_TX_SIZE" 8 847 "0"
D G "USB_EP11_TX_ENABLE" 8 857 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_ENABLE" 8 860 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_SIZE" 8 867 "0"
D G "USB_EP11_TX_SIZE" 8 878 "0"
D G "USB_EP12_TX_ENABLE" 8 888 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_ENABLE" 8 891 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_SIZE" 8 898 "0"
D G "USB_EP12_TX_SIZE" 8 909 "0"
D G "USB_EP13_TX_ENABLE" 8 919 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_ENABLE" 8 922 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_SIZE" 8 929 "0"
D G "USB_EP13_TX_SIZE" 8 940 "0"
D G "USB_EP14_TX_ENABLE" 8 950 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_ENABLE" 8 953 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_SIZE" 8 960 "0"
D G "USB_EP14_TX_SIZE" 8 971 "0"
D G "USB_EP15_TX_ENABLE" 8 981 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_ENABLE" 8 984 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_SIZE" 8 991 "0"
D G "USB_EP15_TX_SIZE" 8 1002 "0"
V G "usb_ep_tx_type" 8 1009 "int8[16]"
V G "usb_ep_rx_type" 8 1018 "int8[16]"
V G "usb_ep_tx_size" 8 1027 "int16[16]"
V G "usb_ep_rx_size" 8 1036 "int16[16]"
D G "USB_TOTAL_CONFIG_LEN" 7 77 "67" "config+interface+class+endpoint+endpoint (2 endpoints)"
V G "USB_CONFIG_DESC" 7 79 "int8[1]" "IN ORDER TO COMPLY WITH WINDOWS HOSTS, THE ORDER OF THIS ARRAY MUST BE:"
C L "usb_isr_tok_in_dne" 7 71 5 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 71 1 "FUNCTION"
D G "USB_MAX_NUM_INTERFACES" 7 180 "2"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
V G "USB_NUM_INTERFACES" 7 183 "int8[1]"
C L "usb_isr_tok_in_dne" 7 174 5 "FUNCTION"
V G "USB_CLASS_DESCRIPTORS" 7 190 "int8[1][2][4]" "config 1"
C L "usb_isr_tok_in_dne" 7 174 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
V G "USB_DEVICE_DESC" 7 212 "int8[18]" "starts of with device configuration. only one possible"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 5 "FUNCTION"
V G "USB_STRING_DESC_OFFSET" 7 243 "int8[1]"
C L "usb_isr_tok_in_dne" 7 174 5 "FUNCTION"
V G "USB_STRING_DESC" 7 250 "int8[1]" "string 0"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 2 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 7 174 1 "FUNCTION"
D G "usb_cdc_kbhit" 9 136 "() (usb_cdc_get_buffer_status.got)"
D G "usb_cdc_putready" 9 137 "() (usb_cdc_put_buffer_nextin<sizeof(usb_cdc_put_buffer))"
D G "usb_cdc_connected" 9 138 "() (usb_cdc_got_set_line_coding)"
F G "usb_cdc_putc_fast" 9 139 "void(int8 c)"
V L "c" 9 139 "int8"
F G "usb_cdc_getc" 9 140 "int8()"
F G "usb_cdc_putc" 9 141 "void(int8 c)"
V L "c" 9 141 "int8" "input.c ported to use CDC:"
F G "get_float_usb" 9 144 "float()"
F G "get_long_usb" 9 145 "sint16()"
F G "get_int_usb" 9 146 "sint8()"
F G "get_string_usb" 9 147 "void(*int8 s,int8 max)"
V L "s" 9 147 "*int8"
V L "max" 9 147 "int8"
F G "gethex_usb" 9 148 "int8()"
F G "gethex1_usb" 9 149 "int8()" "functions automatically called by USB handler code"
F G "usb_isr_tkn_cdc" 9 152 "void()"
F G "usb_cdc_init" 9 153 "void()"
F G "usb_isr_tok_out_cdc_control_dne" 9 154 "void()"
F G "usb_isr_tok_in_cdc_data_dne" 9 155 "void()"
F G "usb_isr_tok_out_cdc_data_dne" 9 156 "void()"
F G "usb_cdc_flush_out_buffer" 9 158 "void()"
D G "__USB_PIC_PERIF__" 9 167 "1"
D G "__PIC18_USB_H__" 10 130 ""
D G "__USB_HARDWARE__" 10 132 ""
D G "__PIC__" 10 135 "1"
D G "USB_USE_FULL_SPEED" 10 138 "TRUE"
D G "__USB_HW_LAYER_H__" 11 34 ""
E G "USB_DTS_DATA1" 11 36 "1"
E G "USB_DTS_TOGGLE" 11 36 "2"
E G "USB_DTS_DATA0" 11 37 "0"
E G "USB_DTS_STALL" 11 37 "3"
E G "USB_DTS_USERX" 11 37 "4" "USER LEVEL FUNCTIONS:"
C L "usb_cdc_flush_out_buffer" 11 2 5 "FUNCTION"
F G "usb_init" 11 48 "void()"
C L "usb_init" 11 2 5 "FUNCTION"
F G "usb_init_cs" 11 56 "void()"
C L "usb_init_cs" 11 2 5 "FUNCTION"
F G "usb_task" 11 64 "void()"
C L "usb_task" 11 2 12 "FUNCTION"
F G "usb_attach" 11 79 "void()"
C L "usb_attach" 11 2 15 "FUNCTION"
F G "usb_detach" 11 97 "void()"
C L "usb_detach" 11 2 28 "FUNCTION"
F G "usb_put_packet" 11 128 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)"
V L "endpoint" 11 128 "int8"
V L "ptr" 11 128 "*int8"
V L "len" 11 128 "int16"
V L "tgl" 11 128 "USB_DTS_BIT" "/* usb_get_packet(endpoint, *ptr, max)"
C L "usb_put_packet" 11 2 22 "FUNCTION"
F G "usb_get_packet" 11 154 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 11 154 "int8"
V L "ptr" 11 154 "*int8"
V L "max" 11 154 "int16" "/* usb_kbhit(endpoint)"
C L "usb_get_packet" 11 2 12 "FUNCTION"
F G "usb_kbhit" 11 170 "int8(int8 en)"
V L "en" 11 170 "int8" "/* usb_tbe(endpoint)"
C L "usb_kbhit" 11 2 13 "FUNCTION"
F G "usb_tbe" 11 187 "int8(int8 en)"
V L "en" 11 187 "int8" "END USER LEVEL FUNCTIONS /////////////////////////////////////"
C L "usb_tbe" 11 2 16 "FUNCTION"
F G "usb_stall_ep" 11 212 "void(int8 endpoint)"
V L "endpoint" 11 212 "int8" "/* usb_unstall_ep(endpoint, direction)"
C L "usb_stall_ep" 11 2 10 "FUNCTION"
F G "usb_unstall_ep" 11 227 "void(int8 endpoint)"
V L "endpoint" 11 227 "int8" "/* usb_endpoint_stalled()"
C L "usb_unstall_ep" 11 2 15 "FUNCTION"
F G "usb_endpoint_stalled" 11 246 "int8(int8 endpoint)"
V L "endpoint" 11 246 "int8" "/* usb_set_address(address)"
C L "usb_endpoint_stalled" 11 2 7 "FUNCTION"
F G "usb_set_address" 11 257 "void(int8 address)"
V L "address" 11 257 "int8" "/* usb_set_configured()"
C L "usb_set_address" 11 2 10 "FUNCTION"
F G "usb_set_configured" 11 271 "void(int8 config)"
V L "config" 11 271 "int8" "/* usb_disable_endpoints()"
C L "usb_set_configured" 11 2 4 "FUNCTION"
F G "usb_disable_endpoints" 11 279 "void()"
C L "usb_disable_endpoints" 11 2 7 "FUNCTION"
F G "usb_disable_endpoint" 11 290 "void(int8 en)"
V L "en" 11 290 "int8" "/* usb_request_send_response(len)"
C L "usb_disable_endpoint" 11 2 28 "FUNCTION"
F G "usb_request_send_response" 11 322 "void(int8 len)"
V L "len" 11 322 "int8"
F G "usb_request_get_data" 11 323 "void()"
F G "usb_request_stall" 11 324 "void()"
C L "usb_request_stall" 10 170 16 "FUNCTION"
F G "usb_flush_in" 10 188 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)"
V L "endpoint" 10 188 "int8"
V L "len" 10 188 "int16"
V L "tgl" 10 188 "USB_DTS_BIT" "/* usb_flush_out()"
C L "usb_flush_in" 10 170 13 "FUNCTION"
F G "usb_flush_out" 10 205 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "endpoint" 10 205 "int8"
V L "tgl" 10 205 "USB_DTS_BIT" "/* usb_rx_packet_size()"
C L "usb_flush_out" 10 170 10 "FUNCTION"
F G "usb_rx_packet_size" 10 219 "int16(int8 endpoint)"
V L "endpoint" 10 219 "int8" "usb_desc_cdc.h                            ////"
C L "usb_rx_packet_size" 7 3 30 "FUNCTION"
D G "__USB_DRIVER__" 12 138 ""
C L "usb_rx_packet_size" 8 2 253 "FUNCTION"
D G "__PIC18_USB_C__" 13 85 ""
C L "usb_rx_packet_size" 8 2 253 "FUNCTION"
D G "USB_IGNORE_RX_DTS" 13 93 "FALSE"
D G "USB_IGNORE_TX_DTS" 13 97 "FALSE"
D G "__USB_4550__" 13 136 ""
D G "USB_TOTAL_RAM_SPACE" 13 137 " ((int16)0x400)"
D G "USB_RAM_START" 13 138 "0x400"
D G "USB_NUM_UEP" 13 139 "16"
D G "USB_LAST_ALLOWED_ENDPOINT" 13 140 "16"
D G "USB_LAST_DEFINED_ENDPOINT" 13 172 "2"
D G "USB_CONTROL_REGISTER_SIZE" 13 179 " ((USB_LAST_DEFINED_ENDPOINT+1)*8)"
D G "USB_DATA_BUFFER_NEEDED" 13 181 " (USB_EP0_TX_SIZE+USB_EP0_RX_SIZE+USB_EP1_TX_SIZE+                            USB_EP1_RX_SIZE+USB_EP2_TX_SIZE+USB_EP2_RX_SIZE+                            USB_EP3_TX_SIZE+USB_EP3_RX_SIZE+USB_EP4_TX_SIZE+                            USB_EP4_RX_SIZE+USB_EP5_TX_SIZE+USB_EP5_RX_SIZE+                            USB_EP6_TX_SIZE+USB_EP6_RX_SIZE+USB_EP7_TX_SIZE+                            USB_EP7_RX_SIZE+USB_EP8_TX_SIZE+USB_EP8_RX_SIZE+                            USB_EP9_TX_SIZE+USB_EP9_RX_SIZE+USB_EP10_TX_SIZE+                            USB_EP10_RX_SIZE+USB_EP11_TX_SIZE+USB_EP11_RX_SIZE+                            USB_EP12_TX_SIZE+USB_EP12_RX_SIZE+USB_EP13_TX_SIZE+                            USB_EP13_RX_SIZE+USB_EP14_TX_SIZE+USB_EP14_RX_SIZE+                            USB_EP15_TX_SIZE+USB_EP15_RX_SIZE)"
D G "USB_DATA_BUFFER_LOCATION" 13 201 " ((int16)USB_RAM_START+USB_CONTROL_REGISTER_SIZE)"
T G "STRUCT_BD" 13 208 "{int8 stat,int8 cnt,int16 addr}"
C L "usb_rx_packet_size" 13 89 1 "FUNCTION"
C L "usb_rx_packet_size" 13 89 1 "FUNCTION"
C L "usb_rx_packet_size" 13 89 1 "FUNCTION"
V G "g_USBRAM" 13 240 "{}"
D G "usb_ep0_rx_buffer" 13 243 "g_USBRAM.buffer.ep0_rx_buffer"
D G "usb_ep0_tx_buffer" 13 244 "g_USBRAM.buffer.ep0_tx_buffer"
D G "usb_ep1_rx_buffer" 13 247 "g_USBRAM.buffer.ep1_rx_buffer"
D G "usb_ep1_tx_buffer" 13 248 "g_USBRAM.buffer.ep1_tx_buffer"
D G "usb_ep2_rx_buffer" 13 249 "g_USBRAM.buffer.ep2_rx_buffer"
D G "usb_ep2_tx_buffer" 13 250 "g_USBRAM.buffer.ep2_tx_buffer"
D G "debug_usb" 13 252 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
D G "debug_putc" 13 253 "(c)"
D G "debug_display_ram" 13 256 "(x,y)"
D G "USB_USE_ERROR_COUNTER" 13 274 "FALSE"
D G "USB_PING_PONG_MODE_OFF" 13 277 "0" "no ping pong"
D G "USB_PING_PONG_MODE_E0" 13 278 "1" "ping pong endpoint 0 only"
D G "USB_PING_PONG_MODE_ON" 13 279 "2" "ping pong all endpoints"
D G "USB_PING_PONG_MODE" 13 283 "USB_PING_PONG_MODE_OFF"
C L "usb_rx_packet_size" 13 89 1 "FUNCTION"
D G "UEP0_LOC" 13 302 "0xF70"
V G "USTATCopy" 13 341 "int8"
V G "g_UEP" 13 343 "int8[16]"
D G "UEP" 13 345 "(x) g_UEP[x]"
D G "BIT_SOF" 13 347 "6"
D G "BIT_STALL" 13 348 "5"
D G "BIT_IDLE" 13 349 "4"
D G "BIT_TRN" 13 350 "3"
D G "BIT_ACTV" 13 351 "2"
D G "BIT_UERR" 13 352 "1"
D G "BIT_URST" 13 353 "0"
D G "EP_BDxST_O" 13 379 "(x)    g_USBRAM.bd[x].out.stat"
D G "EP_BDxCNT_O" 13 380 "(x)   g_USBRAM.bd[x].out.cnt"
D G "EP_BDxADR_O" 13 381 "(x)   g_USBRAM.bd[x].out.addr"
D G "EP_BDxST_I" 13 382 "(x)    g_USBRAM.bd[x].in.stat"
D G "EP_BDxCNT_I" 13 383 "(x)   g_USBRAM.bd[x].in.cnt"
D G "EP_BDxADR_I" 13 384 "(x)   g_USBRAM.bd[x].in.addr"
D G "ENDPT_DISABLED" 13 390 "0x00" "endpoint not used"
D G "ENDPT_IN_ONLY" 13 391 "0x02" "endpoint supports IN transactions only"
D G "ENDPT_OUT_ONLY" 13 392 "0x04" "endpoint supports OUT transactions only"
D G "ENDPT_CONTROL" 13 393 "0x06" "Supports IN, OUT and CONTROL transactions - Only use with EP0"
D G "ENDPT_NON_CONTROL" 13 394 "0x0E" "Supports both IN and OUT transactions"
C L "usb_rx_packet_size" 13 89 1 "FUNCTION"
E G "USB_STATE_DETACHED" 13 397 "0"
E G "USB_STATE_ATTACHED" 13 397 "1"
E G "USB_STATE_POWERED" 13 397 "2"
E G "USB_STATE_DEFAULT" 13 398 "3"
E G "USB_STATE_ADDRESS" 13 398 "4"
E G "USB_STATE_CONFIGURED" 13 398 "5"
V G "usb_state" 13 398 ""
D G "USB_PIC_PID_IN" 13 401 "0x24" "device to host transactions"
D G "USB_PIC_PID_OUT" 13 402 "0x04" "host to device transactions"
D G "USB_PIC_PID_SETUP" 13 403 "0x34" "host to device setup transaction"
D G "USTAT_IN_E0" 13 405 "4"
D G "USTAT_OUT_SETUP_E0" 13 406 "0"
D G "__USB_UIF_RESET" 13 408 "0x01"
D G "__USB_UIF_ERROR" 13 409 "0x02"
D G "__USB_UIF_ACTIVE" 13 410 "0x04"
D G "__USB_UIF_TOKEN" 13 411 "0x08"
D G "__USB_UIF_IDLE" 13 412 "0x10"
D G "__USB_UIF_STALL" 13 413 "0x20"
D G "__USB_UIF_SOF" 13 414 "0x40"
D G "STANDARD_INTS" 13 419 "__USB_UIF_STALL|__USB_UIF_IDLE|__USB_UIF_TOKEN|__USB_UIF_ACTIVE|__USB_UIF_RESET"
D G "__USB_UCFG_UTEYE" 13 422 "0x80"
D G "__USB_UCFG_UOEMON" 13 424 "0x40"
D G "__USB_UCFG_UPUEN" 13 426 "0x10"
D G "__USB_UCFG_UTRDIS" 13 428 "0x08"
D G "__USB_UCFG_FSEN" 13 430 "0x04"
D G "__USB_UCFG_MY_UPUEN" 13 441 "__USB_UCFG_UPUEN"
D G "__UCFG_VAL_ENABLED__" 13 445 " (__USB_UCFG_MY_UPUEN | __USB_UCFG_FSEN | USB_PING_PONG_MODE)"
D G "__UCFG_VAL_DISABLED__" 13 451 "__USB_UCFG_UTRDIS"
V G "__setup_0_tx_size" 13 457 "int8" "interrupt handler, specific to PIC18Fxx5x peripheral only"
F G "usb_handle_interrupt" 13 460 "void()"
F G "usb_isr_rst" 13 461 "void()"
F G "usb_isr_uerr" 13 462 "void()"
F G "usb_isr_sof" 13 463 "void()"
F G "usb_isr_activity" 13 464 "void()"
F G "usb_isr_uidle" 13 465 "void()"
F G "usb_isr_tok_dne" 13 466 "void()"
F G "usb_isr_stall" 13 467 "void()"
F G "usb_init_ep0_setup" 13 468 "void()"
C L "usb_init_ep0_setup" 13 89 2 "FUNCTION"
F G "usb_kbhit" 13 473 "int8()"
V L "en" 13 473 "int8"
C L "usb_tbe" 13 89 1 "FUNCTION"
F G "usb_tbe" 13 479 "int8(int8 en)"
V L "en" 13 479 "int8"
C L "usb_detach" 13 89 1 "FUNCTION"
F G "usb_detach" 13 485 "void(int8 en)"
C L "usb_detach" 13 89 1 "FUNCTION"
C L "usb_detach" 13 89 1 "FUNCTION"
C L "usb_detach" 13 89 1 "FUNCTION"
C L "usb_detach" 13 89 2 "FUNCTION"
C L "usb_attach" 13 89 1 "FUNCTION"
F G "usb_attach" 13 507 "void(int8 en)"
C L "usb_attach" 13 89 1 "FUNCTION"
C L "usb_attach" 13 89 1 "FUNCTION"
C L "usb_attach" 13 89 1 "FUNCTION"
C L "usb_init_cs" 13 89 1 "FUNCTION"
F G "usb_init_cs" 13 518 "void(int8 en)"
C L "usb_task" 13 89 1 "FUNCTION"
F G "usb_task" 13 524 "void(int8 en)"
C L "usb_task" 13 89 1 "FUNCTION"
C L "usb_init" 13 89 1 "FUNCTION"
F G "usb_init" 13 556 "void(int8 en)"
C L "usb_flush_in" 13 89 1 "FUNCTION"
F G "usb_flush_in" 13 568 "int8(int8 en)"
V L "endpoint" 13 568 "int8"
V L "len" 13 568 "int16"
V L "tgl" 13 568 "USB_DTS_BIT"
V L "i" 13 570 "int8"
C L "usb_flush_in" 13 89 1 "FUNCTION"
C L "usb_flush_in" 13 89 1 "FUNCTION"
C L "usb_flush_in" 13 89 1 "FUNCTION"
C L "usb_flush_in" 13 89 1 "FUNCTION"
C L "usb_flush_in" 13 89 2 "FUNCTION"
C L "usb_flush_in" 13 89 2 "FUNCTION"
C L "usb_flush_in" 13 89 1 "FUNCTION"
C L "usb_put_packet" 13 89 1 "FUNCTION"
F G "usb_put_packet" 13 626 "int8(int16 len,USB_DTS_BIT tgl)"
V L "endpoint" 13 626 "int8"
V L "ptr" 13 626 "*int8"
V L "len" 13 626 "int16"
V L "tgl" 13 626 "USB_DTS_BIT"
V L "buff_add" 13 628 "*int8"
C L "usb_put_packet" 13 89 2 "FUNCTION"
C L "usb_flush_out" 13 89 1 "FUNCTION"
F G "usb_flush_out" 13 648 "void(*int8 ptr,int16 len,USB_DTS_BIT tgl,*int8 ptr,int16 max)"
V L "endpoint" 13 648 "int8"
V L "tgl" 13 648 "USB_DTS_BIT"
V L "i" 13 650 "int8"
V L "len" 13 651 "int16"
C L "usb_flush_out" 13 89 1 "FUNCTION"
C L "usb_flush_out" 13 89 1 "FUNCTION"
C L "usb_flush_out" 13 89 1 "FUNCTION"
C L "usb_flush_out" 13 89 1 "FUNCTION"
C L "usb_flush_out" 13 89 1 "FUNCTION"
C L "usb_flush_out" 13 89 2 "FUNCTION"
C L "usb_rx_packet_size" 13 89 1 "FUNCTION"
F G "usb_rx_packet_size" 13 694 "int16(USB_DTS_BIT tgl,*int8 ptr,int16 max)"
V L "endpoint" 13 694 "int8"
C L "usb_get_packet_buffer" 13 89 17 "FUNCTION"
F G "usb_get_packet_buffer" 13 720 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 13 720 "int8"
V L "ptr" 13 720 "*int8"
V L "max" 13 720 "int16"
V L "al" 13 722 "*int8"
V L "st" 13 723 "int8"
V L "i" 13 724 "int16"
C L "usb_get_packet_buffer" 13 89 1 "FUNCTION"
C L "usb_get_packet" 13 89 1 "FUNCTION"
F G "usb_get_packet" 13 742 "int16()"
V L "endpoint" 13 742 "int8"
V L "ptr" 13 742 "*int8"
V L "max" 13 742 "int16"
C L "usb_stall_ep" 13 89 1 "FUNCTION"
F G "usb_stall_ep" 13 751 "void(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 13 751 "int8"
V L "direction" 13 753 "int1"
C L "usb_unstall_ep" 13 89 1 "FUNCTION"
F G "usb_unstall_ep" 13 769 "void(*int8 ptr,int16 max)"
V L "endpoint" 13 769 "int8"
V L "direction" 13 771 "int1"
C L "usb_endpoint_stalled" 13 89 1 "FUNCTION"
F G "usb_endpoint_stalled" 13 791 "int8(int16 max)"
V L "endpoint" 13 791 "int8"
V L "direction" 13 793 "int1"
V L "st" 13 794 "int8"
C L "usb_set_address" 13 89 1 "FUNCTION"
F G "usb_set_address" 13 812 "void()"
V L "address" 13 812 "int8"
C L "usb_set_configured" 13 89 1 "FUNCTION"
F G "usb_set_configured" 13 827 "void(int8 address)"
V L "config" 13 827 "int8"
V L "en" 13 829 "int8"
V L "addy" 13 830 "int16"
V L "new_uep" 13 831 "int8"
V L "len" 13 832 "int16"
V L "i" 13 833 "int8"
C L "usb_set_configured" 13 89 1 "FUNCTION"
C L "usb_set_configured" 13 89 1 "FUNCTION"
C L "usb_set_configured" 13 89 1 "FUNCTION"
C L "usb_disable_endpoint" 13 89 1 "FUNCTION"
F G "usb_disable_endpoint" 13 883 "void()"
V L "en" 13 883 "int8"
C L "usb_disable_endpoint" 13 89 1 "FUNCTION"
C L "usb_disable_endpoint" 13 89 1 "FUNCTION"
C L "usb_disable_endpoints" 13 89 1 "FUNCTION"
F G "usb_disable_endpoints" 13 891 "void(int8 en)"
V L "i" 13 893 "int8"
C L "usb_disable_endpoints" 13 89 1 "FUNCTION"
C L "usb_clear_trn" 13 89 2 "FUNCTION"
F G "usb_clear_trn" 13 906 "void()"
C L "usb_clear_trn" 13 89 2 "FUNCTION"
C L "usb_isr" 13 89 13 "FUNCTION"
F G "usb_isr" 13 928 "void()"
V L "TRNAttempts" 13 930 "int8"
C L "usb_isr" 13 89 1 "FUNCTION"
C L "usb_isr" 13 89 1 "FUNCTION"
C L "usb_isr" 13 89 1 "FUNCTION"
C L "usb_isr" 13 89 1 "FUNCTION"
C L "usb_isr" 13 89 1 "FUNCTION"
C L "usb_isr" 13 89 1 "FUNCTION"
C L "usb_isr_sof" 13 89 1 "FUNCTION"
F G "usb_isr_sof" 13 970 "void()"
C L "usb_isr_sof" 13 89 1 "FUNCTION"
C L "usb_isr_rst" 13 89 6 "FUNCTION"
F G "usb_isr_rst" 13 985 "void()"
C L "usb_isr_rst" 13 89 1 "FUNCTION"
C L "usb_isr_rst" 13 89 1 "FUNCTION"
C L "usb_init_ep0_setup" 13 89 5 "FUNCTION"
F G "usb_init_ep0_setup" 13 1020 "void()"
C L "usb_init_ep0_setup" 13 89 1 "FUNCTION"
C L "usb_isr_uerr" 13 89 7 "FUNCTION"
F G "usb_isr_uerr" 13 1042 "void()"
C L "usb_isr_uerr" 13 89 1 "FUNCTION"
C L "usb_isr_uidle" 13 89 5 "FUNCTION"
F G "usb_isr_uidle" 13 1108 "void()"
C L "usb_isr_uidle" 13 89 2 "FUNCTION"
C L "usb_isr_uidle" 13 89 1 "FUNCTION"
C L "usb_isr_activity" 13 89 6 "FUNCTION"
F G "usb_isr_activity" 13 1128 "void()"
C L "usb_isr_activity" 13 89 1 "FUNCTION"
C L "usb_isr_activity" 13 89 1 "FUNCTION"
C L "usb_isr_activity" 13 89 1 "FUNCTION"
C L "usb_isr_stall" 13 89 5 "FUNCTION"
F G "usb_isr_stall" 13 1148 "void()"
C L "usb_isr_stall" 13 89 1 "FUNCTION"
C L "usb_request_send_response" 13 89 1 "FUNCTION"
F G "usb_request_send_response" 13 1164 "void()"
V L "len" 13 1164 "int8"
F G "usb_request_get_data" 13 1165 "void(int8 len)"
F G "usb_request_stall" 13 1166 "void(int8 len)"
C L "usb_isr_tok_dne" 13 89 13 "FUNCTION"
F G "usb_isr_tok_dne" 13 1182 "void(int8 len)"
V L "en" 13 1184 "int8"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
V L "pidKey" 13 1194 "int8"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 4 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 2 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
C L "usb_isr_tok_dne" 13 89 1 "FUNCTION"
V G "USB_stack_status" 12 167 "TYPE_USB_STACK_STATUS"
V G "USB_address_pending" 12 169 "int8" "save previous state because packets can take several isrs"
V G "usb_getdesc_ptr" 12 170 "int8"
V G "usb_getdesc_len" 12 170 "int8"
C L "usb_put_0len_0" 12 170 1 "FUNCTION"
F G "usb_put_0len_0" 12 176 "void()"
F G "usb_match_registers" 12 177 "void(int8 endpoint,*int16 status,*int16 buffer,*int8 size)"
V L "endpoint" 12 177 "int8"
V L "status" 12 177 "*int16"
V L "buffer" 12 177 "*int16"
V L "size" 12 177 "*int8"
F G "usb_isr_tkn_setup_StandardEndpoint" 12 179 "void()"
F G "usb_isr_tkn_setup_StandardDevice" 12 180 "void()"
F G "usb_isr_tkn_setup_StandardInterface" 12 181 "void()"
F G "usb_Get_Descriptor" 12 185 "void()"
F G "usb_copy_desc_seg_to_ep" 12 186 "void()"
F G "usb_finish_set_address" 12 187 "void()"
V G "USB_Interface" 12 189 "int8[2]" "config state for all of our interfaces, NUM_INTERFACES defined with descriptors"
C L "usb_finish_set_address" 12 170 2 "FUNCTION"
F G "usb_enumerated" 12 194 "int8()"
C L "usb_wait_for_enumeration" 12 170 1 "FUNCTION"
F G "usb_wait_for_enumeration" 12 200 "void()"
C L "usb_puts" 12 170 1 "FUNCTION"
F G "usb_puts" 12 206 "int8()"
V L "endpoint" 12 206 "int8"
V L "ptr" 12 206 "*int8"
V L "len" 12 206 "int16"
V L "timeout" 12 206 "int8"
V L "i" 12 207 "int16"
V L "res" 12 208 "int1"
V L "this_packet_len" 12 209 "int16"
V L "packet_size" 12 210 "int16"
V L "timeout_1us" 12 211 "int32"
C L "usb_puts" 12 170 2 "FUNCTION"
C L "usb_puts" 12 170 1 "FUNCTION"
C L "usb_puts" 12 170 2 "FUNCTION"
C L "usb_puts" 12 170 1 "FUNCTION"
C L "usb_puts" 12 170 1 "FUNCTION"
C L "usb_puts" 12 170 1 "FUNCTION"
C L "usb_gets" 12 170 1 "FUNCTION"
F G "usb_gets" 12 255 "int16()"
V L "endpoint" 12 255 "int8"
V L "ptr" 12 255 "*int8"
V L "max" 12 255 "int16"
V L "timeout" 12 255 "int16"
V L "ret" 12 256 "int16"
V L "to" 12 257 "int16"
V L "len" 12 258 "int16"
V L "packet_size" 12 259 "int16"
V L "this_packet_max" 12 260 "int16"
C L "usb_token_reset" 12 170 3 "FUNCTION"
F G "usb_token_reset" 12 291 "void()"
V L "i" 12 293 "int8"
C L "usb_token_reset" 12 170 1 "FUNCTION"
C L "usb_token_reset" 12 170 1 "FUNCTION"
C L "usb_token_reset" 12 170 1 "FUNCTION"
C L "usb_token_reset" 12 170 1 "FUNCTION"
D G "usb_put_0len_0" 12 315 "() usb_request_send_response(0)"
C L "usb_endpoint_is_valid" 12 170 10 "FUNCTION"
F G "usb_endpoint_is_valid" 12 328 "int8(int8 endpoint)"
V L "endpoint" 12 328 "int8"
V L "direction" 12 330 "int1"
C L "usb_endpoint_is_valid" 12 170 1 "FUNCTION"
C L "usb_endpoint_is_valid" 12 170 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 12 170 1 "FUNCTION"
F G "usb_isr_tok_in_dne" 12 342 "void()"
V L "endpoint" 12 342 "int8"
C L "usb_isr_tok_in_dne" 12 170 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 12 170 1 "FUNCTION"
C L "usb_isr_tok_out_dne" 12 170 1 "FUNCTION"
F G "usb_isr_tok_out_dne" 12 355 "void(int8 endpoint)"
V L "endpoint" 12 355 "int8" "TODO:"
C L "usb_isr_tok_out_dne" 12 170 2 "FUNCTION"
C L "usb_isr_tok_out_dne" 12 170 1 "FUNCTION"
C L "usb_isr_tok_out_dne" 12 170 2 "FUNCTION"
C L "usb_isr_tok_setup_dne" 12 170 2 "FUNCTION"
F G "usb_isr_tok_setup_dne" 12 380 "void(int8 endpoint)"
C L "usb_isr_tok_setup_dne" 12 170 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 12 170 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 12 170 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 12 170 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardDevice" 12 433 "void(int8 endpoint)"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 12 170 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardInterface" 12 512 "void(int8 endpoint)"
V L "curr_config" 12 513 "int8"
C L "usb_isr_tkn_setup_StandardInterface" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 12 170 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 12 170 3 "FUNCTION"
C L "usb_isr_tkn_setup_StandardEndpoint" 12 170 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardEndpoint" 12 572 "void()"
C L "usb_Get_Descriptor" 12 170 26 "FUNCTION"
F G "usb_Get_Descriptor" 12 670 "void()"
C L "usb_Get_Descriptor" 12 170 1 "FUNCTION"
C L "usb_Get_Descriptor" 12 170 1 "FUNCTION"
C L "usb_Get_Descriptor" 12 170 1 "FUNCTION"
C L "usb_Get_Descriptor" 12 170 1 "FUNCTION"
C L "usb_Get_Descriptor" 12 170 3 "FUNCTION"
C L "usb_finish_set_address" 12 170 11 "FUNCTION"
F G "usb_finish_set_address" 12 744 "void()"
C L "usb_finish_set_address" 12 170 1 "FUNCTION"
C L "usb_finish_set_address" 12 170 1 "FUNCTION"
C L "usb_copy_desc_seg_to_ep" 12 170 3 "FUNCTION"
F G "usb_copy_desc_seg_to_ep" 12 761 "void()"
V L "i" 12 762 "int8"
V L "c" 12 763 "int8"
V G "usb_cdc_line_coding" 9 187 "{int32 dwDTERrate,int8 bCharFormat,int8 bParityType,int8 bDataBits}" "length of time, in ms, of break signal as we received in a SendBreak message."
V G "usb_cdc_break" 9 191 "int16"
V G "usb_cdc_encapsulated_cmd" 9 193 "int8[8]"
V G "usb_cdc_put_buffer" 9 195 "int8[63]"
D G "usb_cdc_put_buffer_free" 9 196 "()  usb_tbe(USB_CDC_DATA_IN_ENDPOINT)"
V G "usb_cdc_put_buffer_nextin" 9 201 "int8"
V G "usb_cdc_get_buffer_status" 9 214 "{int1 got,int8 len,int8 index}"
D G "usb_cdc_get_buffer_status_buffer" 9 217 "usb_ep2_rx_buffer"
V G "usb_cdc_got_set_line_coding" 9 222 "int1"
V G "usb_cdc_carrier" 9 228 "{int1 dte_present,int1 active,int6 reserved}"
V G "g_LastCDCDataPacketSize" 9 230 "int8"
E G "USB_CDC_OUT_NOTHING" 9 232 "0"
E G "USB_CDC_OUT_COMMAND" 9 232 "1"
E G "USB_CDC_OUT_LINECODING" 9 232 "2"
E G "USB_CDC_WAIT_0LEN" 9 232 "3"
V G "__usb_cdc_state" 9 232 ""
C L "usb_isr_tok_out_cdc_control_dne" 9 183 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_control_dne" 9 242 "void()"
C L "usb_isr_tok_out_cdc_control_dne" 9 183 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 9 183 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 9 183 2 "FUNCTION"
C L "usb_isr_tok_out_cdc_control_dne" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
F G "usb_isr_tkn_cdc" 9 282 "void()"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tkn_cdc" 9 183 1 "FUNCTION"
C L "usb_isr_tok_out_cdc_data_dne" 9 183 1 "FUNCTION"
F G "usb_isr_tok_out_cdc_data_dne" 9 327 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 9 183 1 "FUNCTION"
F G "usb_isr_tok_in_cdc_data_dne" 9 339 "void()"
C L "usb_isr_tok_in_cdc_data_dne" 9 183 1 "FUNCTION"
C L "usb_isr_tok_in_cdc_data_dne" 9 183 1 "FUNCTION"
C L "usb_isr_tok_in_cdc_data_dne" 9 183 1 "FUNCTION"
F G "usb_cdc_flush_out_buffer" 9 349 "void()"
C L "usb_cdc_flush_out_buffer" 9 183 1 "FUNCTION"
F G "usb_cdc_init" 9 357 "void()"
C L "usb_cdc_get_discard" 9 183 2 "FUNCTION"
F G "usb_cdc_get_discard" 9 374 "void()"
F G "usb_cdc_getc" 9 380 "int8()"
V L "c" 9 382 "int8"
F G "usb_cdc_putc_fast" 9 396 "void()"
V L "c" 9 396 "int8"
V L "old_gie" 9 399 "int1" "disable global interrupts"
C L "usb_cdc_putc_fast" 9 183 1 "FUNCTION"
C L "usb_cdc_putc_fast" 9 183 1 "FUNCTION"
C L "usb_cdc_putc_fast" 9 183 3 "FUNCTION"
C L "usb_cdc_putc_fast" 9 183 1 "FUNCTION"
C L "usb_cdc_putc_fast" 9 183 1 "FUNCTION"
F G "usb_cdc_putc" 9 436 "void()"
V L "c" 9 436 "int8"
C L "usb_cdc_putc" 9 183 1 "FUNCTION"
C L "usb_cdc_putc" 9 183 2 "FUNCTION"
C L "usb_cdc_putc" 9 183 2 "FUNCTION"
C L "gethex1_usb" 5 2 7 "FUNCTION"
F G "gethex1_usb" 9 455 "int8(int8 c)"
V L "digit" 9 457 "int8"
F G "gethex_usb" 9 469 "int8()"
V L "lo" 9 470 "int8"
V L "hi" 9 470 "int8"
F G "get_string_usb" 9 480 "void()"
V L "s" 9 480 "*int8"
V L "max" 9 480 "int8"
V L "len" 9 481 "int8"
V L "c" 9 482 "int8"
C L "get_string_usb" 9 488 1 "FUNCTION"
D G "ON" 0 36 "output_high" "DEFINE COMO OUTPUT_HIGH A ON"
D G "OFF" 0 37 "output_low" "DEFINE COMO OUTPUT_LOW A OFF"
V G "dato" 0 39 "int8[250]" "CREAMOS LA VARIABLES CONTENEDORAS DE 250 BYTES"
V G "act_lcd" 0 40 "int1"
V G "c" 0 41 "int8"
V G "nombre" 0 41 "int8"
V G "band1" 0 42 "int8"
V G "l" 0 42 "int8"
V G "k" 0 43 "int32"
V G "j" 0 44 "int16"
V G "d" 0 45 "int16"
V G "menuC" 0 46 "int16[12][12]"
C L "put_enter" 0 34 1 "FUNCTION"
F G "put_enter" 0 50 "void()"
C L "PUT_SCS" 0 34 1 "FUNCTION"
F G "PUT_SCS" 0 51 "void()"
C L "PUT_ECS" 0 34 1 "FUNCTION"
F G "PUT_ECS" 0 52 "void()"
C L "PUT_IPA" 0 34 1 "FUNCTION"
F G "PUT_IPA" 0 53 "void()"
C L "PUT_IPH" 0 34 1 "FUNCTION"
F G "PUT_IPH" 0 54 "void()"
C L "PUT_FWV" 0 34 2 "FUNCTION"
F G "PUT_FWV" 0 56 "void()"
C L "P_E" 0 34 1 "FUNCTION"
F G "P_E" 0 57 "void()"
C L "PUT_e" 0 34 1 "FUNCTION"
F G "PUT_e" 0 58 "void()"
C L "PUT_DIR" 0 34 1 "FUNCTION"
F G "PUT_DIR" 0 61 "void()"
C L "PUT_DIR_FILE" 0 34 1 "FUNCTION"
F G "PUT_DIR_FILE" 0 62 "void()"
C L "PUT_CD_FILE" 0 34 1 "FUNCTION"
F G "PUT_CD_FILE" 0 63 "void()"
C L "PUT_CD_" 0 34 1 "FUNCTION"
F G "PUT_CD_" 0 64 "void()"
C L "PUT_RD_FILE" 0 34 1 "FUNCTION"
F G "PUT_RD_FILE" 0 65 "void()"
C L "PUT_DLD_FILE" 0 34 1 "FUNCTION"
F G "PUT_DLD_FILE" 0 67 "void()"
C L "PUT_MKD_FILE" 0 34 1 "FUNCTION"
F G "PUT_MKD_FILE" 0 69 "void()"
C L "PUT_DLF_FILE" 0 34 1 "FUNCTION"
F G "PUT_DLF_FILE" 0 71 "void()"
C L "PUT_WRF" 0 34 1 "FUNCTION"
F G "PUT_WRF" 0 73 "void(int8 BYTE3,int8 BYTE2,int8 BYTE1,int8 BYTE0)"
V L "BYTE3" 0 73 "int8"
V L "BYTE2" 0 73 "int8"
V L "BYTE1" 0 73 "int8"
V L "BYTE0" 0 73 "int8"
C L "PUT_RDF" 0 34 1 "FUNCTION"
F G "PUT_RDF" 0 74 "void(int8 BYTE3,int8 BYTE2,int8 BYTE1,int8 BYTE0)"
V L "BYTE3" 0 74 "int8"
V L "BYTE2" 0 74 "int8"
V L "BYTE1" 0 74 "int8"
V L "BYTE0" 0 74 "int8"
F G "PUT_OPR_FILE" 0 75 "void()"
F G "PUT_OPW_FILE" 0 77 "void()"
F G "PUT_CLF" 0 80 "void(int8 nombre)"
V L "nombre" 0 80 "int8"
C L "ObtenerDato" 0 34 1 "FUNCTION"
F G "ObtenerDato" 0 83 "void()"
C L "ObtenerDato" 0 34 1 "FUNCTION"
C L "ObtenerDato" 0 34 1 "FUNCTION"
C L "ObtenerDato" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
F G "menu_config" 0 99 "void()"
V L "L1" 0 101 "int8"
V L "L2" 0 102 "int8"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 34 1 "FUNCTION"
C L "menu_config" 0 135 2 "*"
C L "menu_config" 0 137 1 "*"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 137 1 "FUNCTION"
C L "menu_config" 0 156 2 "*"
C L "menu_config" 0 158 1 "*"
C L "menu_config" 0 158 1 "FUNCTION"
C L "menu_config" 0 158 1 "FUNCTION"
C L "menu_config" 0 158 1 "FUNCTION"
C L "menu_config" 0 179 2 "*"
C L "menu_config" 0 181 1 "*"
C L "MAIN" 0 181 1 "FUNCTION"
F G "MAIN" 0 191 "void()" "INICIO DE PROGRAMA"
C L "MAIN" 0 181 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
